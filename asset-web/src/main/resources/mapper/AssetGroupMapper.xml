<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetGroupDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetGroup">
        <id column="id" property="id"/>
        <result column="purpose" property="purpose"/>
        <result column="important_degree" property="importantDegree"/>
        <result column="name" property="name"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name,purpose,important_degree AS importantDegree,gmt_create AS gmtCreate,gmt_modified AS gmtModified, memo,create_user AS createUser ,modify_user AS modifyUser,status
    </sql>

    <sql id="Table_Name">
        asset_group
    </sql>


    <sql id="IF_Base_Column_List">
        <if test=" purpose != null">
            purpose ,
        </if>
        <if test=" importantDegree != null">
            important_degree ,
        </if>
        <if test=" name != null">
            name ,
        </if>
        <if test=" gmtCreate != null">
            gmt_create ,
        </if>
        <if test=" gmtModified != null">
            gmt_modified ,
        </if>
        <if test=" memo != null">
            memo,
        </if>
        <if test=" createUser != null">
            create_user ,
        </if>
        <if test=" modifyUser != null">
            modify_user ,
        </if>
        <if test=" status != null">
            status ,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" purpose != null">
            #{purpose },
        </if>
        <if test=" importantDegree != null">
            #{importantDegree },
        </if>
        <if test=" name != null">
            #{name },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            #{gmtModified },
        </if>
        <if test=" memo != null">
            #{memo },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" modifyUser != null">
            #{modifyUser },
        </if>
        <if test=" status != null">
            #{status },
        </if>
    </sql>

    <sql id="Set_Column_List">
        <if test=" purpose != null">
            purpose = #{purpose },
        </if>
        <if test=" importantDegree != null">
            important_degree = #{importantDegree },
        </if>
        <if test=" name != null">
            name = #{name },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            gmt_modified = #{gmtModified },
        </if>
        <if test=" memo != null">
            memo = #{memo },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" modifyUser != null">
            modify_user = #{modifyUser },
        </if>
        <if test=" status != null">
            status = #{status },
        </if>

    </sql>

    <sql id="Where_Column_List">
        <if test=" purpose != null">
            AND purpose = #{purpose }
        </if>
        <if test=" importantDegree != null">
            AND important_degree = #{importantDegree }
        </if>
        <if test=" name != null">
            AND name = #{name }
        </if>
        <if test=" gmtCreate != null">
            AND gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            AND gmt_modified = #{gmtModified }
        </if>
        <if test=" memo != null">
            AND memo = #{memo },
        </if>
        <if test=" createUser != null">
            AND create_user = #{createUser }
        </if>
        <if test=" modifyUser != null">
            AND modify_user = #{modifyUser }
        </if>
        <if test=" status != null">
            AND status = #{status }
        </if>
        <if test=" status == null">
            AND status = 1
        </if>

    </sql>
    <sql id="Page_List">
        <if test="pageSize != -1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </sql>


    <!--资产条件查询-->
    <sql id="Multiple_Query">
        <if test=" areaIds != null and areaIds.length > 0">
            and area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>

        <if test="assetStatus != null">
            and asset_status = #{assetStatus}
        </if>
        <if test=" categoryModels != null and categoryModels.length > 0">
            and category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" categoryModel != null">
            and category_model = #{categoryModel}
        </if>

    </sql>

    <insert id="insert" parameterType="com.antiy.asset.entity.AssetGroup" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>

    <update id="update" parameterType="com.antiy.asset.entity.AssetGroup">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id} and status = 1
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
        and status = 1
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        update
        <include refid="Table_Name"></include>
        set status = 0
        where id = #{id}
    </delete>

    <select id="getByWhere" resultType="com.antiy.asset.entity.AssetGroup" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
    </select>


    <select id="getAll" resultType="com.antiy.asset.entity.AssetGroup">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
    </select>


    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        agroup
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test=" name != null and name != '' ">
                and agroup.name like #{name}"%"
            </if>
            <if test=" memo != null and memo != '' ">
                and agroup.memo like #{memo}"%"
            </if>
            <if test=" createUser != null">
                and agroup.create_user = #{createUser}
            </if>
            and agroup.status = 1
        </trim>
    </select>

    <select id="findQuery" resultMap="BaseResultMap"
            parameterType="com.antiy.common.base.ObjectQuery">
        select agroup.id, agroup.create_user,agroup.name,agroup.memo,agroup.gmt_create
        from
        <include refid="Table_Name"></include>
        agroup
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test=" name != null and name != '' ">
                and agroup.name like #{name}"%"
            </if>
            <if test=" memo != null and memo != '' ">
                and agroup.memo like #{memo}"%"
            </if>
            <if test=" createUser != null">
                and agroup.create_user = #{createUser}
            </if>
            and agroup.status = 1
        </trim>
        order by agroup.id desc
        <include refid="Page_List"></include>
    </select>


    <select id="findListAssetGroup" resultType="string"
            parameterType="com.antiy.asset.vo.query.AssetGroupQuery">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <include refid="Where_Column_List"></include>
        </trim>
        <include refid="Page_List"></include>
    </select>
    <select id="findPulldownGroup" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">
        select id,name from
        <include refid="Table_Name"></include>
        where
        status = 1
    </select>
    <select id="removeDuplicate" resultType="boolean"
            parameterType="string">
        select
        count(1)
        from
        <include refid="Table_Name"></include>
        where name = #{name} and status = 1
    </select>
    <select id="findCreateUser" resultMap="BaseResultMap">
        select distinct create_user from
        <include refid="Table_Name"></include>
        where
        status = 1
    </select>


    <select id="findPulldownUnconnectedGroup" resultMap="BaseResultMap"
            parameterType="com.antiy.common.base.ObjectQuery">
        select distinct grou.id,grou.`name` from asset_group_relation relation LEFT JOIN asset ON
        asset.id=relation.asset_id
        LEFT JOIN asset_group grou on grou.id=relation.asset_group_id
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
                and asset.id not in (
                select distinct asset_id from
                (
                (select DISTINCT netcard.asset_id from asset_network_card netcard where netcard.status=1
                GROUP BY netcard.asset_id HAVING count(netcard.asset_id) &lt;=
                (select count(id) FROM asset_link_relation where asset_id=netcard.asset_id or
                 parent_asset_id=netcard.asset_id and status=1))
                union
                (select DISTINCT relation.asset_id from asset_link_relation relation
                LEFT JOIN asset_network_equipment net on net.asset_id=relation.asset_id
                where (select count(id) from asset_link_relation where asset_id=net.asset_id or
                parent_asset_id=net.asset_id and status=1) >= net.port_size
                and relation.status=1 and net.status=1)
                union
                (select DISTINCT relation.parent_asset_id from asset_link_relation relation
                LEFT JOIN asset_network_equipment net on net.asset_id=relation.parent_asset_id
                where (select count(id) from asset_link_relation where asset_id=net.asset_id or
                parent_asset_id=net.asset_id and status=1) >= net.port_size
                and relation.status=1 and net.status=1)
                ) as assets
                )
                and grou.`name` is not null
                and asset.status=1
                and grou.status=1
                and relation.status=1
            </trim>
        </where>
    </select>
</mapper>
