<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetSoftwareRelationDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="InstallResultMap" type="com.antiy.asset.entity.AssetSoftwareInstall">
        <id column="id" property="id"/>
        <result column="asset_id" property="assetId"/>
        <result column="area_id" property="areaId"/>
        <result column="install_type" property="installType"/>
        <result column="install_status" property="installStatus"/>
        <result column="install_time" property="installTime"/>
        <result column="category_model_name" property="categoryModelName"/>
        <result column="configure_status" property="configureStatus"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="ip" property="ip"/>
        <result column="mac" property="mac"/>
    </resultMap>
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetSoftwareRelation">
        <id column="id" property="id"/>
        <result column="asset_id" property="assetId"/>
        <result column="software_id" property="softwareId"/>
        <result column="software_status" property="softwareStatus"/>
        <result column="port" property="port"/>
        <result column="configure_status" property="configureStatus"/>
        <result column="install_type" property="installType"/>
        <result column="install_status" property="installStatus"/>
        <result column="install_time" property="installTime"/>
        <result column="protocol" property="protocol"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, asset_id, software_id, software_status, port, configure_status, install_type, install_status, install_time, protocol, gmt_create, gmt_modified, memo, create_user, modify_user, status
    </sql>

    <sql id="Table_Name">
        asset_software_relation
    </sql>


    <sql id="IF_Base_Column_List">
        <if test=" assetId != null">
            asset_id,
        </if>
        <if test=" softwareId != null">
            software_id,
        </if>
        <if test=" softwareStatus != null">
            software_status,
        </if>
        <if test=" port != null">
            port,
        </if>
        <if test=" configureStatus != null">
            configure_status,
        </if>
        <if test=" installType != null">
            install_type,
        </if>
        <if test=" installStatus != null">
            install_status,
        </if>
        <if test=" installTime != null">
            install_time,
        </if>
        <if test=" protocol != null">
            protocol,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
        <if test=" gmtModified != null">
            gmt_modified,
        </if>
        <if test=" memo != null">
            memo,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" modifyUser != null">
            modify_user,
        </if>
        <if test=" status != null">
            status,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" assetId != null">
            #{assetId },
        </if>
        <if test=" softwareId != null">
            #{softwareId },
        </if>
        <if test=" softwareStatus != null">
            #{softwareStatus },
        </if>
        <if test=" port != null">
            #{port },
        </if>
        <if test=" configureStatus != null">
            #{configureStatus },
        </if>
        <if test=" installType != null">
            #{installType },
        </if>
        <if test=" installStatus != null">
            #{installStatus },
        </if>
        <if test=" installTime != null">
            #{installTime },
        </if>
        <if test=" protocol != null">
            #{protocol },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            #{gmtModified },
        </if>
        <if test=" memo != null">
            #{memo },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" modifyUser != null">
            #{modifyUser },
        </if>
        <if test=" status != null">
            #{status },
        </if>
    </sql>

    <sql id="Set_Column_List">
        <if test=" assetId != null">
            asset_id = #{assetId },
        </if>
        <if test=" softwareId != null">
            software_id = #{softwareId },
        </if>
        <if test=" softwareStatus != null">
            software_status = #{softwareStatus },
        </if>
        <if test=" port != null">
            port = #{port },
        </if>
        <if test=" configureStatus != null">
            configure_status = #{configureStatus },
        </if>
        <if test=" installType != null">
            install_type = #{installType },
        </if>
        <if test=" installStatus != null">
            install_status = #{installStatus },
        </if>
        <if test=" installTime != null">
            install_time = #{installTime },
        </if>
        <if test=" protocol != null">
            protocol = #{protocol },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            gmt_modified = #{gmtModified },
        </if>
        <if test=" memo != null">
            memo = #{memo },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" modifyUser != null">
            modify_user = #{modifyUser },
        </if>
        <if test=" status != null">
            status = #{status },
        </if>
    </sql>
    <sql id="Where_Column_List">
        <if test=" assetId != null">
            and asset_id = #{assetId }
        </if>
        <if test=" softwareId != null">
            and software_id = #{softwareId }
        </if>
        <if test=" softwareStatus != null">
            and software_status = #{softwareStatus }
        </if>
        <if test=" protocol != null">
            and protocol = #{protocol }
        </if>
        <if test=" port != null">
            and port = #{port}
        </if>
        <if test=" install_type != null">
            and install_type = #{installType }
        </if>
        <if test=" install_status != null">
            and install_status = #{installStatus}
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            and gmt_modified = #{gmtModified }
        </if>
        <if test=" memo != null">
            and memo = #{memo }
        </if>
        <if test=" createUser != null">
            and create_user = #{createUser }
        </if>
        <if test=" modifyUser != null">
            and modify_user = #{modifyUser }
        </if>
        <if test=" status != null">
            and status = #{status }
        </if>
    </sql>

    <!--资产条件查询-->
    <sql id="Multiple_Query">
        <if test="operationSystems!=null and operationSystems.size()>0">
            and asset.operation_system in
            <foreach index="index" item="item" collection="operationSystems" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="areaIds!=null and areaIds.length>0">
            and asset.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="categoryModels!=null and categoryModels.size()>0">
            and asset.category_model in
            <foreach index="index" item="item" collection="categoryModels" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" multipleQuery != null and multipleQuery != ''">
            and (asset.name LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or asset.number LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or asset_network_card.ip_address like binary
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or asset_network_card.mac_address like binary
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            )
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset.asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        <if test="installType != null ">
            and if (asset_software_relation.install_type is null ,asset.install_type = #{installType},
            asset_software_relation.install_type = #{installType})
        </if>
        <if test="installStatus != null">
            <choose>
                <when test="installStatus == 1">
                    and asset_software_relation.install_status is null
                </when>
                <otherwise>
                    and asset_software_relation.install_status =#{installStatus}
                </otherwise>
            </choose>
        </if>
        and asset.status = 1
    </sql>

    <insert id="insert" parameterType="com.antiy.asset.entity.AssetSoftwareRelation" useGeneratedKeys="true"
            keyProperty="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>

    <update id="update" parameterType="com.antiy.asset.entity.AssetSoftwareRelation">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultType="com.antiy.asset.entity.AssetSoftwareRelation" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"></include>
        where id = #{id}
    </delete>

    <select id="getByWhere" resultType="com.antiy.asset.entity.AssetSoftwareRelation" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
    </select>


    <select id="getAll" resultType="com.antiy.asset.entity.AssetSoftwareRelation">
        select *
        from
        <include refid="Table_Name"></include>
    </select>

    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test=" assetId != null ">
                and asset_id = #{assetId}"%"
            </if>
            <if test=" softwareId != null ">
                and software_id = #{softwareId}"%"
            </if>
            <if test=" softwareStatus != null ">
                and software_status = #{softwareStatus}"%"
            </if>
            and status = 1
        </trim>
    </select>

    <select id="findQuery" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test=" assetId != null ">
                and asset_id = #{assetId}"%"
            </if>
            <if test=" softwareId != null ">
                and software_id = #{softwareId}"%"
            </if>
            <if test=" softwareStatus != null ">
                and software_status = #{softwareStatus}"%"
            </if>
            and status = 1
        </trim>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <!-- 根据资产主键查询软件信息 -->
    <select id="getSoftByAssetId" resultType="com.antiy.asset.entity.AssetSoftware" parameterType="java.lang.Integer">
        select
            asoft.id,
            asoft.size,
            asoft.operation_system as operationSystem,
            asoft.category_model as categoryModel,
            a.name as categoryModelName,
            asoft.name,
            asoft.upload_software_name as uploadSoftwareName,
            asoft.path,
            asoft.version,
            asoft.manufacturer,
            asoft.description,
            asoft.software_label as softwarelabel,
            asoft.software_status as softwarestatus,
            asoft.authorization,
            asoft.report_source as reportSource,
            asoft.language,
            asoft.release_time as releaseTime,
            asoft.publisher,
            asoft.gmt_create as gmtCreate,
            asoft.memo,
            asoft.gmt_modified as gmtModified,
            asl.license_secret_key as licenseSecretKey,
            asoft.status
        from
        asset_software_relation asoftrel
        left join asset_software_license asl on asoftrel.id = asl.software_id
        left join asset_software asoft on asoftrel.software_id = asoft.id
        left join asset_category_model a on asoft.category_model = a.id
        where
        asset_id = #{assetid}
        and asoft.id is not null
        and asoftrel.status = 1
        and asoftrel.install_status = 5
        order by install_time desc
    </select>

    <select id="getSimpleSoftwareByAssetId" resultType="com.antiy.asset.vo.response.SoftwareResponse"
            parameterType="com.antiy.asset.vo.query.AssetSoftwareQuery">
        select
        asoft.business_id softwareId,
        asoft.product_name productName,
        asoft.supplier supplier,
        asoft.version version,
        asoftrel.gmt_create linkTime
        from
        asset_software_relation asoftrel
        left join asset_hard_soft_lib asoft on asoftrel.software_id = asoft.business_id
        where
        asset_id = #{assetId}
        and asoft.business_id is not null
        and asoftrel.status = 1
        and asoft.status = 1
        <if test="pageSize != -1">
            limit #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <select id="countSoftwareByAssetId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select
        count(1) count
        from
        asset_software_relation asoftrel
        left join asset_hard_soft_lib asoft on asoftrel.software_id = asoft.business_id
        where
        asset_id = #{assetId}
        and asoft.business_id is not null
        and asoftrel.status = 1
        and asoft.status = 1
    </select>

    <select id="countAssetBySoftId" resultType="int" parameterType="int">
        SELECT
        count(1)
        FROM
        <include refid="Table_Name"></include>
        WHERE
        software_id = #{softId}
    </select>

    <select id="findOS" resultType="string" parameterType="com.antiy.common.base.ObjectQuery">
        SELECT DISTINCT
        operation_system
        FROM
        asset
        <where>
            operation_system IS NOT NULL
            AND STATUS = 1
            <if test="areaIds != null and areaIds.size() > 0">
                and area_id in
                <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>


    <select id="countSoftwareRelAsset" resultType="java.util.HashMap">
        select software_id as id,count(1) as name from asset_software_relation
        <where>
            status = 1
            and software_status !=8
            and install_status = 5
            <if test="softwareIds != null and softwareIds.size() > 0">
                and software_id in
                <foreach item="softwareId" collection="softwareIds" open="(" separator="," close=")">
                    #{softwareId}
                </foreach>
            </if>
        </where>
        group by software_id
    </select>

    <delete id="deleteSoftwareRelAsset" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"/>
        <where>
            <if test="assetId != null">
                and asset_id = #{assetId}
            </if>
            <if test="softwareId != null">
                and software_id = #{softwareId}
            </if>

        </where>
    </delete>

    <select id="getAllReleationId" resultType="java.lang.Integer">
        select id from
        <include refid="Table_Name"/>
        <where>
            and status=1
            <if test="assetId != null">
                and asset_id = #{assetId}
            </if>
            <if test="softwareId != null">
                and software_id = #{softwareId}
            </if>

        </where>
    </select>
    <delete id="deleteByAssetId" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"></include>
        where asset_id = #{id}
    </delete>

    <!--变更软件状态-->
    <update id="changeSoftwareStatus" parameterType="java.util.Map">
        update
        <include refid="Table_Name"></include>
        set
        software_status = #{targetStatus},
        gmt_modified = #{gmtModified},
        modify_user = #{modifyUser}
        where `software_id` in
        <foreach item="softwareId" index="index" collection="ids" open="(" separator="," close=")">
            #{softwareId}
        </foreach>
    </update>
    <!--变更软件状态-->
    <update id="updateByAssetId" parameterType="com.antiy.asset.entity.AssetSoftwareRelation">
        update
        <include refid="Table_Name"></include>
        set
        configure_status = 3
        where `software_id` = #{softwareId} and asset_id = #{assetId}

    </update>

    <update id="installArtificial" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";" index="index">
            update
            asset_software_relation
            set install_status = #{item.installStatus}, install_time = #{item.installTime}
            where id = #{item.id}
        </foreach>
    </update>
    <update id="installAauto" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";" index="index">
            update
            asset_software_relation
            set install_status = #{item.installStatus}
            where id = #{item.id}
        </foreach>
    </update>

    <update id="installSoftware" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update
            asset_software_relation
            set
            install_type = #{item.installType},
            install_status = #{item.installStatus},
            install_time = #{item.installTime},
            gmt_modified = #{item.gmtModified},
            modify_user = #{item.modifyUser}
            where id = #{item.id}
        </foreach>
    </update>

    <select id="getReleationByAssetId" resultType="com.antiy.asset.entity.AssetSoftwareRelation"
            parameterType="java.lang.Integer">
        select
        a.id,
        a.asset_id as assetId,
        a.software_id as softwareId,
        a.port,
        a.protocol,
        a.software_status as softwarestatus,
        b.license_secret_key as licenseSecretKey,
        a.install_type as installType,
        a.install_status as installStatus,
        a.memo
        from
        asset_software_relation a left join asset_software_license b on a.id = b.software_id and b.status = 1
        where
        a.asset_id = #{id}
        and a.status = 1
        order by id desc
    </select>

    <select id="queryInstallList" resultMap="InstallResultMap" parameterType="com.antiy.asset.vo.query.InstallQuery">
        select distinct
        asset_software_relation.id,
        asset.id as asset_id,
        asset.asset_group,
        asset.category_model,
        asset.first_enter_nett,
        asset.number,
        asset.name,
        asset.area_id,
        asset.operation_system,
        asset_category_model.name as category_model_name,
        asset.manufacturer,
        asset.asset_status,
        asset.gmt_modified,
        asset_software_relation.install_time,
        (select group_concat(ip_address) from asset_network_card where asset_id = asset.id and status = 1) as ip,
        (select group_concat(mac_address) from asset_network_card where asset_id = asset.id and status = 1) as mac,
        case
        when asset_software_relation.install_type is not null
        then asset_software_relation.install_type
        else asset.install_type end as
        install_type,
        case
        when asset_software_relation.install_status is null
        then 1
        else asset_software_relation.install_status end as
        install_status
        from
        asset asset
        left join asset_network_card asset_network_card on asset.id = asset_network_card.asset_id and
        asset_network_card.status = 1 and asset.status=1
        left join asset_category_model asset_category_model on asset.category_model = asset_category_model.id
        left join asset_software_relation asset_software_relation on asset.id=asset_software_relation.asset_id and
        asset_software_relation.software_id=#{softwareId} and asset_software_relation.status=1
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        group by asset.id
        order by asset.first_enter_nett desc
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <select id="queryInstallCount" resultType="java.lang.Integer"
            parameterType="com.antiy.asset.vo.query.InstallQuery">
        SELECT
        count( 1 )
        FROM
        (
        SELECT DISTINCT
        asset.id AS asset_id
        FROM
        asset asset
        LEFT JOIN asset_network_card asset_network_card ON asset.id = asset_network_card.asset_id
        AND asset_network_card.STATUS = 1
        AND asset.STATUS = 1
        LEFT JOIN asset_category_model asset_category_model ON asset.category_model = asset_category_model.id
        LEFT JOIN asset_software_relation asset_software_relation ON asset.id = asset_software_relation.asset_id
        AND asset_software_relation.software_id = #{softwareId}
        AND asset_software_relation.STATUS = 1
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        GROUP BY
        asset.id
        ORDER BY
        asset.first_enter_nett DESC

        ) t

    </select>
    <delete id="updateConfigStatusByAssetId" parameterType="com.antiy.asset.entity.AssetSoftwareRelation">
        update
        <include refid="Table_Name"></include>
        set install_status = #{installStatus},gmt_modified = #{gmtModified}, modify_user = #{modifyUser}
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="assetId != null ">
                and asset_id = #{assetId}
            </if>
            <if test="softwareId != null ">
                and software_id = #{softwareId}
            </if>
        </trim>

    </delete>

    <!--查询资产上安装的软件，用于下发智甲-->
    <select id="findInstalledSoft" resultType="com.antiy.asset.entity.AssetSoftware"
            parameterType="java.lang.String">
        select
        b.id,
        b.size,
        b.name,
        b.manufacturer,
        b.version,
        b.operation_system as operationSystem,
        b.protocol,
        b.service_life as serviceLife,
        b.buy_date as buyDate,
        b.release_time as releaseTime,
        b.serial,
        b.path,
        b.md5_code as md5Code,
        b.check_type as checkType,
        b.manual_doc_url as manualDocUrl,
        b.manual_doc_name as manualDocName
        from
        asset_software_relation a
        left join asset_software b on a.software_id = b.id
        where
        asset_id = #{assetId}
        and a.install_status = 5
        and b.status = 1
        and a.status = 1
    </select>
    <!--检查资产是否能进行安装-->
    <select id="checkInstalled" resultType="java.lang.Integer">
        select count(1) count from asset_software_relation where software_id = #{softwareId} and asset_id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and install_status in (1,2,5,6)
        and status = 1
    </select>

    <select id="findInstallStatus" resultType="java.lang.Integer">
        select install_status
        from
        <include refid="Table_Name"/>
        where software_id = #{softwareId} and asset_id = #{assetId}
        and status = 1
    </select>

    <!--查询资产已关联的软件-->
    <select id="queryInstalledList" parameterType="com.antiy.common.base.QueryCondition"
            resultType="com.antiy.asset.vo.response.AssetSoftwareInstallResponse">
        SELECT
          t1.id,
          t1.software_id as softwareId,
          t2.supplier,
          t2.product_name as productName,
          t2.version,
          t2.soft_platform as softPlatform
        FROM
            asset_software_relation t1
            LEFT JOIN asset_hard_soft_lib t2
            ON t1.software_id = t2.business_id and t2.status = 1
        WHERE
            t1.asset_id = #{primaryKey}
            and t1.status = 1
    </select>
    <select id="queryNameListType" resultType="java.lang.Integer" parameterType="com.antiy.asset.vo.query.InstallQuery">
        select sw_type from baseline_template where id = #{baselineTemplateId}
    </select>
    <!--模板的软件-->
    <select id="querySoftwareIds" resultType="java.lang.Long" parameterType="com.antiy.asset.vo.query.InstallQuery">
        select software_id from baseline_template_software where id = #{baselineTemplateId}
    </select>
    <!--查询可关联的软件-->
    <select id="queryInstallableList" resultType="com.antiy.asset.vo.response.AssetSoftwareInstallResponse">
        select
        business_id as softwareId,
        supplier,
        product_name as productName,
        version,
        soft_platform as softPlatform
        from asset_hard_soft_lib
        where
        status = 1
        <choose>
            <when test="nameListType == 2 and softwareIds != null and softwareIds.size() > 0">
                and business_id not in
                <foreach collection="softwareIds" item="item" open="(" close=")">
                    #{item}
                </foreach>
            </when>
            <when test="nameListType == 3">
                and business_id in
                <foreach collection="softwareIds" item="item" open="(" close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                <if test="!query.isBatch and installedSoftIds != null and installedSoftIds.size() > 0">
                    and business_id not in
                    <foreach collection="installedSoftIds" item="item" open="(" close=")">
                        #{item}
                    </foreach>
                </if>
            </otherwise>
        </choose>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <!--查询可关联的软件数量-->
    <select id="queryInstallableCount" resultType="java.lang.Integer">
        select
        count(1)
        from asset_hard_soft_lib
        where
        status = 1
        <choose>
            <!--排除黑名单和已安装过的软件-->
            <when test="nameListType == 2 and softwareIds != null and softwareIds.size() > 0">
                and business_id not in
                <foreach collection="softwareIds" item="item" open="(" close=")">
                    #{item}
                </foreach>
            </when>
            <when test="nameListType == 3">
                and business_id in
                <foreach collection="softwareIds" item="item" open="(" close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                <if test="!query.isBatch and installedSoftIds != null and installedSoftIds.size() > 0">
                    and business_id not in
                    <foreach collection="installedSoftIds" item="item" open="(" close=")">
                        #{item}
                    </foreach>
                </if>
            </otherwise>
        </choose>
        <if test="query.supplier != null and query.supplier != ''">
            and supplier = #{supplier}
        </if>
        <if test="query.productName != null and query.productName != ''">
            and product_name = #{productName}
        </if>
    </select>
    <!--删除资产与软件的关联关系-->
    <delete id="deleteSoftRealtion">
        update asset_software_relation set status = 0 where asset_id = #{id}
    </delete>
    <!--保存资产软件关系-->
    <insert id="insertBatch" parameterType="com.antiy.asset.entity.AssetSoftwareRelation">
        insert into
        <include refid="Table_Name"></include>
        (
        asset_id,
        software_id,
        gmt_create,
        create_user
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.assetId},
            #{item.softwareId},
            #{item.gmtCreate},
            #{item.createUser}
            )
        </foreach>
    </insert>
</mapper>