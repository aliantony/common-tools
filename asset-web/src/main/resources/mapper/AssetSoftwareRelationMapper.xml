<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetSoftwareRelationDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetSoftwareRelation">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="version" property="version"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="asset_id" property="assetId"/>
        <result column="software_id" property="softwareId"/>
        <result column="software_status" property="softwareStatus"/>
        <result column="port" property="port"/>
        <result column="install_type" property="installType"/>
        <result column="install_status" property="installStatus"/>
        <result column="install_time" property="installTime"/>
        <result column="protocol" property="protocol"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
    </resultMap>
    <!-- 通用查询映射结果 -->
    <resultMap id="InstallResultMap" type="com.antiy.asset.entity.AssetSoftwareInstall">
        <id column="id" property="id"/>
        <result column="asset_id" property="assetId"/>
        <result column="install_type" property="installType"/>
        <result column="install_status" property="installStatus"/>
        <result column="install_time" property="installTime"/>
        <result column="category_model_name" property="categoryModelName"/>
        <result column="configure_status" property="configureStatus"/>
        <result column="ip" property="ip"/>
        <result column="mac" property="mac"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, asset_id, software_id, software_status, port, install_type, install_status, install_time, protocol, gmt_create, gmt_modified, memo, create_user, modify_user, status
    </sql>

    <sql id="Table_Name">
        asset_software_relation
    </sql>


    <sql id="IF_Base_Column_List">
        <if test=" assetId != null">
            asset_id,
        </if>
        <if test=" softwareId != null">
            software_id,
        </if>
        <if test=" softwareStatus != null">
            software_status,
        </if>
        <if test=" port != null">
            port,
        </if>
        <if test=" installType != null">
            install_type,
        </if>
        <if test=" installStatus != null">
            install_status,
        </if>
        <if test=" installTime != null">
            install_time,
        </if>
        <if test=" protocol != null">
            protocol,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
        <if test=" gmtModified != null">
            gmt_modified,
        </if>
        <if test=" memo != null">
            memo,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" modifyUser != null">
            modify_user,
        </if>
        <if test=" status != null">
            status,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" assetId != null">
            #{assetId },
        </if>
        <if test=" softwareId != null">
            #{softwareId },
        </if>
        <if test=" softwareStatus != null">
            #{softwareStatus },
        </if>
        <if test=" port != null">
            #{port },
        </if>
        <if test=" installType != null">
            #{installType },
        </if>
        <if test=" installStatus != null">
            #{installStatus },
        </if>
        <if test=" installTime != null">
            #{installTime },
        </if>
        <if test=" protocol != null">
            #{protocol },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            #{gmtModified },
        </if>
        <if test=" memo != null">
            #{memo },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" modifyUser != null">
            #{modifyUser },
        </if>
        <if test=" status != null">
            #{status },
        </if>
    </sql>
    <sql id="Set_Column_List">
        <if test=" assetId != null">
            asset_id = #{assetId },
        </if>
        <if test=" softwareId != null">
            software_id = #{softwareId },
        </if>
        <if test=" softwareStatus != null">
            software_status = #{softwareStatus },
        </if>
        <if test=" port != null">
            port = #{port },
        </if>
        <if test=" installType != null">
            install_type = #{installType },
        </if>
        <if test=" installStatus != null">
            install_status = #{installStatus },
        </if>
        <if test=" installTime != null">
            install_time = #{installTime },
        </if>
        <if test=" protocol != null">
            protocol = #{protocol },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            gmt_modified = #{gmtModified },
        </if>
        <if test=" memo != null">
            memo = #{memo },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" modifyUser != null">
            modify_user = #{modifyUser },
        </if>
        <if test=" status != null">
            status = #{status },
        </if>
    </sql>

    <sql id="Where_Column_List">
        <if test=" assetId != null">
            and asset_id = #{assetId }
        </if>
        <if test=" softwareId != null">
            and software_id = #{softwareId }
        </if>
        <if test=" softwareStatus != null">
            and software_status = #{softwareStatus }
        </if>
        <if test=" protocol != null">
            and protocol = #{protocol }
        </if>
        <if test=" port != null">
            and port = #{port}
        </if>
        <if test=" install_type != null">
            and install_type = #{installType }
        </if>
        <if test=" install_status != null">
            and install_status = #{installStatus}
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            and gmt_modified = #{gmtModified }
        </if>
        <if test=" memo != null">
            and memo = #{memo }
        </if>
        <if test=" createUser != null">
            and create_user = #{createUser }
        </if>
        <if test=" modifyUser != null">
            and modify_user = #{modifyUser }
        </if>
        <if test=" status != null">
            and status = #{status }
        </if>
    </sql>

    <!--资产条件查询-->
    <sql id="Multiple_Query">

        <if test="areaIds==null and areaIds.length>0">
            and area_id in
            <foreach index="index" item="item" collection="ids" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" multipleQuery != null">
            and (name LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or number LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and ip_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and inner_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and outer_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_safety_equipment b where asset.id = b.asset_id and ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_safety_equipment b where asset.id = b.asset_id and mac like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            )
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        <if test="installType != null ">
            and install_type =#{installType}
        </if>
        <choose>
            <when test="configureStatus == 1">
                and configure_status =#{configureStatus} or configure_status is null
            </when>
            <when test="configureStatus != null and configureStatus != 1">
                and configure_status =#{configureStatus}
            </when>
        </choose>
        <choose>
            <when test="installStatus == 4">
                and install_status =#{installStatus} or install_status is null
            </when>
            <when test="installStatus != null and installStatus != 4">
                and install_status =#{installStatus}
            </when>
        </choose>
    </sql>

    <insert id="insert" parameterType="com.antiy.asset.entity.AssetSoftwareRelation" useGeneratedKeys="true"
            keyProperty="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>

    <update id="update" parameterType="com.antiy.asset.entity.AssetSoftwareRelation">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultType="com.antiy.asset.entity.AssetSoftwareRelation" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"></include>
        where id = #{id}
    </delete>

    <select id="getByWhere" resultType="com.antiy.asset.entity.AssetSoftwareRelation" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
    </select>


    <select id="getAll" resultType="com.antiy.asset.entity.AssetSoftwareRelation">
        select *
        from
        <include refid="Table_Name"></include>
    </select>

    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test=" assetId != null ">
                and asset_id = #{assetId}"%"
            </if>
            <if test=" softwareId != null ">
                and software_id = #{softwareId}"%"
            </if>
            <if test=" softwareStatus != null ">
                and software_status = #{softwareStatus}"%"
            </if>
            and status = 1
        </trim>
    </select>

    <select id="findQuery" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test=" assetId != null ">
                and asset_id = #{assetId}"%"
            </if>
            <if test=" softwareId != null ">
                and software_id = #{softwareId}"%"
            </if>
            <if test=" softwareStatus != null ">
                and software_status = #{softwareStatus}"%"
            </if>
            and status = 1
        </trim>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <!-- 根据资产主键查询软件信息 -->
    <select id="getSoftByAssetId" resultType="com.antiy.asset.entity.AssetSoftware" parameterType="java.lang.Integer">
        select
            asoft.id,
            asoft.size,
            asoft.operation_system as operationsystem,
            asoft.category_model as categorymodel,
            a.name as categorymodelname,
            asoft.category_model as categorymodel,
            asoft.name,
            asoft.upload_software_name as uploadsoftwarename,
            asoft.path,
            asoft.version,
            asoft.manufacturer,
            asoft.description,
            asoft.software_label as softwarelabel,
            asoft.software_status as softwarestatus,
            asoft.authorization,
            asoft.report_source as reportsource,
            asoft.language,
            asoft.release_time as releasetime,
            asoft.publisher,
            asoft.gmt_create as gmtcreate,
            asoft.memo,
            asoft.gmt_modified as gmtmodified,
            asl.license_secret_key as licenseSecretKey,
            asoft.status
        from
            asset_software_relation asoftrel
            left join asset_software_license asl on asoftrel.id = asl.software_id
            left join asset_software asoft on asoftrel.software_id = asoft.id
            left join asset_category_model a on asoft.category_model = a.id
        where
            asset_id = #{assetid}
            and asoft.id is not null
            and asoftrel.status = 1
    </select>

    <select id="getSimpleSoftwareByAssetId" resultMap="BaseResultMap"
            parameterType="com.antiy.asset.vo.query.AssetSoftwareRelationQuery">
        select
        asoft.id as software_id,
        asoft.name,
        asoft.manufacturer,
        asoft.version,
        asoft.operation_system,
        asoftrel.install_time
        from
        asset_software_relation asoftrel
        left join asset_software asoft on asoftrel.software_id = asoft.id
        where
        asset_id = #{assetId}
        and asoft.id is not null
        and asoftrel.status = 1
        and asoft.status = 1
        <if test="pageSize != -1">
            limit #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <select id="countSoftwareByAssetId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select
           count(1)
        from
            asset_software_relation asoftrel
            left join asset_software asoft on asoftrel.software_id = asoft.id
        where
            asset_id = #{assetId}
            and asoftrel.status = 1
            and asoft.status = 1
    </select>

    <select id="countAssetBySoftId" resultType="int" parameterType="int">
        SELECT
        count(1)
        FROM
        <include refid="Table_Name"></include>
        WHERE
        software_id = #{softId}
    </select>

    <select id="findOS" resultType="string" parameterType="com.antiy.common.base.ObjectQuery">
        SELECT DISTINCT
        operation_system
        FROM
        asset
        WHERE
        operation_system IS NOT NULL
        AND STATUS = 1
        and area_id in
        <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="countSoftwareRelAsset" resultType="java.util.HashMap">
        select software_id as id,count(1) as name from asset_software_relation
        <where>
            status = 1
            and software_status !=8
            <if test="softwareIds != null and softwareIds.size() > 0">
                and software_id in
                <foreach item="softwareId" collection="softwareIds" open="(" separator="," close=")">
                    #{softwareId}
                </foreach>
            </if>
        </where>
        group by software_id
    </select>

    <delete id="deleteSoftwareRelAsset" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"/>
        <where>
            <if test="assetId != null">
                and asset_id = #{assetId}
            </if>
            <if test="softwareId != null">
                and software_id = #{softwareId}
            </if>

        </where>
    </delete>

    <select id="getAllReleationId" resultType="java.lang.Integer">
        select id from
        <include refid="Table_Name"/>
        <where>
            and status=1
            <if test="assetId != null">
                and asset_id = #{assetId}
            </if>
            <if test="softwareId != null">
                and software_id = #{softwareId}
            </if>

        </where>
    </select>
    <delete id="deleteByAssetId" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"></include>
        where asset_id = #{id}
    </delete>

    <!--变更软件状态-->
    <update id="changeSoftwareStatus" parameterType="java.util.Map">
        update
        <include refid="Table_Name"></include>
        set
        software_status = #{targetStatus},
        gmt_modified = #{gmtModified},
        modify_user = #{modifyUser}
        where `software_id` in
        <foreach item="softwareId" index="index" collection="ids" open="(" separator="," close=")">
            #{softwareId}
        </foreach>
    </update>

    <update id="installArtificial" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";" index="index">
            update
            asset_software_relation
            set install_status = #{item.installStatus}, install_time = #{item.installTime}
            where id = #{item.id}
        </foreach>
    </update>
    <update id="installAauto" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";" index="index">
            update
            asset_software_relation
            set install_status = #{item.installStatus}
            where id = #{item.id}
        </foreach>
    </update>

    <update id="installSoftware" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update
            asset_software_relation
            set
            install_type = #{item.installType},
            install_status = #{item.installStatus},
            install_time = #{item.installTime},
            gmt_modified = #{item.gmtModified},
            modify_user = #{item.modifyUser}
            where id = #{item.id}
        </foreach>
    </update>

    <select id="getReleationByAssetId" resultType="com.antiy.asset.entity.AssetSoftwareRelation"
            parameterType="java.lang.Integer">
        select
            a.id,
            a.asset_id as assetId,
            a.software_id as softwareId,
            a.port,
            a.protocol,
            a.software_status as softwarestatus,
            b.license_secret_key as licenseSecretKey,
            a.install_type as installType,
            a.install_status as installStatus,
            a.memo
        from
            asset_software_relation a left join asset_software_license b on a.id = b.software_id and b.status = 1
        where
	        a.asset_id = #{id}
	        and a.status = 1
    </select>

    <select id="queryInstallList" resultMap="InstallResultMap" parameterType="com.antiy.asset.vo.query.InstallQuery">
        select distinct * from (select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.number,
        a.name,
        c.name as category_model_name,
        a.manufacturer,
        asset_status,
        a.gmt_modified,
        a.operation_system,
        d.configure_status,
        d.install_status,
        d.install_time,
        case
        when group_concat(b.ip_address) is not null then
        group_concat(b.ip_address)
        when (select concat(inner_ip,',',outer_ip) from asset_network_equipment where asset_id = a.id and status = 1) is
        not
        null then
        (select concat(inner_ip,',',outer_ip) from asset_network_equipment where asset_id = a.id and status = 1)
        when (select ip from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select ip from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as ip,
        case
        when group_concat( b.mac_address ) is not null then
        group_concat( b.mac_address )
        when (select mac_address from asset_network_equipment where asset_id = a.id and status = 1) is not null then
        (select mac_address from asset_network_equipment where asset_id = a.id and status = 1)
        when (select mac from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select mac from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as mac,
        case
        when d.install_type is not null then d.install_type
        else a.install_type end as
        install_type
        from
        asset a
        left join asset_network_card b on a.id = b.asset_id and b.status = 1 and a.status=1
        left join asset_category_model c on a.category_model = c.id
        left join asset_software_relation d on a.id=d.asset_id and d.software_id=#{softwareId} and d.status=1
        where a.operation_system = ( select operation_system from asset_software where id =#{softwareId} and
        status=1 )
        group by a.id
        ) asset
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        order by gmt_modified desc
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <select id="queryInstallCount" resultType="java.lang.Integer"
            parameterType="com.antiy.asset.vo.query.InstallQuery">
        select count(distinct(id)) from (select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.number,
        a.name,
        c.name as category_model_name,
        a.manufacturer,
        asset_status,
        a.gmt_modified,
        a.operation_system,
        d.configure_status,
        d.install_status,
        d.install_time,
        case
        when group_concat(b.ip_address) is not null then
        group_concat(b.ip_address)
        when (select concat(inner_ip,',',outer_ip) from asset_network_equipment where asset_id = a.id and status = 1) is
        not
        null then
        (select concat(inner_ip,',',outer_ip) from asset_network_equipment where asset_id = a.id and status = 1)
        when (select ip from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select ip from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as ip,
        case
        when group_concat( b.mac_address ) is not null then
        group_concat( b.mac_address )
        when (select mac_address from asset_network_equipment where asset_id = a.id and status = 1) is not null then
        (select mac_address from asset_network_equipment where asset_id = a.id and status = 1)
        when (select mac from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select mac from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as mac,
        case
        when d.install_type is not null then d.install_type
        else a.install_type end as
        install_type
        from
        asset a
        left join asset_network_card b on a.id = b.asset_id and b.status = 1 and a.status=1
        left join asset_category_model c on a.category_model = c.id
        left join asset_software_relation d on a.id=d.asset_id and d.software_id=#{softwareId} and d.status=1
        where a.operation_system = ( select operation_system from asset_software where id =#{softwareId} and
        status=1 )
        group by a.id
        ) asset
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
    </select>
</mapper>