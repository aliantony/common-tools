<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetBusinessRelationDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetBusinessRelation">
        <id column="id" property="id"/>
        <result column="asset_business_id" property="assetBusinessId"/>
        <result column="asset_id" property="assetId"/>
        <result column="business_influence" property="businessInfluence"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
        <result column="source" property="source"/>
        <result column="unique_id" property="uniqueId"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, asset_business_id, asset_id, business_influence, gmt_create, gmt_modified, create_user, modify_user, status,source,unique_id
    </sql>

    <sql id="Table_Name">
        asset_business_relation
    </sql>


    <sql id="IF_Base_Column_List">
        <if test=" assetBusinessId != null">
            asset_business_id,
        </if>
        <if test=" uniqueId != null">
            unique_id,
        </if>
        <if test=" source != null">
            source,
        </if>
        <if test=" assetId != null">
            asset_id,
        </if>
        <if test=" businessInfluence != null">
            business_influence,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
        <if test=" gmtModified != null">
            gmt_modified,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" modifyUser != null">
            modify_user,
        </if>
        <if test=" status != null">
            status,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" assetBusinessId != null">
            #{assetBusinessId },
        </if>
        <if test="uniqueId != null">
            #{uniqueId },
        </if>
        <if test=" source != null">
            #{source},
        </if>
        <if test=" assetId != null">
            #{assetId },
        </if>
        <if test=" businessInfluence != null">
            #{businessInfluence },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            #{gmtModified },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" modifyUser != null">
            #{modifyUser },
        </if>
        <if test=" status != null">
            #{status },
        </if>
    </sql>
    <sql id="Business_Base_Colum_List">
        asset_business_id, asset_id, business_influence, gmt_create, create_user,unique_id
    </sql>
    <sql id="Item_Value_Column_List">
            #{item.assetBusinessId },
            #{item.assetId },
            #{item.businessInfluence },
            #{item.gmtCreate },
            #{item.createUser },
            #{item.uniqueId }
    </sql>

    <sql id="Set_Column_List">
        <if test=" assetBusinessId != null">
            asset_business_id = #{assetBusinessId },
        </if>
        <if test=" uniqueId != null">
            unique_id = #{uniqueId },
        </if>
        <if test=" source != null">
            source = #{source },
        </if>
        <if test=" assetId != null">
            asset_id = #{assetId },
        </if>
        <if test=" businessInfluence != null">
            business_influence = #{businessInfluence },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            gmt_modified = #{gmtModified },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" modifyUser != null">
            modify_user = #{modifyUser },
        </if>
        <if test=" status != null">
            status = #{status },
        </if>
    </sql>

    <sql id="Where_Column_List">
        <if test=" assetBusinessId != null">
            and asset_business_id = #{assetBusinessId }
        </if>
        <if test=" uniqueId != null">
            and unique_id = #{uniqueId }
        </if>
        <if test=" source != null">
            and source = #{source }
        </if>
        <if test=" assetId != null">
            and asset_id = #{assetId }
        </if>
        <if test=" businessInfluence != null">
            and business_influence = #{businessInfluence }
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            and gmt_modified = #{gmtModified }
        </if>
        <if test=" createUser != null">
            and create_user = #{createUser }
        </if>
        <if test=" modifyUser != null">
            and modify_user = #{modifyUser }
        </if>
        <if test=" status != null">
            and status = #{status }
        </if>
    </sql>

    <insert id="insert" parameterType="com.antiy.asset.entity.AssetBusinessRelation" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>
    <insert id="insertBatch">
        insert into
        <include refid="Table_Name"></include>
        (asset_id,business_influence,gmt_create,asset_business_id,unique_id,gmt_modified) values
        <foreach collection="assetRelationList" separator="," item="assetRelation">
            (
            #{assetRelation.assetId},#{assetRelation.businessInfluence},#{assetRelation.gmtCreate},#{assetRelation.assetBusinessId},#{assetRelation.uniqueId},#{assetRelation.gmtModified}
            )
        </foreach>
    </insert>
    <update id="deleteByAssetId">
        update
        <include refid="Table_Name"/>
        set status=0
        where asset_id in
        <foreach collection="list" close=")" open="(" separator="," item="item">
            #{item}
        </foreach>
    </update>
    <insert id="insertBatchRelation" parameterType="java.util.List" >
        insert into <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Business_Base_Colum_List"></include>
        </trim>
        values
        <foreach collection="list" separator="," item="item">
            (<include refid="Item_Value_Column_List"/>)
        </foreach>
    </insert>
    <select id="countAssetByBusinessId" resultType="int">
        select  count(*)
        from asset_business_relation  as abr
        inner  join  asset as a
        where abr.asset_id=a.id
        and abr.status=1
        and a.status=1
        and abr.source=1
        and abr.unique_id=#{uniqueId}
        <trim prefix="" suffix="" suffixOverrides="and">
            <if test="multipleQuery != null ">
                and
                a.`name` LIKE CONCAT('%',replace(replace(#{name},'%','\%'),'_','\_'),'%')
                or a.`number` LIKE CONCAT('%',replace(replace(#{number},'%','\%'),'_','\_'),'%')
                or air.`ip` LIKE CONCAT('%',replace(replace(#{ip},'%','\%'),'_','\_'),'%')
                or amr.`mac` LIKE CONCAT('%',replace(replace(#{mac},'%','\%'),'_','\_'),'%')
            </if>
        </trim>
        <if test=" areaIds != null and areaIds.length > 0 ">
            and a.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getByUniqueIdAndAssetId" resultMap="BaseResultMap">
        select  *
        from  asset_business_relation
        where status=1
              and unique_id=#{uniqueId}
              and asset_id=#{assetId}
    </select>
    <update id="deleteByUniqueIdAndAssetId">
        update  asset_business_relation
            set status=0
            where unique_id=#{uniqueId}
             and asset_id in
            <foreach collection="deleteAssetList" open="(" close=")" separator="," item="e">
                #{e}
            </foreach>
    </update>
    <update id="updateBatch">
        <foreach collection="editAsset" item="e" separator=";">
            update  asset_business_relation
              set business_influence=#{e.businessInfluence},
             gmt_modified=#{e.gmtModified}
            where status=1
            and unique_id=#{uniqueId}
            and asset_id=#{e.assetId}
        </foreach>
    </update>
    <update id="deleteByUniqueId" >
        update  asset_business_relation
        set status=0
        where unique_id=#{uniqueId}
    </update>
    <update id="updateSourceByassetId">
        update  asset_business_relation
        set source=1
        where  asset_id=#{assetId}
        and status=1
    </update>
    <select id="queryAssetByBusinessId" resultType="com.antiy.asset.vo.response.AssetBusinessRelationResponse">
        SELECT
        a.id as stringId,
        a.`name`,
        a.`number`,
        a.manufacturer,
        a.asset_group AS assetGroup,
        a.asset_status as assetStatus,
        GROUP_CONCAT( DISTINCT air.ip ) AS ips,
        GROUP_CONCAT( DISTINCT amr.mac ) AS macs,
        ANY_VALUE(abr.business_influence) AS businessInfluence,
        ANY_VALUE(abr.gmt_create) AS gmtCreate
        FROM
        asset_business_relation AS abr
        INNER JOIN asset AS a ON abr.asset_id = a.id
        AND abr.STATUS = 1
        AND a.STATUS = 1
        LEFT JOIN asset_ip_relation AS air ON air.asset_id = abr.asset_id
        AND air.STATUS = 1
        LEFT JOIN asset_mac_relation AS amr ON amr.asset_id = abr.asset_id
        AND amr.STATUS = 1
        WHERE
          abr.unique_id=#{uniqueId}
          and a.asset_status in (5,6)
        <trim prefix="" suffix="" suffixOverrides="and">
            <if test="multipleQuery != null ">
                and
                a.`name` LIKE CONCAT('%',replace(replace(#{name},'%','\%'),'_','\_'),'%')
                or a.`number` LIKE CONCAT('%',replace(replace(#{number},'%','\%'),'_','\_'),'%')
                or air.`ip` LIKE CONCAT('%',replace(replace(#{ip},'%','\%'),'_','\_'),'%')
                or amr.`mac` LIKE CONCAT('%',replace(replace(#{mac},'%','\%'),'_','\_'),'%')
            </if>
        </trim>
        <if test=" areaIds != null and areaIds.length > 0 ">
            and a.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by a.id
    </select>
    <update id="update" parameterType="com.antiy.asset.entity.AssetBusinessRelation" >
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>

    <delete id="deleteById" parameterType="java.lang.String">
        delete from
        <include refid="Table_Name"></include>
        where id = #{id}
    </delete>
    <update id="deleteByAssetIdAndUniqueId">
        update
        <include refid="Table_Name"/>
        set status=0
        where asset_id=#{assetId}
        and unique_id in
        <foreach collection="uniqueIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>
    <update id="updateBatchInfluenceByAssetId">
        update
        <include refid="Table_Name"/>
        set business_influence= case unique_id
        <foreach collection="relationRequests" item="item">
        when #{item.uniqueId} then #{item.businessInfluence}
        </foreach>
        end,
        modify_user= case unique_id
        <foreach collection="relationRequests" item="item">
            when #{item.uniqueId} then #{item.modifyUser}
        </foreach>
        end,
        gmt_modified= case unique_id
        <foreach collection="relationRequests" item="item">
            when #{item.uniqueId} then #{item.gmtModified}
        </foreach>
        end
        where asset_id=#{assetId}
        and unique_id in
        <foreach collection="relationRequests" item="item" open="(" close=")" separator=",">
            #{item.uniqueId}
        </foreach>
    </update>

    <select id="getByWhere" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
    </select>

    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
                </trim>
    </select>

    <select id="findQuery" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <select id="getByAssetId" resultMap="BaseResultMap">
        select  * from
        <include refid="Table_Name"></include>
        where  asset_id=#{assetId}
        and status=1
    </select>
<select id="getBusinessInfoByAssetId" resultType="com.antiy.asset.vo.response.AssetBusinessResponse" parameterType="java.lang.String">
    select ab.id,ab.name,abr.business_influence importance,ab.unique_id uniqueId
    from <include refid="Table_Name"/> abr
    inner join asset_business ab on abr.asset_business_id=ab.id and ab.status=1
    where
    abr.asset_id=#{assetId}
    and abr.status=1
</select>
</mapper>