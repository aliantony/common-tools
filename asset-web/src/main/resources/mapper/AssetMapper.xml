<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetDao">

    <resultMap id="ManufacturerResultMap" type="java.util.HashMap">
        <result property="key" column="manufacturer"/>
        <result property="value" column="num"/>
    </resultMap>
    <resultMap id="StatusResultMap" type="java.util.HashMap">
        <result property="key" column="asset_status"/>
        <result property="value" column="num"/>
    </resultMap>
    <resultMap id="categoryModelResultMap" type="java.util.HashMap">
        <result property="key" column="category_model"/>
        <result property="value" column="num"/>
    </resultMap>
    <resultMap id="installMap" type="java.util.HashMap">
        <result property="key" column="id"/>
        <result property="value" column="install_type"/>
    </resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.Asset">
        <id column="id" property="id"/>
        <result column="business_id" property="businessId"/>
        <result column="asset_group" property="assetGroup"/>
        <result column="asset_business" property="assetBusiness"/>
        <result column="number" property="number"/>
        <result column="name" property="name"/>
        <result column="install_type" property="installType"/>
        <result column="serial" property="serial"/>
        <result column="area_id" property="areaId"/>
        <result column="category_model" property="categoryModel"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="asset_status" property="assetStatus"/>
        <result column="admittance_status" property="admittanceStatus"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="operation_system_name" property="operationSystemName"/>
        <result column="responsible_user_id" property="responsibleUserId"/>
        <result column="location" property="location"/>
        <result column="latitude" property="latitude"/>
        <result column="longitude" property="longitude"/>
        <result column="house_location" property="houseLocation"/>
        <result column="firmware_version" property="firmwareVersion"/>
        <result column="uuid" property="uuid"/>
        <result column="asset_source" property="assetSource"/>
        <result column="importance_degree" property="importanceDegree"/>
        <result column="describle" property="describle"/>
        <result column="first_enter_nett" property="firstEnterNett"/>
        <result column="first_discover_time" property="firstDiscoverTime"/>
        <result column="is_innet" property="isInnet"/>
        <result column="service_life" property="serviceLife"/>
        <result column="buy_date" property="buyDate"/>
        <result column="version" property="version"/>
        <result column="warranty" property="warranty"/>
        <result column="install_template_id" property="installTemplateId"/>
        <result column="baseline_template_id" property="baselineTemplateId"/>
        <result column="baseline_template_correlation_gmt" property="baselineTemplateCorrelationGmt"/>
        <result column="install_template_correlation_gmt" property="installTemplateCorrelationGmt"/>
        <result column="step_node" property="stepNode"/>
        <result column="memo" property="memo"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
        <result column="net_status" property="netStatus"/>
        <result column="is_orphan" property="isOrphan"/>
        <result column="is_borrow" property="isBorrow"/>
        <result column="custom_field" property="customField"/>
        <result column="ips" property="ips"/>
        <result column="macs" property="macs"/>
        <result column="machine_name" property="machineName"/>
        <result column="is_secrecy" property="isSecrecy"/>
        <result column="code" property="code"/>
        <result column="mnv" property="mnv"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, business_id, asset_group, number, name, install_type, serial, area_id, category_model, manufacturer, asset_status, admittance_status, operation_system, operation_system_name, responsible_user_id, location, latitude, longitude, house_location, firmware_version, uuid, asset_source, importance_degree, describle, first_enter_nett, first_discover_time, is_innet, service_life, buy_date, version, warranty, install_template_id, baseline_template_id, baseline_template_correlation_gmt, install_template_correlation_gmt,machine_name, is_secrecy, code, step_node, memo, gmt_create, gmt_modified, create_user, modify_user, status, net_status, is_orphan, custom_field
    </sql>

    <sql id="Table_Name">
        asset
    </sql>


    <sql id="IF_Base_Column_List_ForBatch">

            number,
            step_node,
            name,
            install_type,
            serial,
            area_id,
            category_model,
            manufacturer,
            asset_status,
            admittance_status,
            operation_system,
            operation_system_name,
            responsible_user_id,
            house_location,
            firmware_version,
            uuid,
            asset_source,
            importance_degree,
            describle,
            first_enter_nett,
            first_discover_time,
            is_innet,
            service_life,
            buy_date,
            version,
            warranty,
            install_template_id,
            baseline_template_id,
            baseline_template_correlation_gmt,
            install_template_correlation_gmt,
            memo,
            gmt_create,
            gmt_modified,
            create_user,
            modify_user,
            net_status,
            is_orphan,
            custom_field,
            machine_name,
            is_secrecy,
            code
    </sql>

    <sql id="IF_Value_Column_List_ForBatch">
        #{entity.number },
        #{entity.stepNode },
        #{entity.name },
        #{entity.installType },
        #{entity.serial },
        #{entity.areaId },
        #{entity.categoryModel },
        #{entity.manufacturer },
        #{entity.assetStatus },
        #{entity.admittanceStatus },
        #{entity.operationSystem },
        #{entity.operationSystemName },
        #{entity.responsibleUserId },
        #{entity.houseLocation },
        #{entity.firmwareVersion },
        #{entity.uuid },
        #{entity.assetSource },
        #{entity.importanceDegree },
        #{entity.describle },
        #{entity.firstEnterNett },
        #{entity.firstDiscoverTime },
        #{entity.isInnet },
        #{entity.serviceLife },
        #{entity.buyDate },
        #{entity.version },
        #{entity.warranty },
        #{entity.installTemplateId },
        #{entity.baselineTemplateId },
        #{entity.baselineTemplateCorrelationGmt },
        #{entity.installTemplateCorrelationGmt },
        #{entity.memo },
        #{entity.gmtCreate },
        #{entity.gmtModified },
        #{entity.createUser },
        #{entity.modifyUser },
        #{entity.netStatus },
        #{entity.isOrphan },
        #{entity.customField  },
        #{entity.machineName },
        #{entity.isSecrecy },
        #{entity.code }
    </sql>

    <sql id="Where_Column">
        <if test=" number != null">
            and number = #{number }
        </if>
        <if test=" stepNode != null">
            and step_node = #{stepNode },
        </if>
        <if test=" type != null">
            and type = #{type }
        </if>
        <if test=" name != null">
            and name LIKE binary CONCAT('%',replace(replace(#{name},'%','\%'),'_','\_'),'%')
        </if>
        <if test=" serial != null">
            and serial = #{serial }
        </if>

        <if test=" manufacturer != null">
            and manufacturer = #{manufacturer }
        </if>
        <if test=" assetStatus != null">
            and asset_status = #{assetStatus }
        </if>
        <if test=" operationSystem != null">
            and operation_system = #{operationSystem }
        </if>
        <if test=" operationSystemName != null">
            and operation_system_name = #{operationSystemName }
        </if>
        <if test=" systemBit != null">
            and system_bit = #{systemBit }
        </if>


        <if test=" firmwareVersion != null">
            and firmware_version = #{firmwareVersion }
        </if>
        <if test=" uuid != null">
            and uuid = #{uuid }
        </if>
        <if test=" responsibleUserId != null">
            and responsible_user_id = #{responsibleUserId }
        </if>

        <if test=" assetSource != null">
            and asset_source = #{assetSource }
        </if>
        <if test=" importanceDegree != null">
            and importance_degree = #{importanceDegree }
        </if>

        <if test=" parentId != null">
            and parent_id = #{parentId }
        </if>
        <if test=" tags != null">
            and tags = #{tags }
        </if>
        <if test=" firstEnterNett != null">
            and first_enter_nett = #{firstEnterNett }
        </if>
        <if test=" serviceLife != null">
            and service_life = #{serviceLife }
        </if>
        <if test=" buyDate != null">
            and buy_date = #{buyDate }
        </if>
        <if test=" warranty != null">
            and warranty = #{warranty }
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            and gmt_modified = #{gmtModified }
        </if>


        and status =1

    </sql>

    <sql id="IF_Base_Column_List">
        <if test=" businessId != null">
            business_id,
        </if>
        <if test=" assetGroup != null">
            asset_group,
        </if>
        <if test=" number != null">
            number,
        </if>
        <if test=" name != null">
            name,
        </if>
        <if test=" installType != null">
            install_type,
        </if>
        <if test=" serial != null">
            serial,
        </if>
        <if test=" areaId != null">
            area_id,
        </if>
        <if test=" categoryModel != null">
            category_model,
        </if>
        <if test=" manufacturer != null">
            manufacturer,
        </if>
        <if test=" assetStatus != null">
            asset_status,
        </if>
        <if test=" admittanceStatus != null">
            admittance_status,
        </if>
        <if test=" operationSystem != null">
            operation_system,
        </if>
        <if test=" operationSystemName != null">
            operation_system_name,
        </if>
        <if test=" responsibleUserId != null">
            responsible_user_id,
        </if>
        <if test=" location != null">
            location,
        </if>
        <if test=" houseLocation != null">
            house_location,
        </if>
        <if test=" uuid != null">
            uuid,
        </if>
        <if test=" assetSource != null">
            asset_source,
        </if>
        <if test=" importanceDegree != null">
            importance_degree,
        </if>
        <if test=" describle != null">
            describle,
        </if>
        <if test=" firstEnterNett != null">
            first_enter_nett,
        </if>
        <if test=" firstDiscoverTime != null">
            first_discover_time,
        </if>
        <if test=" isInnet != null">
            is_innet,
        </if>
        <if test=" serviceLife != null">
            service_life,
        </if>
        <if test=" buyDate != null">
            buy_date,
        </if>
        <if test=" version != null">
            version,
        </if>
        <if test=" warranty != null">
            warranty,
        </if>
        <if test=" installTemplateId != null">
            install_template_id,
        </if>
        <if test=" baselineTemplateId != null">
            baseline_template_id,
        </if>
        <if test=" baselineTemplateCorrelationGmt != null">
            baseline_template_correlation_gmt,
        </if>
        <if test=" installTemplateCorrelationGmt != null">
            install_template_correlation_gmt,
        </if>
        <if test=" stepNode != null">
            step_node,
        </if>
        <if test=" netStatus != null">
            net_status,
        </if>
        <if test=" isOrphan != null">
            is_orphan,
        </if>
        <if test=" customField != null">
            custom_field,
        </if>
        <if test=" machineName != null">
            machine_name,
        </if>
        <if test=" isSecrecy != null">
            is_secrecy,
        </if>
        <if test=" code != null">
            code,
        </if>
        <if test=" installDate != null">
            install_date,
        </if>
        <if test=" activiateDate != null">
            activiate_date,
        </if>
        <if test=" expirationReminder != null">
            expiration_reminder,
        </if>
        <if test=" netType != null">
            net_type,
        </if>
        <if test=" isBorrow != null">
            is_borrow,
        </if>
        <if test=" key != null">
            key,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
        <if test=" gmtModified != null">
            gmt_modified,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" modifyUser != null">
            modify_user,
        </if>
        <if test=" memo != null">
            memo,
        </if>
        <if test=" status != null">
            status,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" businessId != null">
            #{businessId },
        </if>
        <if test=" assetGroup != null">
            #{assetGroup },
        </if>
        <if test=" number != null">
            #{number },
        </if>
        <if test=" name != null">
            #{name },
        </if>
        <if test=" installType != null">
            #{installType },
        </if>
        <if test=" serial != null">
            #{serial },
        </if>
        <if test=" areaId != null">
            #{areaId },
        </if>
        <if test=" categoryModel != null">
            #{categoryModel },
        </if>
        <if test=" manufacturer != null">
            #{manufacturer },
        </if>
        <if test=" assetStatus != null">
            #{assetStatus },
        </if>
        <if test=" admittanceStatus != null">
            #{admittanceStatus },
        </if>
        <if test=" operationSystem != null">
            #{operationSystem },
        </if>
        <if test=" operationSystemName != null">
            #{operationSystemName },
        </if>
        <if test=" responsibleUserId != null">
            #{responsibleUserId },
        </if>
        <if test=" location != null">
            #{location },
        </if>
        <if test=" houseLocation != null">
            #{houseLocation },
        </if>
        <if test=" uuid != null">
            #{uuid },
        </if>
        <if test=" assetSource != null">
            #{assetSource },
        </if>
        <if test=" importanceDegree != null">
            #{importanceDegree },
        </if>
        <if test=" describle != null">
            #{describle },
        </if>
        <if test=" firstEnterNett != null">
            #{firstEnterNett },
        </if>
        <if test=" firstDiscoverTime != null">
            #{firstDiscoverTime },
        </if>
        <if test=" isInnet != null">
            #{isInnet },
        </if>
        <if test=" serviceLife != null">
            #{serviceLife },
        </if>
        <if test=" buyDate != null">
            #{buyDate },
        </if>
        <if test=" version != null">
            #{version },
        </if>
        <if test=" warranty != null">
            #{warranty },
        </if>
        <if test=" installTemplateId != null">
            #{installTemplateId },
        </if>
        <if test=" baselineTemplateId != null">
            #{baselineTemplateId },
        </if>
        <if test=" baselineTemplateCorrelationGmt != null">
            #{baselineTemplateCorrelationGmt },
        </if>
        <if test=" installTemplateCorrelationGmt != null">
            #{installTemplateCorrelationGmt },
        </if>
        <if test=" stepNode != null">
            #{stepNode },
        </if>
        <if test=" netStatus != null">
            #{netStatus },
        </if>
        <if test=" isOrphan != null">
            #{isOrphan },
        </if>
        <if test=" customField != null">
            #{customField },
        </if>
        <if test=" machineName != null">
            #{machineName },
        </if>
        <if test=" isSecrecy != null">
            #{isSecrecy },
        </if>
        <if test=" code != null">
            #{code },
        </if>
        <if test=" installDate != null">
            #{installDate },
        </if>
        <if test=" activiateDate != null">
            #{activiateDate },
        </if>
        <if test=" expirationReminder != null">
            #{expirationReminder },
        </if>
        <if test=" netType != null">
            #{netType },
        </if>
        <if test=" isBorrow != null">
            #{isBorrow },
        </if>
        <if test=" key != null">
            #{key },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            #{gmtModified },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" modifyUser != null">
            #{modifyUser },
        </if>
        <if test=" memo != null">
            #{memo },
        </if>
        <if test=" status != null">
            #{status },
        </if>
    </sql>

    <sql id="Set_Column_List">
        <if test=" businessId != null">
            business_id = #{businessId },
        </if>
        <if test=" assetGroup != null">
            asset_group = #{assetGroup },
        </if>
        <if test=" number != null">
            number = #{number },
        </if>
        <if test=" name != null">
            name = #{name },
        </if>
        <if test=" installType != null">
            install_type = #{installType },
        </if>
        <if test=" serial != null">
            serial = #{serial },
        </if>
        <if test=" areaId != null">
            area_id = #{areaId },
        </if>
        <if test=" categoryModel != null">
            category_model = #{categoryModel },
        </if>
        <if test=" manufacturer != null">
            manufacturer = #{manufacturer },
        </if>
        <if test=" assetStatus != null">
            asset_status = #{assetStatus },
        </if>
        <if test=" admittanceStatus != null">
            admittance_status = #{admittanceStatus },
        </if>
        <if test=" operationSystem != null">
            operation_system = #{operationSystem },
        </if>
        <if test=" operationSystemName != null">
            operation_system_name = #{operationSystemName },
        </if>
        <if test=" responsibleUserId != null">
            responsible_user_id = #{responsibleUserId },
        </if>
        <if test=" location != null">
            location = #{location },
        </if>
        <if test=" latitude != null">
            latitude = #{latitude },
        </if>
        <if test=" longitude != null">
            longitude = #{longitude },
        </if>
        <if test=" houseLocation != null">
            house_location = #{houseLocation },
        </if>
        <if test=" firmwareVersion != null">
            firmware_version = #{firmwareVersion },
        </if>
        <if test=" uuid != null">
            uuid = #{uuid },
        </if>
        <if test=" assetSource != null">
            asset_source = #{assetSource },
        </if>
        <if test=" importanceDegree != null">
            importance_degree = #{importanceDegree },
        </if>
        <if test=" describle != null">
            describle = #{describle },
        </if>
        <if test=" firstEnterNett != null">
            first_enter_nett = #{firstEnterNett },
        </if>
        <if test=" firstDiscoverTime != null">
            first_discover_time = #{firstDiscoverTime },
        </if>
        <if test=" isInnet != null">
            is_innet = #{isInnet },
        </if>
        <if test=" serviceLife != null">
            service_life = #{serviceLife },
        </if>
        <if test=" buyDate != null">
            buy_date = #{buyDate },
        </if>
        <if test=" version != null">
            version = #{version },
        </if>
        <if test=" warranty != null">
            warranty = #{warranty },
        </if>
        <if test=" installTemplateId != null">
            install_template_id = #{installTemplateId },
        </if>
        <if test=" baselineTemplateId != null">
            baseline_template_id = #{baselineTemplateId },
        </if>
        <if test=" baselineTemplateCorrelationGmt != null">
            baseline_template_correlation_gmt = #{baselineTemplateCorrelationGmt },
        </if>
        <if test=" installTemplateCorrelationGmt != null">
            install_template_correlation_gmt = #{installTemplateCorrelationGmt },
        </if>
        <if test=" stepNode != null">
            step_node = #{stepNode },
        </if>
        <if test=" memo != null">
            memo = #{memo },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            gmt_modified = #{gmtModified },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" modifyUser != null">
            modify_user = #{modifyUser },
        </if>
        <if test=" status != null">
            status = #{status },
        </if>
        <if test=" netStatus != null">
            net_status = #{netStatus },
        </if>
        <if test=" isOrphan != null">
            is_orphan = #{isOrphan },
        </if>
        <if test=" customField != null">
            custom_field = #{customField },
        </if>
    </sql>

    <sql id="Where_Column_List">
        <if test=" businessId != null">
            and business_id = #{businessId }
        </if>
        <if test=" assetGroup != null">
            and asset_group = #{assetGroup }
        </if>
        <if test=" number != null">
            and number = #{number }
        </if>
        <if test=" name != null">
            and name = #{name }
        </if>
        <if test=" installType != null">
            and install_type = #{installType }
        </if>
        <if test=" serial != null">
            and serial = #{serial }
        </if>
        <if test=" areaId != null">
            and area_id = #{areaId }
        </if>
        <if test=" categoryModel != null">
            and category_model = #{categoryModel }
        </if>
        <if test=" manufacturer != null">
            and manufacturer = #{manufacturer }
        </if>
        <if test=" assetStatus != null">
            and asset_status = #{assetStatus }
        </if>
        <if test=" admittanceStatus != null">
            and admittance_status = #{admittanceStatus }
        </if>
        <if test=" operationSystem != null">
            and operation_system = #{operationSystem }
        </if>
        <if test=" operationSystemName != null">
            and operation_system_name = #{operationSystemName }
        </if>
        <if test=" responsibleUserId != null">
            and responsible_user_id = #{responsibleUserId }
        </if>
        <if test=" location != null">
            and location = #{location }
        </if>
        <if test=" latitude != null">
            and latitude = #{latitude }
        </if>
        <if test=" longitude != null">
            and longitude = #{longitude }
        </if>
        <if test=" houseLocation != null">
            and house_location = #{houseLocation }
        </if>
        <if test=" firmwareVersion != null">
            and firmware_version = #{firmwareVersion }
        </if>
        <if test=" uuid != null">
            and uuid = #{uuid }
        </if>
        <if test=" assetSource != null">
            and asset_source = #{assetSource }
        </if>
        <if test=" importanceDegree != null">
            and importance_degree = #{importanceDegree }
        </if>
        <if test=" describle != null">
            and describle = #{describle }
        </if>
        <if test=" firstEnterNett != null">
            and first_enter_nett = #{firstEnterNett }
        </if>
        <if test=" firstDiscoverTime != null">
            and first_discover_time = #{firstDiscoverTime }
        </if>
        <if test=" isInnet != null">
            and is_innet = #{isInnet }
        </if>
        <if test=" serviceLife != null">
            and service_life = #{serviceLife }
        </if>
        <if test=" buyDate != null">
            and buy_date = #{buyDate }
        </if>
        <if test=" version != null">
            and version = #{version }
        </if>
        <if test=" warranty != null">
            and warranty = #{warranty }
        </if>
        <if test=" installTemplateId != null">
            and install_template_id = #{installTemplateId }
        </if>
        <if test=" baselineTemplateId != null">
            and baseline_template_id = #{baselineTemplateId }
        </if>
        <if test=" baselineTemplateCorrelationGmt != null">
            and baseline_template_correlation_gmt = #{baselineTemplateCorrelationGmt }
        </if>
        <if test=" installTemplateCorrelationGmt != null">
            and install_template_correlation_gmt = #{installTemplateCorrelationGmt }
        </if>
        <if test=" stepNode != null">
            and step_node = #{stepNode }
        </if>
        <if test=" memo != null">
            and memo = #{memo }
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            and gmt_modified = #{gmtModified }
        </if>
        <if test=" createUser != null">
            and create_user = #{createUser }
        </if>
        <if test=" modifyUser != null">
            and modify_user = #{modifyUser }
        </if>
        <if test=" status != null">
            and status = #{status }
        </if>
        <if test=" netStatus != null">
            and net_status = #{netStatus }
        </if>
        <if test=" isOrphan != null">
            and is_orphan = #{isOrphan }
        </if>
        <if test=" customField != null">
            and custom_field = #{customField }
        </if>
    </sql>


    <!--资产条件查询-->
    <sql id="Multiple_Query">
        asset.status = 1
        <if test="netStatus != null">
            and asset.net_status=netStatus
        </if>
        <if test="dependentBusiness != null and dependentBusiness.length >0">
            and abr.asset_business_id in
            <foreach collection="dependentBusiness" item="businessId" open="(" close=")" separator=",">
                #{businessId}
            </foreach>
        </if>
        <if test="unknownAssets == false">
            AND asset.id not in (select id from asset where asset_status = 1 and asset_source in (1,3) and gmt_modified
            = 0)
        </if>
        <if test="unknownAssets == true">
            AND asset.gmt_modified = 0
        </if>
        <if test="stringId != null and stringId != ''">
            and asset.id = #{stringId}
        </if>
        <if test="baselineTemplateId != null and baselineTemplateId != ''">
            and baseline_template_id = #{baselineTemplateId}
        </if>
        <if test=" areaIds != null and areaIds.length > 0 and ids == null">
            and asset.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" areaIds != null and areaIds.length > 0 and ids != null and ids.length > 0">
            and (asset.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
            <choose>
                <!--enterControl 为true表示从工作台进入-->
                <when test="enterControl and assetStatusList[0] != 6">
                    and
                </when>
                <otherwise>
                    or
                </otherwise>
            </choose>
            asset.id in
            <foreach index="index" item="item" collection="ids" open="(" separator="," close=")">
                #{item}
            </foreach>
            )
        </if>

        <if test="areaIds==null and ids != null and ids.length > 0">
            and asset.id in
            <foreach index="index" item="item" collection="ids" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" assetGroup != null and assetGroup != ''">
            and exists (select 1 from asset_group_relation b where asset.id = b.asset_id and b.asset_group_id =
            #{assetGroup} and b.status = 1)
        </if>

        <if test="softwareId != null and softwareId != ''">
            and exists (select 1 from asset_software_relation b where asset.id = b.asset_id and
            b.software_id=#{softwareId} and b.software_status !=8 and b.status=1)
        </if>

        <if test=" multipleQuery != null and multipleQuery.trim != ''">
            <choose>
                <when test="unknownAssets">
                    and (air.ip like
                    CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
                    or replace(amr.mac,':','-') like
                    CONCAT('%',replace(replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),':','-'),'%')
                    )
                </when>
                <otherwise>
                    and (asset.name LIKE
                    CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
                    or asset.number LIKE
                    CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
                    or air.ip like
                    CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
                    or replace(amr.mac,':','-') like
                    CONCAT('%',replace(replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),':','-'),'%')
                    )
                </otherwise>
            </choose>
        </if>
        <if test="assetName != null">
            and asset.name =#{assetName}
        </if>
        <choose>
            <when test="assetGroupQuery">
                <choose>
                    <when test="assetStatusList != null and assetStatusList.size() > 0">
                        and asset.asset_status in
                        <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                            #{assetStatus}
                        </foreach>
                    </when>
                    <otherwise>
                        and asset_status in (3,4,5,6,7,8,9) /*cd01要改*/
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <if test="assetStatusList != null and assetStatusList.size() > 0">
                    and asset.asset_status in
                    <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                        #{assetStatus}
                    </foreach>
                </if>
            </otherwise>
        </choose>
        <if test="assetStatus != null">
            and asset.asset_status = #{assetStatus}
        </if>
        <if test=" categoryModels != null and categoryModels.length > 0">
            and asset.category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" categoryModel != null and categoryModel != ''">
            and asset.category_model = #{categoryModel}
        </if>
        <if test=" admittanceStatus != null">
            and asset.admittance_status = #{admittanceStatus}
        </if>
        <if test=" manufacturer != null and  manufacturer != ''">
            and asset.manufacturer = #{manufacturer}
        </if>
        <if test=" manufacturers != null and manufacturers.size() > 0">
            and asset.manufacturer in
            <foreach collection="manufacturers" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="removeManufacturers != null and removeManufacturers.size() > 0">
            and asset.manufacturer not in
            <foreach collection="removeManufacturers" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" operationSystem != null and operationSystem != ''">
            and asset.operation_system = #{operationSystem}
        </if>
        <if test=" responsibleUserId != null and responsibleUserId != ''">
            and asset.responsible_user_id = #{responsibleUserId }
        </if>
        <if test=" assetSource != null and assetSource != ''">
            and asset.asset_source = #{assetSource }
        </if>
        <if test=" assetSourceList != null and assetSourceList.size() > 0">
            and asset.asset_source in
            <foreach collection="assetSourceList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test=" importanceDegree != null">
            and asset.importance_degree = #{importanceDegree }
        </if>
        <if test="firstEnterStartTime != null">
            and asset.gmt_create &gt;= #{firstEnterStartTime }
        </if>
        <if test=" firstEnterEndTime != null">
            and asset.gmt_create &lt;= #{firstEnterEndTime }
        </if>
        <if test=" serviceLifeStartTime != null">
            and asset.service_life &gt;= #{serviceLifeStartTime }
        </if>
        <if test="serviceLifeEndTime != null">
            and asset.service_life &lt;= #{serviceLifeEndTime }
        </if>
        <if test="assetId != null and assetId != ''">
            and asset.id = #{assetId}
        </if>
        <if test="associateGroup and existAssociateIds != null ">
            and asset.id not in (
            <foreach index="index" item="item" collection="existAssociateIds" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="templateList != null and templateList.size() > 0 ">
            and asset.id in (
            <foreach index="index" item="item" collection="templateList" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </sql>

    <insert id="insert" parameterType="com.antiy.asset.entity.Asset" useGeneratedKeys="true" keyProperty="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>


    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List_ForBatch"></include>
        </trim>
        values

        <foreach collection="list" item="entity" separator=",">
            (
            <include refid="IF_Value_Column_List_ForBatch"></include>
            )

        </foreach>
    </insert>
    <insert id="insertRollbackInfo" parameterType="com.antiy.asset.vo.request.AssetRollbackRequest">
        insert into asset_rollback(asset_id,filed_name,filed_value,rollback_table_name,gmt_create,create_user,name,type)
        values
        <trim suffixOverrides=",">
            <foreach collection="rollBackInfo" item="item" separator=",">
                (#{assetId},#{item.filedName},#{item.filedValue},#{item.rollbackTableName},#{gmtCreate},#{createUser},#{item.name},#{item.operationType})
            </foreach>
        </trim>
    </insert>


    <update id="update" parameterType="com.antiy.asset.entity.Asset">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>

    <update id="deleteById" parameterType="java.lang.Integer">
        update
        <include refid="Table_Name"></include>
        set status = 0
        where id = #{id}
    </update>

    <delete id="deleteAssetById" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"></include>
        where id = #{id}
    </delete>
    <delete id="deleteRollBack">
        update asset_rollback set status=0 where asset_id=#{assetId}
    </delete>

    <select id="getByWhere" resultType="com.antiy.asset.entity.Asset" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
    </select>


    <select id="getAll" resultType="com.antiy.asset.entity.Asset">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
    </select>


    <select id="findCount" resultType="int" parameterType="com.antiy.asset.vo.query.AssetQuery">
        select
        count(1) count from
        (
        select DISTINCT asset.id
        from asset asset
        left join asset_ip_relation air on asset.id = air.asset_id and air.status=1
        left join asset_mac_relation amr on asset.id = amr.asset_id and amr.status=1
        left join asset_user asset_user on asset.responsible_user_id = asset_user.id and asset_user.status=1
        left join asset_business_relation abr on asset.id=abr.asset_id and abr.status=1

        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        ) t
    </select>


    <select id="findCountIp" resultType="int" parameterType="com.antiy.asset.vo.query.AssetQuery">
        SELECT
        count(1) count
        FROM
        asset a
        left JOIN asset_network_equipment b on a.id = b.asset_id and b.`status` = 1
        left JOIN asset_safety_equipment d on a.id = d.asset_id AND d.`status` = 1
        left JOIN asset_network_card c on a.id = c.asset_id and c.`status` = 1
        WHERE
        (b.inner_ip = #{ip}
        OR c.ip_address = #{ip} OR d.ip = #{ip})
        AND a.`status` = 1
        AND a.status !=9
    </select>

    <select id="findQuery" resultType="com.antiy.asset.entity.Asset" parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        ORDER BY
        <if test=" ids != null">
            FIELD(`id`,
            <foreach index="index" item="item" collection="ids" separator=",">
                #{item}
            </foreach>
            ) DESC,
        </if>
        id desc
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <!--变更资产状态-->
    <update id="changeStatus" parameterType="java.util.Map">
        update
        <include refid="Table_Name"></include>
        set
        asset_status = #{targetStatus},
        gmt_modified = #{gmtModified},
        modify_user = #{modifyUser}
        where `id` = #{id}
    </update>

    <select id="checkRepeatAsset" resultType="com.antiy.asset.entity.Asset" parameterType="java.util.List">
        SELECT
        b.id,
        b.uuid
        FROM
        asset_network_card a
        LEFT JOIN asset b ON a.asset_id = b.id AND b.status = 1
        WHERE
        ( a.ip_address, a.mac_address ) IN
        <foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
            <foreach collection="item" open="(" close=")" item="a" separator=",">
                #{a}
            </foreach>
        </foreach>
        AND a.status = 1
    </select>

    <select id="pulldownManufacturer" resultType="string">
        select distinct manufacturer from
        <include refid="Table_Name"></include>
        where status = 1
    </select>


    <select id="findCountByCategoryModel" resultType="int" parameterType="com.antiy.asset.vo.query.AssetQuery">
        select count(1) count
        from
        <include refid="Table_Name"></include>
        where 1 = 1
        <if test=" categoryModels != null and categoryModels.length >0 ">
            and category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" categoryModel != null ">
            and category_model =#{categoryModel}
        </if>
        <if test=" assetStatusList != null">
            and asset_status in
            <foreach collection="assetStatusList" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" areaIds != null and areaIds.length >0 ">
            and area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" osList != null and osList.size() >0 ">
            and operation_system in
            <foreach collection="osList" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test="unknownAssets==true">
            AND asset.id NOT IN ( SELECT id FROM asset WHERE asset_status = 1 AND gmt_modified=0 AND asset_source IN (
            1, 3 ) )
        </if>
        and status=1
    </select>

    <select id="findListAssetByCategoryModel" resultType="com.antiy.asset.entity.Asset"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where 1 = 1
        <if test=" categoryModels != null">
            and category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
    </select>


    <select id="findListAsset" resultMap="BaseResultMap"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select
        asset.id,
        asset.area_id,
        asset.asset_group,
        asset.category_model,
        asset.admittance_status,
        asset.number,
        asset.name as name,
        asset_user.name as responsible_user_name,
        asset.install_type,
        asset.serial,
        asset.manufacturer as manufacturer,
        asset.asset_status,
        asset.operation_system,
        asset.operation_system_name as operation_system_name,
        asset.house_location,
        asset.latitude,
        asset.longitude,
        asset.firmware_version,
        asset.uuid,
        asset.responsible_user_id,
        asset.asset_source,
        asset.importance_degree,
        asset.describle,
        asset.first_enter_nett,
        asset.service_life,
        asset.buy_date,
        asset.warranty,
        asset.install_template_id,
        asset.baseline_template_id,
        asset.gmt_create,
        asset.version,
        GROUP_CONCAT(distinct air.ip) AS ips,
        GROUP_CONCAT(distinct amr.mac) AS macs,
        asset.install_template_id,
        asset.baseline_template_id,
        asset.step_node,
        bt.tp_name as baseline_template_name,
        net_status

        from asset asset
        left join asset_ip_relation air on (asset.id = air.asset_id and air.status = 1)
        left join asset_mac_relation amr on (asset.id = amr.asset_id and amr.status = 1)
        left join asset_user asset_user on asset.responsible_user_id = asset_user.id
        left join baseline_template bt on asset.baseline_template_id = bt.id
        left join asset_business_relation abr on asset.id=abr.asset_id and abr.status=1
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        group by asset.id
        ORDER BY
        <choose>
            <when test="sortOrder != null and sortOrder != ''">
                <choose>
                    <when test="sortName != null and sortName != ''">
                        ${sortName} ${sortOrder}
                    </when>
                    <otherwise>
                        gmt_create ${sortOrder}
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                asset.id desc
            </otherwise>
        </choose>
        <if test=" ids != null and ids.length > 0">
            ,FIELD(asset.`id`,
            <foreach index="index" item="item" collection="ids" separator=",">
                #{item}
            </foreach>
            ) DESC
        </if>
        <if test="!all">
            <if test="pageSize !=-1">
                LIMIT #{pageSize} offset #{pageOffset}
            </if>
            <if test="start!=null and end!=null and pageSize==-1">
                limit #{start},#{end}
            </if>
        </if>
    </select>


    <select id="countManufacturer" resultMap="ManufacturerResultMap" parameterType="java.util.List">
        select manufacturer, count(manufacturer) num from
        <include refid="Table_Name"></include>
        where status=1
        <if test="areaIds != null and areaIds.size() > 0">
            and area_id in
            <foreach item="areaId" collection="areaIds" open="(" separator="," close=")">
                #{areaId}
            </foreach>
        </if>
        <if test=" assetStatusList != null and assetStatusList.size() > 0">
            and asset_status in
            <foreach collection="assetStatusList" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        GROUP BY manufacturer order by num desc
    </select>

    <select id="countStatus" resultMap="StatusResultMap" parameterType="java.util.List">
        select asset_status, count(asset_status) num from
        <include refid="Table_Name"></include>
        where status=1
        <if test="areaIds != null and areaIds.size() > 0">
            and area_id in
            <foreach item="areaId" collection="areaIds" open="(" separator="," close=")">
                #{areaId}
            </foreach>
        </if>
        AND asset.id NOT IN ( SELECT id FROM asset WHERE asset_status = 1 AND gmt_modified=0 AND asset_source IN ( 1, 3
        ) )
        GROUP BY asset_status
    </select>

    <select id="queryAssetCountByAreaIds" resultType="integer">
        select count(1) from
        <include refid="Table_Name"></include>
        where status=1 and asset_status!=9
        <if test="areaIds != null and areaIds.size() > 0">
            and area_id in
            <foreach item="areaId" collection="areaIds" open="(" separator="," close=")">
                #{areaId}
            </foreach>
        </if>
    </select>

    <select id="queryAssetByIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">

        select
        *
        from
        asset
        where
        id in
        <foreach collection="array" open="(" close=")" separator="," item="item" index="index">
            #{item}
        </foreach>

    </select>

    <update id="updateAssetGroupNameWithAssetId" parameterType="map">
        update asset
        SET asset_group = #{assetGroupName} where id = #{assetId}
    </update>

    <update id="updateAssetAreaId">
        update asset
        SET area_id = #{areaId}
        where status=1 and
        area_id in
        <foreach collection="areaIds" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </update>
    <!--查询资产漏洞数量-->
    <select id="queryAssetVulCount" resultType="com.antiy.asset.entity.IdCount"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        SELECT
        t1.asset_id as id,
        count(1) count
        FROM
        vuln_asset_rel t1
        inner JOIN vuln_info v ON t1.vul_id = v.id
        inner join asset t2
        on t1.asset_id =t2.id
        <where>
            and t1.status = 1
            and t1.vul_status!=5
            and t2.status = 1
            AND v.STATUS = 1
            <if test="assetStatusList !=null and !assetStatusList.isEmpty">
                and t2.asset_status in
                <foreach collection="assetStatusList" item="assetStatus" open="(" close=")" separator=",">
                    #{assetStatus}
                </foreach>
            </if>

            <if test="areaIds != null and areaIds.length > 0">
                and t2.area_id IN
                <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                    #{item}
                </foreach>
            </if>
        </where>
        GROUP BY
        t1.asset_id
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <!--查询资产补丁数量-->
    <select id="queryAssetPatchCount" resultType="com.antiy.asset.entity.IdCount"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        SELECT
        asset_id as id,
        count(1) as count
        FROM
        patch_asset_rel t1
        inner join patch_info p ON t1.patch_id = p.id
        inner join asset t2
        on t1.asset_id =t2.id
        WHERE
        1 = 1
        <if test="areaIds != null and areaIds.length > 0">
            and t2.area_id IN
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        and t1.patch_status != 5
        and t1.status = 1
        and t2.status =1
        <if test="assetStatusList !=null and !assetStatusList.isEmpty">
            and t2.asset_status in
            <foreach collection="assetStatusList" item="assetStatus" open="(" close=")" separator=",">
                #{assetStatus}
            </foreach>
        </if>
        AND p.STATUS = 1
        GROUP BY
        t1.asset_id
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <select id="queryAllAssetPatchCount" resultType="java.lang.Integer"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select count(distinct (t1.asset_id)) from patch_asset_rel t1
        inner join patch_info p ON t1.patch_id = p.id
        inner join asset t2
        on t1.asset_id = t2.id
        where t1.patch_status != 5
        <if test="areaIds != null and areaIds.length > 0">
            and t2.area_id IN
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        and t1.status = 1
        and t2.status = 1
        AND p.STATUS = 1
        and t2.asset_status in
        <foreach collection="assetStatusList" separator="," open="(" close=")" item="assetStatus">
            #{assetStatus}
        </foreach>
    </select>

    <select id="queryAllAssetVulCount" resultType="java.lang.Integer"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select count(distinct (t1.asset_id)) from vuln_asset_rel t1
        inner JOIN vuln_info v ON t1.vul_id = v.id
        inner join asset t2 on t1.asset_id = t2.id
        where t1.vul_status != 5
        <if test="areaIds != null and areaIds.length > 0">
            and t2.area_id IN
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        and t1.status = 1
        and t2.status = 1
        AND v.STATUS = 1
        and t2.asset_status in
        <foreach collection="assetStatusList" separator="," open="(" close=")" item="assetStatus">
            #{assetStatus}
        </foreach>
    </select>
    <select id="sortAssetIds" resultType="java.lang.String">
        SELECT
        id
        FROM
        asset
        WHERE
        id IN
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        <if test="assetStatus != null and assetStatus != '' ">
            and asset_status = #{assetStatus}
        </if>
        and status = 1
    </select>

    <select id="queryAlarmAssetList" resultMap="BaseResultMap"
            parameterType="com.antiy.asset.vo.request.AlarmAssetRequest">
        select t2.id,t1.ip_address as ip, t2.number as number,t2.name FROM asset_network_card t1 inner join asset t2
        on t1.asset_id = t2.id
        <where>
            and t1.status=1
            and t2.status=1
            <if test="ip != null and ip != ''">
                and t1.ip_address = #{ip}
            </if>
            <if test="mac != null and mac != ''">
                and t1.mac_address = #{mac}
            </if>
        </where>
    </select>
    <select id="getNumberById" resultType="java.lang.String" parameterType="java.lang.String">
        select
        number
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>

    <select id="getAreaIdById" resultType="java.lang.String" parameterType="java.lang.String">
        select
        area_id
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>

    <select id="existAssetByCategoryModelId" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT
        ( SELECT count( 1 ) FROM  asset WHERE category_model =#{categoryModeId} AND `status` = 1 )
        +
        ( SELECT  count( 1 ) FROM asset_software WHERE category_model =#{categoryModeId} AND `status` = 1)
        as n

    </select>

    <update id="updateStatus" parameterType="com.antiy.asset.entity.Asset">
        update
        <include refid="Table_Name"></include>
        set asset_status = #{assetStatus}
        where id = #{id}
    </update>
    <select id="getUUIDByAssetId" resultType="java.lang.String" parameterType="java.lang.String">
        select
        uuid
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>
    <select id="findAssetIds" resultType="java.lang.String">
        select id from asset
        <if test="areaIds != null and areaIds.size() > 0">
            where area_id in
            <foreach collection="areaIds" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="queryIdsByAssetStatus" resultType="java.lang.Integer">
        select id from asset
        where asset_status = #{assetStatus}
        and status = 1
        and id not in (select id from asset where asset_status = 1 and asset_source in (1,3) and gmt_modified= 0)
        <if test="areaIds != null and areaIds.size() > 0">
            and area_id in
            <foreach collection="areaIds" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
    </select>

    <update id="changeAsset" parameterType="com.antiy.asset.entity.Asset">
        update
        <include refid="Table_Name"></include>
        set
        <if test="number != null and number != ''">
            number = #{number},
        </if>
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="version != null and version != ''">
            version = #{version},
        </if>
        <if test="manufacturer != null and manufacturer != ''">
            manufacturer = #{manufacturer},
        </if>
        <if test="categoryModel != null">
            category_model = #{categoryModel},
        </if>
        <if test="stepNode != null and stepNode != ''">
            step_node = #{stepNode},
        </if>
        <if test="businessId != null and businessId != ''">
            business_id = #{businessId},
        </if>
        <if test=" installTemplateId != null">
            install_template_id = #{installTemplateId },
        </if>
        <if test=" baselineTemplateId != null">
            baseline_template_id = #{baselineTemplateId },
        </if>
        <if test=" baselineTemplateCorrelationGmt != null">
            baseline_template_correlation_gmt = #{baselineTemplateCorrelationGmt},
        </if>
        <if test=" installTemplateCorrelationGmt != null">
            install_template_correlation_gmt = #{installTemplateCorrelationGmt},
        </if>
        <if test=" code != null">
            #{code },
        </if>
        <if test=" netType != null">
            net_type = #{netType },
        </if>
        <if test=" isSecrecy != null">
            is_secrecy = #{isSecrecy },
        </if>
        <if test=" importanceDegree != null">
            importance_degree = #{importanceDegree },
        </if>
        <if test=" machineName != null">
            machine_name = #{machineName },
        </if>
        asset_group = #{assetGroup },
        install_type = #{installType },
        asset_source = #{assetSource},
        serial = #{serial },
        area_id = #{areaId },
        operation_system = #{operationSystem },
        operation_system_name = #{operationSystemName },
        responsible_user_id = #{responsibleUserId },
        house_location = #{houseLocation },
        location = #{location },
        firmware_version = #{firmwareVersion },
        importance_degree = #{importanceDegree },
        describle = #{describle },
        service_life = #{serviceLife},
        buy_date = #{buyDate },
        warranty = #{warranty },
        activiate_date = #{activiateDate },
        is_orphan=#{isOrphan},
        is_borrow = #{isBorrow },
        custom_field=#{customField},
        gmt_modified = #{gmtModified },
        modify_user = #{modifyUser },
        memo = #{memo }
        where id = #{id}
    </update>

    <select id="selectRepeatNumber" resultType="int">
        select count(id) from asset where id!=#{id} and number=#{number}
    </select>
    <select id="selectRepeatName" resultType="int">
        select count(id) from asset where id!=#{id} and name=#{name}
    </select>

    <select id="countAsset" resultType="java.lang.Integer">
        select count(1)
        from
        <include refid="Table_Name"></include>
        where status = 1 and asset_status in (3,4,5,6,7,8,9,10,11)
    </select>
    <!--获取用户所在区域正常资产的数量-->
    <select id="queryNormalCount" resultType="java.lang.Integer" parameterType="com.antiy.asset.vo.query.AssetQuery">
        select count(1) from asset
        where status=1
        and asset_status in
        <foreach collection="assetStatusList" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        <if test="areaIds != null and areaIds.length > 0">
            and area_id in
            <foreach collection="areaIds" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="queryAlarmCountByAssetIds" resultType="com.antiy.asset.entity.IdCount"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select asset_id as id, count(asset_id) as count from
        alarm_current_records
        <if test="ids!=null and ids.length>0">
            WHERE asset_id IN
            <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by asset_id
    </select>
    <select id="findCountMac" resultType="java.lang.Integer">
        SELECT
        count(1) count
        FROM
        asset_mac_relation m LEFT JOIN asset a ON m.asset_id=a.id
        WHERE
        <if test="id!=null ">
            a.id !=#{id} and
        </if>
        a.`status` =1 AND m.`status` =1 and
        upper( ( REPLACE ( REPLACE (mac, ':', '' ), '-', '' ) ) ) = upper( REPLACE ( REPLACE ( #{mac}, ':', '' ), '-',
        '' ) )
    </select>
    <select id="findUuidByAreaIds" resultType="java.lang.String"
            parameterType="java.util.List">
        select uuid from asset
        WHERE area_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        and status = 1 and uuid is not null
        group by id
    </select>

    <select id="findUuidByAssetId" resultType="java.lang.String"
            parameterType="java.util.List">
        select uuid from asset
        WHERE id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        and status = 1
        group by id
    </select>

    <select id="findIdByAreaIds" resultType="java.lang.String"
            parameterType="java.util.List">
        select id from asset
        WHERE area_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        and status = 1 and (asset_status=6 or asset_status=10)
    </select>

    <select id="findAlarmAssetId" resultType="int" parameterType="com.antiy.asset.vo.query.AssetQuery">
        SELECT
        asset_id
        FROM
        asset
        LEFT JOIN alarm_current_records record ON record.asset_id = asset.id
        WHERE
        1 = 1
        AND asset_id IS NOT NULL
        AND asset. STATUS = 1
        <if test=" areaIds != null and areaIds.length > 0 and ids == null">
            and asset.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset.asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        GROUP BY
        asset_id
    </select>

    <select id="findAlarmAssetCount" resultType="int" parameterType="com.antiy.asset.vo.query.AssetQuery">
        select count(*) from(
        SELECT
        asset_id
        FROM
        asset
        LEFT JOIN alarm_current_records record ON record.asset_id = asset.id
        WHERE
        1 = 1
        AND asset_id IS NOT NULL
        AND asset. STATUS = 1
        <if test=" areaIds != null and areaIds.length > 0 and ids == null">
            and asset.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and asset.asset_status in
        <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
            #{assetStatus}
        </foreach>
        GROUP BY
        asset_id
        ) alarm_asset
    </select>

    <select id="findByIds" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT id,asset_status,number,first_enter_nett,gmt_modified,modify_user,status,operation_system_name FROM asset
        WHERE status = 1
        <if test="ids != null and ids.size() > 0">
            and asset.id in
            <foreach index="index" item="item" collection="ids" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <update id="updateAssetBatch" parameterType="java.util.List">
        <foreach collection="assetList" separator=";" item="asset">
            update
            <include refid="Table_Name"></include>
            <set>
                <if test="asset.firstEnterNett != null">
                    first_enter_nett = #{asset.firstEnterNett},
                </if>
                <if test="asset.assetStatus != null">
                    asset_status = #{asset.assetStatus},
                </if>
                <if test="asset.gmtModified != null">
                    gmt_modified = #{asset.gmtModified},
                </if>
                <if test="asset.modifyUser != null">
                    modify_user = #{asset.modifyUser},
                </if>
                <if test="asset.status != null">
                    `status` = #{asset.status}
                </if>
            </set>
            where id = #{asset.id}
        </foreach>
    </update>

    <update id="updateAssetStatusWithLock" parameterType="com.antiy.asset.entity.Asset">
        update
        <include refid="Table_Name"></include>
        set
        asset_status = #{asset.assetStatus}
        where id = #{asset.id}
        and asset_status = #{lastAssetStatus}
        and status = 1
    </update>

    <select id="getByAssetId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        asset.*,
        `user`.`name` AS responsible_user_name,
        `user`.`mobile` As contact_tel,
        anm.net_type_name as netTypeName
        FROM
        <include refid="Table_Name"></include>
        LEFT JOIN asset_user `user` ON `user`.id = asset.responsible_user_id
        left join asset_nettype_manage anm on asset.net_type = anm.id and anm.status = 1
        -- LEFT JOIN asset_hard_soft_lib lib ON lib.business_id = asset.operation_system
        where asset.id=#{id}
    </select>

    <select id="getAssemblyInfoById" parameterType="java.lang.String" resultType="com.antiy.asset.entity.AssetAssembly">
  SELECT
  asset.id as assetId,
	assembly.business_id as businessId,
	assembly.amount,
	lib.product_name AS productName,
	lib.supplier,
	lib.type
FROM
	asset
LEFT JOIN asset_assembly assembly ON assembly.asset_id = asset.id
LEFT JOIN asset_assembly_lib lib ON lib.business_id = assembly.business_id
WHERE
	asset.id = #{id}
  and asset.status=1
  and assembly.status=1
  and lib.status=1
    </select>
    <select id="countCategoryModel" resultMap="categoryModelResultMap">
        SELECT
        category_model,COUNT(category_model) AS num
        FROM
        <include refid="Table_Name"/>
        where status =1
        AND asset_status
        <foreach collection="status" open=" IN (" close=")" separator="," item="s">
            #{s}
        </foreach>
        AND area_id
        <foreach collection="areaIds" open=" IN (" close=")" separator="," item="areaId">
            #{areaId}
        </foreach>

        AND asset.id NOT IN ( SELECT id FROM asset WHERE asset_status = 1 AND gmt_modified=0 AND asset_source IN ( 1, 3
        ) )
        AND category_model is not null
        GROUP BY category_model
    </select>
    <select id="findCountAssetNumber" resultType="int">
        SELECT
        count(1) count
        FROM
        asset a
        WHERE
        number = #{number}
        <if test="id !=null ">
            and id !=#{id}
        </if>
        AND a.`status` = 1
    </select>


    <select id="getAssetStatusListByIds" resultType="com.antiy.asset.entity.Asset">
        SELECT id,name,asset_status as assetStatus
        FROM asset
        WHERE status=1
        AND id IN
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>
    <select id="queryBaselineTemplate" resultType="com.antiy.asset.vo.response.SelectResponse">
       SELECT DISTINCT
            bt.id,
            bt.tp_name as value
        FROM
            asset asset
            INNER JOIN baseline_template bt ON asset.baseline_template_id = bt.id
    </select>
    <select id="getAllSupplierofSafetyEquipment" resultType="java.lang.String">
        SELECT manufacturer
        FROM asset
        where category_model =3 and status=1
        <if test="supplier !=null ">
            and manufacturer LIKE CONCAT('%',replace(replace(#{supplier},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY manufacturer
    </select>
    <select id="getAllNameofSafetyEquipmentBySupplier" resultType="java.lang.String">
        SELECT name
        FROM asset
        where status=1 and category_model =3 AND manufacturer=#{supplier}
        <if test="name !=null">
            and name LIKE CONCAT('%',replace(replace(#{name},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY name
    </select>
    <select id="getAllVersionofSafetyEquipment" resultType="java.lang.String">
        SELECT version
        from asset
        where status=1 and category_model =3 AND manufacturer=#{supplier} AND name=#{name}
        <if test="version !=null">
            and version LIKE CONCAT('%',replace(replace(#{version},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY version
    </select>

    <select id="matchAssetByIpMac" resultType="java.lang.Boolean"
            parameterType="com.antiy.asset.vo.request.AssetMatchRequest">
        SELECT
        IF
        ( count( 1 ) &gt;= 1, TRUE, FALSE ) as result
        FROM
        (
        SELECT
        asset_id,
        ip
        FROM
        asset_ip_relation iprel
        INNER JOIN asset ON iprel.asset_id = asset.id
        WHERE
        iprel.ip = #{ipMacPort.ip}
        AND asset.STATUS = 1
        AND iprel.`status` = 1
        <!--<if test=" areaIds != null and areaIds.size() == 1">-->
        <!--and asset.area_id like concat('',#{areaIds[0]})-->
        <!--</if>-->
        <!--<if test=" areaIds != null and areaIds.size() > 1">-->
        <!--and asset.area_id in-->
        <!--<foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">-->
        <!--#{item}-->
        <!--</foreach>-->
        <!--</if>-->
        ) ip_temp
        INNER JOIN asset_mac_relation macrel ON macrel.asset_id = ip_temp.asset_id
        WHERE
        macrel.`status` = 1 and
        ip = #{ipMacPort.ip}
        <if test="ipMacPort.mac != null">
            AND mac = #{ipMacPort.mac}
        </if>
    </select>
    <select id="queryInstallType" resultType="java.lang.Integer">
        select
        install_type from asset where id = #{assetId}
        and status = 1
    </select>
    <!--获取资产的装机模板id-->
    <select id="getInstallTemplateId" resultType="java.lang.String">
        select install_template_id from asset where id = #{assetId}
    </select>
    <update id="updateRedundantFiled">
        <foreach collection="list" close="" separator=";" item="item">
            <choose>
                <when test="item.type == 'h'.toString() ">
                    update asset
                    SET name = #{item.productName},manufacturer = #{item.supplier}
                    where status=1 and business_id = #{item.businessId}
                </when>
                <when test="item.type == 'o'.toString() ">
                    update asset
                    SET operation_system_name = #{item.productName}
                    where operation_system = #{item.businessId}
                </when>
                <otherwise>
                    select count(1) from asset where business_id = #{item.businessId}
                </otherwise>
            </choose>
        </foreach>
    </update>

    <select id="findUnknownAssetCount" resultType="java.lang.Integer"
            parameterType="com.antiy.asset.vo.request.AssetUnknownRequest">
        select count(1) from asset
        WHERE area_id IN
        <foreach item="item" index="index" collection="areaIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        and status = 1 and asset_source = 1 and asset_status = 1 and gmt_modified = 0
    </select>
    <select id="queryOriginStatus" resultType="java.lang.Integer">
        select origin_status from asset_operation_record where id = (select max(id) from asset_operation_record where target_object_id = #{assetId})
    </select>
    <select id="getByAssetIds" resultType="com.antiy.asset.entity.Asset">
        SELECT id,number,asset_status as assetStatus from asset where
        <if test="assetIdList == null or assetIdList.size() == 0">
            1!=1
        </if>
        <if test="assetIdList !=null and assetIdList.size()>0">
            id in
            <foreach collection="assetIdList" item="assetId" close=")" open="(" separator=",">
                #{assetId}
            </foreach>
        </if>
    </select>
    <update id="updateAssetBaselineTemplate" parameterType="com.antiy.asset.vo.query.AssetBaselinTemplateQuery">
        update asset set
        baseline_template_id=
        <foreach collection="assetId" item="item" index="index" open="case id" close="end,">
            when #{item} then #{baselineTemplateId[${index}]}
        </foreach>
        gmt_modified=#{gmtModify},modify_user=#{modifyUser}
        where
        id in
        <foreach collection="assetId" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
        and status=1
    </update>
    <update id="updateAssetStatusById">
        update asset
        set asset_status=#{assetStatus}
        where id=#{assetId}
    </update>
    <update id="startRollback" parameterType="com.antiy.asset.vo.request.AssetRollbackRequest">
        <foreach collection="rollBackInfo" separator=";" item="item">
            <choose>
                <when test="item.operationType==1">
                    update ${item.rollbackTableName} set status=0
                    where asset_id=#{assetId} and ${item.filedName}=#{item.filedValue}
                </when>
                <when test="item.operationType==2">
                    update ${item.rollbackTableName} set status=1
                    where asset_id=#{assetId} and ${item.filedName}=#{item.filedValue}
                </when>
                <when test="item.operationType==3">
                    update ${item.rollbackTableName} set ${item.filedName}=#{item.filedValue}
                    where id=#{assetId} and status=1
                </when>
            </choose>
        </foreach>
    </update>
    <select id="countCheckList" resultType="int">
        select count(*)
        from asset
        where status=1
        <if test="assetIds !=null and assetIds.size()>0">
            and a.id in
            <foreach collection="assetIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>
    <select id="queryCheckList" resultType="com.antiy.asset.vo.response.AssetResponse">
        SELECT
        a.id as stringId,
        a.`name`,
        a.`number`,
        a.manufacturer,
        a.asset_group as assetGroup,
        a.importance_degree as importanceDegree,
        a.category_model as categoryModel,
        GROUP_CONCAT(distinct air.ip) AS ips,
        GROUP_CONCAT(distinct amr.mac) AS macs,
        GROUP_CONCAT(distinct ab.name) AS businessName
        FROM
        asset AS a
        LEFT JOIN asset_ip_relation AS air ON air.asset_id = a.id and air.status=1
        LEFT JOIN asset_mac_relation AS amr ON amr.asset_id = a.id and amr.status=1
        LEFT JOIN asset_business_relation AS abr on a.id=abr.asset_id and abr.status=1
        LEFT JOIN asset_business AS ab ON abr.unique_id=ab.unique_id and ab.status=1
        where a.status=1
        <if test="assetIds !=null and assetIds.size()>0">
            and a.id in
            <foreach collection="assetIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        group by a.id
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <select id="queryAsset" resultType="com.antiy.asset.vo.response.AssetResponse">
        SELECT
        a.id as stringId,
        a.`name`,
        a.`number`,
        a.manufacturer,
        a.asset_group as assetGroup,
        a.importance_degree as importanceDegree,
        GROUP_CONCAT(distinct air.ip) AS ips,
        GROUP_CONCAT(distinct amr.mac) AS macs
        FROM
        asset AS a
        LEFT JOIN asset_ip_relation AS air ON air.asset_id = a.id and air.status=1
        LEFT JOIN asset_mac_relation AS amr ON amr.asset_id = a.id and amr.status=1

                <trim prefix="where" suffix="" prefixOverrides="and" suffixOverrides="and">
                    <include refid="assetRelationBusiness"></include>

                    and a.asset_status in (5,6)
                    and a.status=1
                </trim>
                <if test="categoryModels !=null and categoryModels.size()>0">
                    and a.category_model in
                    <foreach index="index" item="item" collection="categoryModels" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test=" areaIds != null and areaIds.length > 0 ">
                    and a.area_id in
                    <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                group by a.id
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <select id="countQueryAsset" resultType="int">
        select count(id)
        from
        (
            SELECT
            a.id
            FROM
            asset AS a
            LEFT JOIN asset_ip_relation AS air ON air.asset_id = a.id and air.status=1
            LEFT JOIN asset_mac_relation AS amr ON amr.asset_id = a.id and amr.status=1

            <trim prefix="where" prefixOverrides="and" suffixOverrides="and">
                <include refid="assetRelationBusiness"></include>
                and a.asset_status in (5,6)
                and a.status=1
            </trim>
            <if test="categoryModels !=null and categoryModels.size()>0">
                and a.category_model in
                <foreach index="index" item="item" collection="categoryModels" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" areaIds != null and areaIds.length > 0 ">
                and a.area_id in
                <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            group by a.id
        ) b
    </select>

    <sql id="assetRelationBusiness">
        <if test='multipleQuery != null and multipleQuery != "" '>
                ( a.`name` LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
                or a.`number` LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
                or air.`ip` LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
                or amr.`mac` LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            )
        </if>
        <if test="manufacturer != null and manufacturer.size()>0">
            and a.manufacturer in
            <foreach collection="manufacturer" item="e" separator="," open="(" close=")">
                #{e}
            </foreach>
        </if>
        <if test="assetGroup !=null and assetGroup.size()>0">
            <trim prefix="and (" suffix=" )"  suffixOverrides="or">
                <foreach collection="assetGroup" item="e"   open="" close="">
                    a.`asset_group` LIKE CONCAT('%',replace(replace(#{e},'%','\%'),'_','\_'),'%') or
                </foreach>
            </trim>
        </if>
        <if test="assetIds !=null and assetIds.size()>0">
            and a.id not in
            <foreach collection="assetIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </sql>
    <select id="queryBusinessByAssetId" resultType="com.antiy.asset.entity.AssetBusiness">
    select ab.id,ab.name,ab.importance from asset_business ab INNER JOIN asset_business_relation abr on ab.id =abr.asset_business_id
    where abr.asset_id=#{id} and abr.`status`=1
    </select>
    <select id="queryRollackInnfo" resultType="com.antiy.asset.entity.RollbackEntity">
     select filed_name filedName, filed_value filedValue,type operationType,rollback_table_name rollbackTableName,name name
     from asset_rollback
     where asset_id=#{assetId}
     and status=1

    </select>
    <select id="queryAssetInfo" resultType="com.antiy.asset.vo.response.AssetMatchResponse"
            parameterType="com.antiy.asset.vo.request.AssetMatchRequest">
        SELECT distinct CONCAT_WS('&amp;',air.ip,amr.mac) as keyId,a.number as assetNumber,a.name assetName
        from asset a
        left join asset_ip_relation air on a.id = air.asset_id and air.`status` = 1
        left join asset_mac_relation amr on a.id = amr.asset_id and amr.`status` = 1
        WHERE
        a.status = 1 and
        CONCAT_WS('&amp;',air.ip,amr.mac) in
        <foreach collection="ipMacPorts" open="(" separator="," item="item" close=")">
            CONCAT_WS('&amp;',#{item.ip},#{item.mac})
        </foreach>

    </select>
    <select id="queryIpByAreaId" resultType="com.antiy.asset.vo.response.AssetAreaAndIpResponse" parameterType="com.antiy.asset.vo.request.AssetIpRequest">

        SELECT
            a.area_id as areaId,
            r.ip
        FROM
            asset a
            LEFT JOIN asset_ip_relation r ON ( a.id = r.asset_id AND a.`status` = 1 AND r.`status` = 1 )
        WHERE
        LOCATE(#{areaId}, left(area_id, length(#{areaId})))>0

    </select>
    <select id="queryAssetCount" resultType="java.lang.Integer">
        SELECT
        count(distinct asset.id)
        FROM
        (
        select * from asset
        <where>
            <trim prefixOverrides="and">
                <include refid="mq_asset"/>
            </trim>
        </where>
        ) asset
        left join asset_ip_relation air on (asset.id = air.asset_id and air.status = 1)
        left join asset_mac_relation amr on (asset.id = amr.asset_id and amr.status = 1)
        left join baseline_template bt on asset.baseline_template_id = bt.id
        left join asset_business_relation abr on (asset.id=abr.asset_id and abr.status=1)
        left join asset_group_relation agr on (asset.id = agr.asset.id = agr.status = 1)
        <if test="departmentList != null and departmentList.size() > 0">
            left join asset_user au on (asset.responsible_user_id = au.id and au.status = 1)
        </if>
        <where>
            <trim prefixOverrides="and">
                <include refid="mq_relation"></include>
            </trim>
        </where>
    </select>
    <!--cd01资产列表查询-->
    <select id="queryAssetList" resultMap="BaseResultMap">
        SELECT
        asset.*,
        CONCAT_WS('/',asset.manufacturer,asset.name,asset.version) as mnv,
        GROUP_CONCAT( DISTINCT air.ip ) AS ip,
        GROUP_CONCAT( DISTINCT amr.mac ) AS mac,
        GROUP_CONCAT( DISTINCT abr.asset_business_id ) AS asset_business,
        bt.tp_name as baseline_template_name,
        anm.net_type_name as netTypeName
        FROM
        (
            select * from asset
            <where>
                <trim prefixOverrides="and">
                    <include refid="mq_asset"/>
                </trim>
            </where>
        ) asset
        left join asset_ip_relation air on (asset.id = air.asset_id and air.status = 1)
        left join asset_mac_relation amr on (asset.id = amr.asset_id and amr.status = 1)
        left join baseline_template bt on asset.baseline_template_id = bt.id
        left join asset_business_relation abr on (asset.id=abr.asset_id and abr.status=1)
        left join asset_group_relation agr on (asset.id = agr.asset.id = agr.status = 1)
        left join asset_nettype_manage anm on (asset.net_type = anm.id and anm.status = 1)
        <if test="departmentList != null and departmentList.size() > 0">
            left join asset_user au on (asset.responsible_user_id = au.id and au.status = 1)
        </if>
        <where>
            <trim prefixOverrides="and">
                <include refid="mq_relation"></include>
            </trim>
        </where>
        GROUP BY asset.id
        ORDER BY
        <choose>
            <when test="sortOrder != null and sortOrder != ''">
                <choose>
                    <when test="sortName != null and sortName != ''">
                        ${sortName} ${sortOrder}
                    </when>
                    <otherwise>
                        gmt_create ${sortOrder}
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                asset.id desc
            </otherwise>
        </choose>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <select id="queryManufacturer" resultType="java.lang.String">
        select distinct manufacturer from asset where status = 1
    </select>
    <select id="queryName" resultType="java.lang.String">
        select distinct name from asset where status = 1
    </select>
    <select id="queryVersion" resultType="java.lang.String">
        select distinct version from asset where status = 1
    </select>
    <select id="queryAssetGroup" resultType="com.antiy.asset.vo.response.SelectResponse">
        select distinct
            t2.id,
            t2.name as value
        from
            asset_group_relation t1
            left join asset_group t2 on t1.asset_group_id = t2.id
        where
            t1.status = 1
            and t2.status = 1
    </select>
    <select id="queryUser" resultType="com.antiy.asset.vo.response.SelectResponse">
        select distinct
            t2.id,
            t2.name as value
        from
            asset t1
            left join asset_user t2 on t1.responsible_user_id = t2.id
        where
            t1.responsible_user_id is not null
            and t1.status = 1
            and t2.status = 1
    </select>
    <select id="queryDepartment" resultType="com.antiy.asset.vo.response.SelectResponse">
        select distinct
            t3.id,
            t3.name as value
        from
            asset t1
            left join asset_user t2 on t1.responsible_user_id = t2.id
            left join asset_department t3 on t2.department_id = t3.id
        where
            t1.responsible_user_id is not null
            and t1.status = 1
            and t2.status = 1
            and t3.status = 1
    </select>
    <select id="queryTemplate" resultType="com.antiy.asset.vo.response.SelectResponse">
        select distinct
            t2.id,
            t2.tp_name as value
        from
            asset t1
            left join baseline_template t2 on t1.baseline_template_id = t2.id
        where
            t1.status = 1
            and t1.baseline_template_id is not null
    </select>
    <select id="queryBusiness" resultType="com.antiy.asset.vo.response.SelectResponse">
        select distinct
            t2.id,
            t2.name as value
        from
            asset_business_relation t1
            left join asset_business t2 on t1.asset_business_id = t2.id and t2.status = 1
        where t2.id is not null
    </select>
    <select id="queryNetType" resultType="com.antiy.asset.vo.response.SelectResponse">
        select id,net_type_name as value from asset_nettype_manage  where status = 1
    </select>
    <!--资产主表的条件-->
    <sql id="mq_asset">
        <if test=" multipleQuery != null and multipleQuery.trim != ''">
            and (asset.name LIKE
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or asset.number LIKE
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or asset.serial LIKE
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or asset.machine_name LIKE
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or asset.code LIKE
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            )
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset.asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        <if test="location != null and location != ''">
            and asset.location like CONCAT('%',replace(replace(replace(#{location},'\\','\\\\'),'%','\%'),'_','\_'),'%')
        </if>
        <if test="houseLocation != null and houseLocation != ''">
            and asset.house_location like
            CONCAT('%',replace(replace(replace(#{houseLocation},'\\','\\\\'),'%','\%'),'_','\_'),'%')
        </if>
        <if test="key != null and key != ''">
            and asset.key like CONCAT('%',replace(replace(replace(#{key},'\\','\\\\'),'%','\%'),'_','\_'),'%')
        </if>
        <if test="names != null and names.size() > 0">
            and asset.name in
            <foreach item="item" collection="names" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="manufacturerList != null and manufacturerList.size() > 0">
            and asset.manufacturer in
            <foreach item="item" collection="manufacturerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="versionList != null and versionList.size() > 0">
            and asset.version in
            <foreach item="item" collection="versionList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="operationSystemList != null and operationSystemList.size() > 0">
            and asset.operation_system in
            <foreach item="item" collection="operationSystemList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="assetSourceList != null and assetSourceList.size() > 0">
            and asset.asset_source in
            <foreach item="item" collection="assetSourceList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="netType != null">
            and asset.netType = #{netType}
        </if>
        <if test=" areaIds != null and areaIds.size() > 0">
            and asset.area_id in
            <foreach item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" responsibleUserIdList != null and responsibleUserIdList.size() > 0">
            and asset.responsible_user_id in
            <foreach item="item" collection="responsibleUserIdList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" admittanceStatus != null">
            and asset.admittance_status = #{admittanceStatus}
        </if>
        <if test=" isBorrow != null">
            and asset.is_borrow = #{isBorrow}
        </if>
        <if test=" baselineTemplateId != null">
            and asset.baseline_template_id = #{baselineTemplateId}
        </if>
        <if test=" netStatus != null">
            and asset.net_status = #{netStatus}
        </if>
        <if test=" isSecrecy != null">
            and asset.is_secrecy = #{isSecrecy}
        </if>
        <if test=" isOrphan != null">
            and asset.is_orphan = #{isOrphan}
        </if>
        <if test=" importanceDegreeList != null and importanceDegreeList.size() > 0">
            and asset.importance_degree in
            <foreach item="item" collection="importanceDegreeList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" installTypeList != null and installTypeList.size() > 0">
            and asset.install_type in
            <foreach item="item" collection="installTypeList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="firstEnterStartTime != null">
            and asset.gmt_create &gt;= #{firstEnterStartTime }
        </if>
        <if test=" firstEnterEndTime != null">
            and asset.gmt_create &lt;= #{firstEnterEndTime }
        </if>
        <if test=" serviceLifeStartTime != null">
            and asset.service_life &gt;= #{serviceLifeStartTime }
        </if>
        <if test="serviceLifeEndTime != null">
            and asset.service_life &lt;= #{serviceLifeEndTime }
        </if>
        <if test=" installDateStartTime != null">
            and asset.install_date &gt;= #{installDateStartTime }
        </if>
        <if test="installDateEndTime != null">
            and asset.install_date &lt;= #{installDateEndTime }
        </if>
        <if test=" activiateDateStartTime != null">
            and asset.activiate_date &gt;= #{activiateDateStartTime }
        </if>
        <if test="activiateDateEndTime != null">
            and asset.activiate_date &lt;= #{activiateDateEndTime }
        </if>
        <if test=" updateStartTime != null">
            and asset.gmt_modified &gt;= #{updateStartTime }
        </if>
        <if test="updateEndTime != null">
            and asset.gmt_modified &lt;= #{updateEndTime }
        </if>
        and asset.status = 1
    </sql>
    <!--left join 后的查询条件-->
    <sql id="mq_relation">
        <if test=" multipleQuery != null and multipleQuery.trim != ''">
            <choose>
                <when test="unknownAssets">
                    and (air.ip like
                    CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
                    or replace(amr.mac,':','-') like
                    CONCAT('%',replace(replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),':','-'),'%')
                    )
                </when>
                <otherwise>
                    and (air.ip like
                    CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
                    or replace(amr.mac,':','-') like
                    CONCAT('%',replace(replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),':','-'),'%')
                    )
                </otherwise>
            </choose>
        </if>
        <if test="assetBusiness != null and assetBusiness.size() > 0">
            and abr.id in
            <foreach item="item" collection="assetBusiness" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="departmentList != null and departmentList.size() > 0">
            and au.department_id in
            <foreach item="item" collection="departmentList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>
</mapper>
