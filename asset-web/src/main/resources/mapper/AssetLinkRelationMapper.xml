<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetLinkRelationDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetLinkRelation">
        <id column="id" property="id"/>
        <result column="asset_id" property="assetId"/>
        <result column="asset_ip" property="assetIp"/>
        <result column="asset_port" property="assetPort"/>
        <result column="parent_asset_id" property="parentAssetId"/>
        <result column="parent_asset_ip" property="parentAssetIp"/>
        <result column="parent_asset_port" property="parentAssetPort"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
    </resultMap>
    <resultMap id="assetResultMap" type="com.antiy.asset.entity.Asset">
        <id column="id" property="id"/>
        <result column="asset_group" property="assetGroup"/>
        <result column="number" property="number"/>
        <result column="name" property="name"/>
        <result column="category_model_name" property="categoryModelName"/>
        <result column="serial" property="serial"/>
        <result column="area_id" property="areaId"/>
        <result column="category_model" property="categoryModel"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="asset_status" property="assetStatus"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="responsible_user_id" property="responsibleUserId"/>
        <result column="responsible_user_name" property="responsibleUserName"/>
        <result column="house_location" property="houseLocation"/>
        <result column="firmware_version" property="firmwareVersion"/>
        <result column="software_version" property="softwareVersion"/>
        <result column="uuid" property="uuid"/>
        <result column="contact_tel" property="contactTel"/>
        <result column="first_enter_nett" property="firstEnterNett"/>
        <result column="service_life" property="serviceLife"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
    </resultMap>
    <resultMap id="AssetNodeInfoResultMap" type="com.antiy.asset.vo.response.AssetNodeInfoResponse">
        <id column="id" property="stringId"/>
        <result column="asset_group" property="assetGroup"/>
        <result column="number" property="number"/>
        <result column="name" property="operationSystemName"/>
        <result column="asset_ip" property="ip"/>
        <result column="location" property="location"/>
        <result column="house_location" property="houseLocation"/>
        <result column="contact_tel" property="contactTel"/>
        <result column="install_type" property="installType"/>
    </resultMap>

    <resultMap id="ResultMap" type="com.antiy.asset.entity.Asset">
        <id column="id" property="id"/>
        <result column="asset_group" property="assetGroup"/>
        <result column="number" property="number"/>
        <result column="name" property="name"/>
        <result column="category_model_name" property="categoryModelName"/>
        <result column="ethernet_port" property="ethernetPort"/>
        <result column="serial_port" property="serialPort"/>
        <result column="install_type" property="installType"/>
        <result column="serial" property="serial"/>
        <result column="area_id" property="areaId"/>
        <result column="category_model" property="categoryModel"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="asset_status" property="assetStatus"/>
        <result column="admittance_status" property="admittanceStatus"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="system_bit" property="systemBit"/>
        <result column="responsible_user_id" property="responsibleUserId"/>
        <result column="responsible_user_name" property="responsibleUserName"/>
        <result column="location" property="location"/>
        <result column="latitude" property="latitude"/>
        <result column="longitude" property="longitude"/>
        <result column="house_location" property="houseLocation"/>
        <result column="firmware_version" property="firmwareVersion"/>
        <result column="software_version" property="softwareVersion"/>
        <result column="uuid" property="uuid"/>
        <result column="contact_tel" property="contactTel"/>
        <result column="email" property="email"/>
        <result column="asset_source" property="assetSource"/>
        <result column="importance_degree" property="importanceDegree"/>
        <result column="describle" property="describle"/>
        <result column="parent_id" property="parentId"/>
        <result column="tags" property="tags"/>
        <result column="first_enter_nett" property="firstEnterNett"/>
        <result column="first_discover_time" property="firstDiscoverTime"/>
        <result column="service_life" property="serviceLife"/>
        <result column="buy_date" property="buyDate"/>
        <result column="warranty" property="warranty"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
        <result column="ip" property="ip"/>
        <result column="mac" property="mac"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, asset_id, asset_ip, asset_port, parent_asset_id, parent_asset_ip, parent_asset_port, gmt_create, gmt_modified, memo, create_user, modify_user, status
    </sql>

    <sql id="Table_Name">
        asset_link_relation
    </sql>

    <sql id="All_Condition">
        <if test=" areaIds != null and areaIds.length > 0 ">
            and area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>

        <if test=" assetGroup != null and assetGroup != ''">
            and exists (select 1 from asset_group_relation b where asset.id = b.asset_id and b.asset_group_id =
            #{assetGroup} and b.status = 1)
        </if>

        <if test="softwareId != null and softwareId != ''">
            and exists (select 1 from asset_software_relation b where asset.id = b.asset_id and
            b.software_id=#{softwareId} and b.software_status !=8 and b.status=1)
        </if>

        <if test=" multipleQuery != null and multipleQuery != ''">
            and (name LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or number LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and ip_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and inner_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and outer_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_safety_equipment b where asset.id = b.asset_id and ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_safety_equipment b where asset.id = b.asset_id and mac like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            )
        </if>
        <if test=" categoryModels != null and categoryModels.length > 0">
            and category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" categoryModel != null and categoryModel != ''">
            and category_model = #{categoryModel}
        </if>
        <if test=" manufacturer != null and  manufacturer != ''">
            and manufacturer like binary CONCAT('%',replace(replace(#{manufacturer},'%','\%'),'_','\_'), '%')
        </if>
        <if test=" timeType != null and timeType == 2  and beginTime != null">
            and first_enter_nett &gt;= #{beginTime }
        </if>
        <if test=" timeType != null and timeType == 2  and endTime != null">
            and first_enter_nett &lt;= #{endTime }
        </if>
        <if test=" timeType != null and timeType == 1  and beginTime != null">
            and gmt_create &gt;= #{beginTime }
        </if>
        <if test=" timeType != null and timeType == 1  and endTime != null">
            and gmt_create &lt;= #{endTime }
        </if>
        <if test=" timeType != null and timeType == 3  and beginTime != null">
            and service_life &gt;= #{beginTime }
        </if>
        <if test=" timeType != null and timeType == 3  and endTime != null">
            and service_life &lt;= #{endTime }
        </if>
    </sql>

    <sql id="IF_Base_Column_List">
        <if test=" assetId != null">
            asset_id,
        </if>
        <if test=" assetIp != null">
            asset_ip,
        </if>
        <if test=" assetPort != null">
            asset_port,
        </if>
        <if test=" parentAssetId != null">
            parent_asset_id,
        </if>
        <if test=" parentAssetIp != null">
            parent_asset_ip,
        </if>
        <if test=" parentAssetPort != null">
            parent_asset_port,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
        <if test=" gmtModified != null">
            gmt_modified,
        </if>
        <if test=" memo != null">
            memo,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" modifyUser != null">
            modify_user,
        </if>
        <if test=" status != null">
            status,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" assetId != null">
            #{assetId },
        </if>
        <if test=" assetIp != null">
            #{assetIp },
        </if>
        <if test=" assetPort != null">
            #{assetPort },
        </if>
        <if test=" parentAssetId != null">
            #{parentAssetId },
        </if>
        <if test=" parentAssetIp != null">
            #{parentAssetIp },
        </if>
        <if test=" parentAssetPort != null">
            #{parentAssetPort },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            #{gmtModified },
        </if>
        <if test=" memo != null">
            #{memo },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" modifyUser != null">
            #{modifyUser },
        </if>
        <if test=" status != null">
            #{status },
        </if>
    </sql>

    <sql id="Set_Column_List">
        <if test=" assetId != null">
            asset_id = #{assetId },
        </if>
        <if test=" assetIp != null">
            asset_ip = #{assetIp },
        </if>
        <if test=" assetPort != null">
            asset_port = #{assetPort },
        </if>
        <if test=" parentAssetId != null">
            parent_asset_id = #{parentAssetId },
        </if>
        <if test=" parentAssetIp != null">
            parent_asset_ip = #{parentAssetIp },
        </if>
        <if test=" parentAssetPort != null">
            parent_asset_port = #{parentAssetPort },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            gmt_modified = #{gmtModified },
        </if>
        <if test=" memo != null">
            memo = #{memo },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" modifyUser != null">
            modify_user = #{modifyUser },
        </if>
        <if test=" status != null">
            status = #{status },
        </if>
    </sql>

    <sql id="Where_Column_List">
        <if test=" assetId != null">
            and asset_id = #{assetId }
        </if>
        <if test=" assetIp != null">
            and asset_ip = #{assetIp }
        </if>
        <if test=" assetPort != null">
            and asset_port = #{assetPort }
        </if>
        <if test=" parentAssetId != null">
            and parent_asset_id = #{parentAssetId }
        </if>
        <if test=" parentAssetIp != null">
            and parent_asset_ip = #{parentAssetIp }
        </if>
        <if test=" parentAssetPort != null">
            and parent_asset_port = #{parentAssetPort }
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            and gmt_modified = #{gmtModified }
        </if>
        <if test=" memo != null">
            and memo = #{memo }
        </if>
        <if test=" createUser != null">
            and create_user = #{createUser }
        </if>
        <if test=" modifyUser != null">
            and modify_user = #{modifyUser }
        </if>
        <if test=" status != null">
            and status = #{status }
        </if>
    </sql>
    <!--资产条件查询-->
    <sql id="Multiple_Query">
        <if test=" areaIds != null and areaIds.length > 0">
            and area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" ids != null and ids.length > 0">
            and id not in
            <foreach index="index" item="item" collection="ids" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" assetGroup != null">
            and exists (select 1 from asset_group_relation b where asset.id = b.asset_id and b.asset_group_id =
            #{assetGroup} and b.status = 1)
        </if>
        <if test=" multipleQuery != null">
            and (name LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or number LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or serial LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and ip_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and inner_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and outer_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            )
        </if>
        <if test=" categoryModels != null and categoryModels.length > 0">
            and category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" categoryModel != null">
            and category_model = #{categoryModel}
        </if>
        <if test=" manufacturer != null">
            and manufacturer like binary CONCAT('%',replace(replace(#{manufacturer},'%','\%'),'_','\_'), '%')
        </if>
        <if test=" operationSystem != null">
            and operation_system = #{operationSystem}
        </if>
        <if test=" timeType != null and timeType == 2  and beginTime != null">
            and first_enter_nett &gt;= #{beginTime }
        </if>
        <if test=" timeType != null and timeType == 2  and endTime != null">
            and first_enter_nett &lt;= #{endTime }
        </if>
        <if test=" timeType != null and timeType == 1  and beginTime != null">
            and gmt_create &gt;= #{beginTime }
        </if>
        <if test=" timeType != null and timeType == 1  and endTime != null">
            and gmt_create &lt;= #{endTime }
        </if>
    </sql>
    <insert id="insert" parameterType="com.antiy.asset.entity.AssetLinkRelation" useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>
    <insert id="insertBatch" parameterType="com.antiy.asset.entity.AssetLinkRelation">
        insert into
        <include refid="Table_Name"></include>
        (
        asset_id,
        asset_ip,
        asset_port,
        parent_asset_id,
        parent_asset_ip,
        parent_asset_port,
        gmt_create,
        memo,
        create_user
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.assetId},
            #{item.assetIp},
            #{item.assetPort},
            #{item.parentAssetId},
            #{item.parentAssetIp},
            #{item.parentAssetPort},
            #{item.gmtCreate},
            #{item.memo},
            #{item.createUser}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.antiy.asset.entity.AssetLinkRelation">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>

    <delete id="deleteById" parameterType="java.lang.String">
        delete from
        <include refid="Table_Name"></include>
        where id = #{id}
    </delete>

    <select id="getByWhere" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
    </select>

    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
    </select>

    <select id="findQuery" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <!--查询资产列表-->
    <select id="queryAssetList" resultMap="assetResultMap"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select * from (select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.admittance_status,
        a.number,
        a.name,
        a.serial,
        c.name as category_model_name,
        a.manufacturer, asset_status,
        a.operation_system,
        a.uuid,
        a.responsible_user_id,
        a.contact_tel,
        a.email,
        a.asset_source,
        a.gmt_create,
        case
        when replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',')
        when (select replace(rtrim(replace(concat(inner_ip,',',outer_ip),',',' ')),' ',',') from asset_network_equipment
        where asset_id = a.id and status = 1) is
        not
        null then
        (select replace(rtrim(replace(concat(inner_ip,',',outer_ip),',',' ')),' ',',') from asset_network_equipment
        where asset_id = a.id and status = 1)
        else '' end as ip,
        case
        when replace(rtrim(replace(group_concat( b.mac_address ),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat( b.mac_address ),',',' ')),' ',',')
        when (select mac_address from asset_network_equipment where asset_id = a.id and status = 1) is not null then
        (select mac_address from asset_network_equipment where asset_id = a.id and status = 1)
        else '' end as mac
        from
        asset a
        left join asset_network_card b on a.id = b.asset_id and b.status = 1
        left join asset_category_model c on a.category_model = c.id
        group by a.id
        order by a.gmt_create desc) asset
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <!--查询已与当前资产关联的资产，并且所有端口已经全部绑定的资产id-->
    <select id="queryLinkedAssetById" resultType="java.lang.String">
        select
          asset_id
        from
            asset_network_equipment a
        where
        1 = 1
        and a.port_size = (select count(1) from asset_link_relation b where b.parent_asset_id = a.id and b.asset_id = #{primaryKey})
        and a.status = 1
    </select>
    <!--查询关系表中已存在的资产id-->
    <select id="queryLinkedAssetWithoutId" resultType="java.lang.String">
        select distinct asset_id from asset_link_relation where status = 1
    </select>
    <!--查询资产通联关系-->
    <select id="queryLinekedRelationList" resultType="com.antiy.asset.entity.AssetLinkRelation"
            parameterType="com.antiy.asset.vo.query.AssetLinkRelationQuery">
        SELECT
        a.id,
        a.asset_id as assetId,
        b.category_model as categoryModel,
        d.name as categoryModelName,
        a.asset_ip as assetIp,
        c.category_model as parentCategoryModel,
        e.name as parentCategoryModelName,
        a.asset_port as assetPort,
        a.parent_asset_id as parentAssetId,
        a.parent_asset_ip as parentAssetIp,
        a.parent_asset_port as parentAssetPort
        FROM
        asset_link_relation a
        LEFT JOIN asset b ON a.asset_id = b.id
        LEFT JOIN asset c ON a.parent_asset_id = c.id
        left join asset_category_model d on b.category_model = d.id
        left join asset_category_model e on c.category_model = e.id
        where 1 = 1
        <if test="assetId != null">
            and a.asset_id = #{assetId}
        </if>
        <if test="parentAssetId != null">
            and a.parent_asset_id = #{parentAssetId}
        </if>
        <if test="categoryModel != null">
            and b.category_model = #{categoryModel}
        </if>
        <if test=" multipleQuery != null">
            and (b.name like binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or b.number like binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or a.asset_ip like binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            )
        </if>
        <if test=" parentMultipleQuery != null">
            and (c.name like binary CONCAT('%',replace(replace(#{parentMultipleQuery},'%','\%'),'_','\_'),'%')
            or c.number like binary CONCAT('%',replace(replace(#{parentMultipleQuery},'%','\%'),'_','\_'),'%')
            or a.parent_asset_ip like binary CONCAT('%',replace(replace(#{parentMultipleQuery},'%','\%'),'_','\_'),'%')
            )
        </if>
    </select>

    <select id="queryIpAddressByAssetId" resultType="java.lang.String">
        <choose>
            <when test="enable">
                select ip_address from asset_network_card t1 WHERE not exists
                (select 1 from asset_link_relation t2 where (t2.asset_id=#{assetId} and t1.ip_address= t2.asset_ip
                <if test="assetPort!=null and assetPort!=''">
                    and t2.asset_port=#{assetPort}
                </if>
                )
                or (t2.parent_asset_id=#{assetId} and t1.ip_address= t2.parent_asset_ip
                <if test="assetPort!=null and assetPort!=''">
                    and t2.parent_asset_port=#{assetPort}
                </if>
                ) and status='1'
                ) and
                asset_id=#{assetId} and
                status='1'
                union all select inner_ip as ip_address from asset_network_equipment t1 WHERE not exists
                (select 1 from asset_link_relation t2 where (t2.asset_id=#{assetId} and t1.inner_ip= t2.asset_ip
                <if test="assetPort!=null and assetPort!=''">
                    and t2.asset_port=#{assetPort}
                </if>
                )
                or(t2.parent_asset_id=#{assetId} and t1.inner_ip= t2.parent_asset_ip
                <if test="assetPort!=null and assetPort!=''">
                    and t2.parent_asset_port=#{assetPort}
                </if>
                ) and status='1'
                )
                and
                asset_id=#{assetId}
                and
                status='1'
            </when>
            <otherwise>
                select ip_address from asset_network_card WHERE asset_id=#{assetId} and status='1' union all
                select inner_ip as ip_address from asset_network_equipment WHERE asset_id=#{assetId} and status='1'
            </otherwise>
        </choose>
    </select>

    <update id="deleteRelationByAssetId" parameterType="java.util.Map">
        delete from asset_link_relation
        <where>
            <if test="assetIds!= null and assetIds.size() > 0">
                (asset_id, asset_ip) in (
                <foreach item="k" collection="assetIds.keys" separator="," index="index">
                    (${k},#{assetIds[${k}]})
                </foreach>
                )
                or (parent_asset_id, parent_asset_ip) in (
                <foreach item="k" collection="assetIds.keys" separator="," index="index">
                    (${k},#{assetIds[${k}]})
                </foreach>
                )
            </if>
        </where>
    </update>
    <select id="findUsePort" resultType="java.lang.Integer" parameterType="com.antiy.common.base.ObjectQuery">
        SELECT
        asset_port
        FROM
        `asset_link_relation`
        WHERE
        asset_id = #{assetId }
        AND asset_port IS NOT NULL UNION ALL
        SELECT
        parent_asset_port
        FROM
        `asset_link_relation`
        WHERE
        parent_asset_id = #{assetId }
        AND parent_asset_port IS NOT NULL;


    </select>
    <!--资产通联数量查询-->
    <select id="queryAssetLinkedCountList" resultType="com.antiy.asset.entity.AssetLinkedCount"
            parameterType="com.antiy.asset.vo.query.AssetLinkRelationQuery">
        SELECT
        a.id as assetId,
        a.name,
        a.number,
        a.category_model as categoryModel,
        t.NAME as categoryModelName,
        count( b.id ) AS canBind,
        count( b.id ) - count( c.id ) AS noBind,
        a.gmt_create
        FROM
        asset a
        LEFT JOIN asset_category_model t ON a.category_model = t.id
        LEFT JOIN asset_network_card b ON ( a.id = b.asset_id AND b.STATUS = 1 )
        LEFT JOIN asset_link_relation c ON ( (a.id = c.asset_id AND b.ip_address = c.asset_ip) or (a.id =
        c.parent_asset_id AND b.ip_address = c.parent_asset_ip) AND c.STATUS = 1 )
        WHERE 1 = 1
        and b.asset_id IS NOT NULL
        <if test="areaIds != null and areaIds.size() > 0">
            and a.area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="pcCategoryModels != null and pcCategoryModels.size() > 0">
            and a.category_model in
            <foreach collection="pcCategoryModels" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="categoryModels != null and categoryModels.size() > 0">
            and a.category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="statusList != null and statusList.size() > 0">
            and a.asset_status in
            <foreach collection="statusList" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="assetName != null and assetName != ''">
            and a.name like binary CONCAT('%',replace(replace(#{assetName},'%','\%'),'_','\_'),'%')
        </if>
        <if test="assetNumber != null and assetNumber != ''">
            and a.number like binary CONCAT('%',replace(replace(#{assetNumber},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY a.id
        UNION ALL
        SELECT
        a.id as assetId,
        a.name,
        a.number,
        a.category_model as categoryModel,
        t.NAME as categoryModelName,
        b.port_size AS canBind,
        b.port_size - count( c.id ) AS noBind,
        a.gmt_create
        FROM
        asset a
        LEFT JOIN asset_category_model t ON a.category_model = t.id
        LEFT JOIN asset_network_equipment b ON a.id = b.asset_id
        LEFT JOIN asset_link_relation c ON ( a.id = c.asset_id or a.id = c.parent_asset_id AND c.STATUS = 1 )
        WHERE 1 = 1
        and b.asset_id IS NOT NULL
        <if test="areaIds != null and areaIds.size() > 0">
            and a.area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="netCategoryModels != null and netCategoryModels.size() > 0">
            and a.category_model in
            <foreach collection="netCategoryModels" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="categoryModels != null and categoryModels.size() > 0">
            and a.category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="statusList != null and statusList.size() > 0">
            and a.asset_status in
            <foreach collection="statusList" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="assetName != null and assetName != ''">
            and a.name like binary CONCAT('%',replace(replace(#{assetName},'%','\%'),'_','\_'),'%')
        </if>
        <if test="assetNumber != null and assetNumber != ''">
            and a.number like binary CONCAT('%',replace(replace(#{assetNumber},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY a.id
        <choose>
            <when test="sortName != null and sortName != '' and sortOrder != null and sortOrder != ''">
                order by ${sortName} ${sortOrder}, gmt_create desc
            </when>
            <otherwise>
                order by gmt_create desc
            </otherwise>
        </choose>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <!--与当前资产通联的资产列表查询-->
    <select id="queryLinkedAssetListByAssetId" resultType="com.antiy.asset.entity.AssetLinkRelation"
            parameterType="com.antiy.asset.vo.query.AssetLinkRelationQuery">
        select distinct * from (SELECT
        c.id,
        a.id as assetId,
        a.NAME as assetName,
        c.asset_port as assetPort,
        a.category_model as categoryModel,
        ( SELECT NAME FROM asset_category_model WHERE id = a.category_model ) AS categoryModelName,
        b.ip_address as assetIp,
        c.parent_asset_id as parentAssetId,
        (select name from asset where id = c.parent_asset_id) as parentAssetName,
        ( SELECT NAME FROM asset_category_model WHERE id = ( SELECT category_model FROM asset WHERE id = parent_asset_id
        ) ) AS parentCategoryModelName,
        c.parent_asset_ip as parentAssetIp,
        c.parent_asset_port as parentAssetPort,
        c.gmt_create
        FROM
        asset a
        LEFT JOIN asset_network_card b ON a.id = b.asset_id and b.status = 1
        LEFT JOIN asset_link_relation c ON ( b.asset_id = c.asset_id AND b.ip_address = c.asset_ip and c.status = 1)
        WHERE
        a.id = #{primaryKey}
        and not EXISTS (select 1 from asset_link_relation d where d.parent_asset_ip = b.ip_address and d.parent_asset_id
        = b.asset_id)
        and b.ip_address is not null
        <if test="portCount != null and portCount.size() > 0">
            UNION ALL
            SELECT
            alr.id,
            t.id as assetId,
            t.NAME as assetName,
            t.port as assetPort,
            t.category_model as categoryModel,
            ( SELECT NAME FROM asset_category_model WHERE id = t.category_model ) AS categoryModelName,
            t.inner_ip as assetIp,
            alr.parent_asset_id as parentAssetId,
            (select name from asset where id = alr.parent_asset_id) as parentAssetName,
            ( SELECT NAME FROM asset_category_model WHERE id = ( SELECT category_model FROM asset WHERE id =
            alr.parent_asset_id ) ) AS parentCategoryModelName,
            alr.parent_asset_ip as parentAssetIp,
            alr.parent_asset_port as parentAssetPort,
            alr.gmt_create
            FROM
            (
            SELECT
            t2.id,
            t2.NAME,
            t2.category_model,
            t2.inner_ip,
            t1.`port`
            FROM
            <foreach collection="portCount" item="item" index="index" open="(" close=")">
                <if test="index == 0">
                    select #{item} port
                </if>
                <if test="index > 0">
                    union select #{item}
                </if>
            </foreach>
            t1
            LEFT JOIN (
            SELECT
            a.id,
            a.NAME,
            a.category_model,
            b.inner_ip,
            b.port_size
            FROM
            asset a,asset_network_equipment b
            WHERE
            a.id = b.asset_id
            and a.id = #{primaryKey}
            ) t2 ON t1.port &lt;= t2.port_size
            ) t
            LEFT JOIN asset_link_relation alr ON t.id = alr.asset_id
            AND t.port = alr.asset_port
            where t.id is not null
            and not EXISTS(select 1 from asset_link_relation where asset_id = t.id and asset_port = t.port)
            and not EXISTS(select 1 from asset_link_relation where parent_asset_id = t.id and parent_asset_port =
            t.port)
        </if>
        union all
        SELECT
        a.id,
        a.parent_asset_id as assetId,
        b.name as assetName,
        a.parent_asset_port as assetPort,
        b.category_model as categoryModel,
        ( SELECT NAME FROM asset_category_model WHERE id = b.category_model ) AS categoryModelName,
        a.parent_asset_ip as assetIp,
        a.asset_id as parentAssetId,
        (select name from asset where id = a.asset_id) as parentAssetName,
        (SELECT NAME FROM asset_category_model WHERE id = ( SELECT category_model FROM asset WHERE id = asset_id ) ) AS
        parentCategoryModelName,
        a.asset_ip as parentAssetIp,
        a.asset_port as parentAssetPort,
        a.gmt_create
        FROM
        asset_link_relation a left join asset b on a.parent_asset_id = b.id
        WHERE
        a.parent_asset_id = #{primaryKey}
        and a.status = 1
        union all
        SELECT
        a.id,
        a.asset_id AS assetId,
        b.NAME AS assetName,
        a.asset_port AS assetPort,
        b.category_model AS categoryModel,
        ( SELECT NAME FROM asset_category_model WHERE id = b.category_model ) AS categoryModelName,
        a.asset_ip AS assetIp,
        a.parent_asset_id AS parentAssetId,
        ( SELECT NAME FROM asset WHERE id = a.parent_asset_id ) AS parentAssetName,
        ( SELECT NAME FROM asset_category_model WHERE id = ( SELECT category_model FROM asset WHERE id = parent_asset_id
        ) ) AS parentCategoryModelName,
        a.parent_asset_ip AS parentAssetIp,
        a.parent_asset_port AS parentAssetPort,
        a.gmt_create
        FROM
        asset_link_relation a
        LEFT JOIN asset b ON a.asset_id = b.id
        WHERE
        a.asset_id = #{primaryKey}
        AND a.STATUS = 1) t
        order by CAST(assetPort AS SIGNED) asc
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <select id="queryPortSize" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select b.port_size from asset a left join asset_network_equipment b on a.id = b.asset_id where a.id = #{id}
    </select>
    <select id="queryAssetLinkedCount" resultType="java.lang.Integer">
        select count(1) count from (SELECT
        a.id as assetId,
        a.name,
        a.number,
        a.category_model as categoryModel,
        t.NAME as categoryModelName,
        count( b.id ) AS canBind,
        count( b.id ) - count( c.id ) AS noBind
        FROM
        asset a
        LEFT JOIN asset_category_model t ON a.category_model = t.id
        LEFT JOIN asset_network_card b ON ( a.id = b.asset_id AND b.STATUS = 1 )
        LEFT JOIN asset_link_relation c ON ( a.id = c.asset_id AND b.ip_address = c.asset_ip AND c.STATUS = 1 )
        WHERE 1 = 1
        and b.asset_id IS NOT NULL
        <if test="areaIds != null and areaIds.size() > 0">
            and a.area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="pcCategoryModels != null and pcCategoryModels.size() > 0">
            and a.category_model in
            <foreach collection="pcCategoryModels" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="statusList != null and statusList.size() > 0">
            and a.asset_status in
            <foreach collection="statusList" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>

        <if test="categoryModels != null and categoryModels.size() > 0">
            and a.category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="assetName != null and assetName != ''">
            and a.name like binary CONCAT('%',replace(replace(#{assetName},'%','\%'),'_','\_'),'%')
        </if>
        <if test="assetNumber != null and assetNumber != ''">
            and a.number like binary CONCAT('%',replace(replace(#{assetNumber},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY a.id
        UNION ALL
        SELECT
        a.id as assetId,
        a.name,
        a.number,
        a.category_model as categoryModel,
        t.NAME as categoryModelName,
        b.port_size AS canBind,
        b.port_size - count( c.id ) AS noBind
        FROM
        asset a
        LEFT JOIN asset_category_model t ON a.category_model = t.id
        LEFT JOIN asset_network_equipment b ON a.id = b.asset_id
        LEFT JOIN asset_link_relation c ON ( a.id = c.asset_id AND c.STATUS = 1 )
        WHERE 1 = 1
        and b.asset_id IS NOT NULL
        <if test="areaIds != null and areaIds.size() > 0">
            and a.area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="netCategoryModels != null and netCategoryModels.size() > 0">
            and a.category_model in
            <foreach collection="netCategoryModels" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="categoryModels != null and categoryModels.size() > 0">
            and a.category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="statusList != null and statusList.size() > 0">
            and a.asset_status in
            <foreach collection="statusList" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="assetName != null and assetName != ''">
            and a.name like binary CONCAT('%',replace(replace(#{assetName},'%','\%'),'_','\_'),'%')
        </if>
        <if test="assetNumber != null and assetNumber != ''">
            and a.number like binary CONCAT('%',replace(replace(#{assetNumber},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY a.id) t
    </select>
    <select id="queryLinkedCountAssetByAssetId" resultType="java.lang.Integer"
            parameterType="com.antiy.asset.vo.query.AssetLinkRelationQuery">
        select count(1) count from(select distinct t.* from (SELECT
        c.id,
        a.id as assetId,
        a.NAME as assetName,
        c.asset_port as assetPort,
        a.category_model as categoryModel,
        ( SELECT NAME FROM asset_category_model WHERE id = a.category_model ) AS categoryModelName,
        b.ip_address as assetIp,
        c.parent_asset_id as parentAssetId,
        (select name from asset where id = c.parent_asset_id) as parentAssetName,
        ( SELECT NAME FROM asset_category_model WHERE id = ( SELECT category_model FROM asset WHERE id = parent_asset_id
        ) ) AS parentCategoryModelName,
        c.parent_asset_ip as parentAssetIp,
        c.parent_asset_port as parentAssetPort
        FROM
        asset a
        LEFT JOIN asset_network_card b ON a.id = b.asset_id and b.status = 1
        LEFT JOIN asset_link_relation c ON ( b.asset_id = c.asset_id AND b.ip_address = c.asset_ip and c.status = 1)
        WHERE
        a.id = #{primaryKey}
        and b.ip_address is not null
        <if test="portCount != null and portCount.size() > 0">
            UNION ALL
            SELECT
            alr.id,
            t.id as assetId,
            t.NAME as assetName,
            t.port as assetPort,
            t.category_model as categoryModel,
            ( SELECT NAME FROM asset_category_model WHERE id = t.category_model ) AS categoryModelName,
            t.inner_ip as assetIp,
            alr.parent_asset_id as parentAssetId,
            (select name from asset where id = alr.parent_asset_id) as parentAssetName,
            ( SELECT NAME FROM asset_category_model WHERE id = ( SELECT category_model FROM asset WHERE id =
            alr.parent_asset_id ) ) AS parentCategoryModelName,
            alr.parent_asset_ip as parentAssetIp,
            alr.parent_asset_port as parentAssetPort
            FROM
            (
            SELECT
            t2.id,
            t2.NAME,
            t2.category_model,
            t2.inner_ip,
            t1.`port`
            FROM
            <foreach collection="portCount" item="item" index="index" open="(" close=")">
                <if test="index == 0">
                    select #{item} port
                </if>
                <if test="index > 0">
                    union select #{item}
                </if>
            </foreach>
            t1
            LEFT JOIN (
            SELECT
            a.id,
            a.NAME,
            a.category_model,
            b.inner_ip,
            b.port_size
            FROM
            asset a,asset_network_equipment b
            WHERE
            a.id = b.asset_id
            and a.id = #{primaryKey}
            ) t2 ON t1.port &lt;= t2.port_size
            ) t
            LEFT JOIN asset_link_relation alr ON t.id = alr.asset_id
            AND t.port = alr.asset_port
            where t.id is not null
            and not EXISTS(select 1 from asset_link_relation where asset_id = t.id and asset_port = t.port)
            and not EXISTS(select 1 from asset_link_relation where parent_asset_id = t.id and parent_asset_port =
            t.port)
        </if>
        union all
        SELECT
        a.id,
        a.parent_asset_id as assetId,
        b.name as assetName,
        a.parent_asset_port as assetPort,
        b.category_model as categoryModel,
        ( SELECT NAME FROM asset_category_model WHERE id = b.category_model ) AS categoryModelName,
        a.parent_asset_ip as assetIp,
        a.asset_id as parentAssetId,
        (select name from asset where id = a.asset_id) as parentAssetName,
        (SELECT NAME FROM asset_category_model WHERE id = ( SELECT category_model FROM asset WHERE id = asset_id ) ) AS
        parentCategoryModelName,
        a.asset_ip as parentAssetIp,
        a.asset_port as parentAssetPort
        FROM
        asset_link_relation a left join asset b on a.parent_asset_id = b.id
        WHERE
        a.parent_asset_id = #{primaryKey}
        and a.status = 1
        union all
        SELECT
        a.id,
        a.asset_id AS assetId,
        b.NAME AS assetName,
        a.asset_port AS assetPort,
        b.category_model AS categoryModel,
        ( SELECT NAME FROM asset_category_model WHERE id = b.category_model ) AS categoryModelName,
        a.asset_ip AS assetIp,
        a.parent_asset_id AS parentAssetId,
        ( SELECT NAME FROM asset WHERE id = a.parent_asset_id ) AS parentAssetName,
        ( SELECT NAME FROM asset_category_model WHERE id = ( SELECT category_model FROM asset WHERE id = parent_asset_id
        ) ) AS parentCategoryModelName,
        a.parent_asset_ip AS parentAssetIp,
        a.parent_asset_port AS parentAssetPort
        FROM
        asset_link_relation a
        LEFT JOIN asset b ON a.asset_id = b.id
        WHERE
        a.asset_id = #{primaryKey}
        AND a.STATUS = 1) t) p

    </select>

    <select id="queryAssetNodeInfo" parameterType="java.lang.String" resultMap="AssetNodeInfoResultMap">
        select a.id as id, a.number,  bcm.name, a.location,a.location, a.house_location, a.contact_tel, a.install_type, a.asset_group,
           concat(ifnull((select GROUP_CONCAT( ip_address ) from asset_network_card where asset_id = a.id and status = 1),''),' ',
        ifnull(asset_network_equipment.outer_ip,''),' ',ifnull( asset_network_equipment.inner_ip, '' ),' ',
        ifnull(asset_safety_equipment.ip,'') ) AS asset_ip
        from asset a
        left join asset_link_relation alr on a.id = alr.asset_id
        LEFT JOIN asset_safety_equipment asset_safety_equipment ON a.id = asset_safety_equipment.asset_id
        LEFT JOIN asset_network_equipment asset_network_equipment ON a.id = asset_network_equipment.asset_id
        left join baseline_category_model bcm on bcm.id = a.operation_system where a.id = #{assetId}
    </select>

    <select id="queryCategoryModes" resultType="java.lang.String">
        SELECT name as categoryModelName
        FROM
	      asset_category_model
        WHERE
	    name IN ( '计算设备', '网络设备' );
    </select>

    <select id="countAssetTopology" parameterType="com.antiy.asset.vo.query.AssetTopologyQuery"
            resultType="java.lang.Integer">
        SELECT
        COUNT( DISTINCT arl.asset_id )
        FROM
        asset_link_relation arl
        LEFT JOIN asset ON arl.asset_id = asset.id
        WHERE
        asset.asset_status BETWEEN 7 AND 8
        <if test="userAreaIds != null and userAreaIds.size() > 0">
            AND asset.area_id in
            <foreach collection="userAreaIds" separator="," open="(" close=")" item="areaId">
                #{areaId}
            </foreach>
        </if>
        AND arl.status = 1
        AND asset.status = 1
    </select>
    <!--查询可用ip-->
    <select id="queryUseableIp" resultType="java.lang.String">
        <choose>
            <when test="type == 'isNet'">
                select inner_ip as ip_address from asset_network_equipment WHERE asset_id=#{assetId} and status=1
            </when>
            <when test="type == 'isPc'">
                select ip_address from asset_network_card where asset_id = #{assetId} and status = 1 and ip_address not
                in
                (select asset_ip from asset_link_relation where asset_id = #{assetId} and status = 1 union all
                select parent_asset_ip from asset_link_relation where parent_asset_id = #{assetId} and status = 1)
            </when>
            <otherwise>

            </otherwise>
        </choose>

    </select>
    <select id="pulldownUnconnectedManufacturer" resultType="string"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select distinct manufacturer from asset
        where
        <trim prefixOverrides="and">
            <include refid="All_Condition"></include>
            <if test="primaryKey !=null">
                and asset.id != #{primaryKey}
            </if>
            and id not in (
            select distinct asset_id from
            (
            (select DISTINCT netcard.asset_id from asset_network_card netcard where netcard.status=1
            GROUP BY netcard.asset_id HAVING count(netcard.asset_id) &lt;=
            (select count(id) FROM asset_link_relation where asset_id=netcard.asset_id or
            parent_asset_id=netcard.asset_id and status=1))
            union
            (select DISTINCT relation.asset_id from asset_link_relation relation
            LEFT JOIN asset_network_equipment net on net.asset_id=relation.asset_id
            where (select count(id) from asset_link_relation where asset_id=net.asset_id or
            parent_asset_id=net.asset_id and status=1) >= net.port_size
            and relation.status=1 and net.status=1)
            union
            (select DISTINCT relation.parent_asset_id from asset_link_relation relation
            LEFT JOIN asset_network_equipment net on net.asset_id=relation.parent_asset_id
            where (select count(id) from asset_link_relation where asset_id=net.asset_id or
            parent_asset_id=net.asset_id and status=1) >= net.port_size
            and relation.status=1 and net.status=1)
            ) as assets
            )
            and manufacturer != ""
            and status=1
        </trim>
    </select>
    <select id="findListUnconnectedAsset" resultMap="ResultMap"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select * from (select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.admittance_status,
        a.number,
        a.name,
        a.install_type,
        a.serial,
        c.name as category_model_name,
        a.manufacturer, asset_status,
        a.operation_system,
        a.system_bit,
        a.location,
        a.house_location,
        a.latitude,
        a.longitude,
        a.firmware_version,
        a.uuid,
        a.responsible_user_id,
        a.contact_tel,
        a.email,
        a.asset_source,
        a.importance_degree,
        a.describle,
        a.parent_id,
        a.tags,
        a.first_enter_nett,
        a.service_life,
        a. buy_date,
        a.warranty,
        a.gmt_create,
        a.status,
        case
        when replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',')
        when (select replace(rtrim(replace(concat(inner_ip,',',outer_ip),',',' ')),' ',',') from asset_network_equipment
        where asset_id = a.id and status = 1) is
        not
        null then
        (select replace(rtrim(replace(concat(inner_ip,',',outer_ip),',',' ')),' ',',') from asset_network_equipment
        where asset_id = a.id and status = 1)
        when (select ip from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select ip from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as ip,
        case
        when replace(rtrim(replace(group_concat(b.mac_address),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat(b.mac_address),',',' ')),' ',',')
        when (select mac_address from asset_network_equipment where asset_id = a.id and status = 1) is not null then
        (select mac_address from asset_network_equipment where asset_id = a.id and status = 1)
        when (select mac from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select mac from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as mac
        from
        asset a
        left join asset_network_card b on a.id = b.asset_id and b.status = 1 and a.status=1
        left join asset_category_model c on a.category_model = c.id
        where a.status = 1
        <if test="primaryKey !=null">
            and a.id != #{primaryKey}
        </if>
        group by a.id
        ) asset
        <where>
            <trim prefixOverrides="and">
                <include refid="All_Condition"></include>
                and id not in (
                select distinct asset_id from
                (
                (select DISTINCT netcard.asset_id from asset_network_card netcard where netcard.status=1
                GROUP BY netcard.asset_id HAVING count(netcard.asset_id) &lt;=
                (select count(id) FROM asset_link_relation where asset_id=netcard.asset_id or
                parent_asset_id=netcard.asset_id and status=1))
                union
                (select DISTINCT relation.asset_id from asset_link_relation relation
                LEFT JOIN asset_network_equipment net on net.asset_id=relation.asset_id
                where (select count(id) from asset_link_relation where asset_id=net.asset_id or
                parent_asset_id=net.asset_id and status=1) >= net.port_size
                and relation.status=1 and net.status=1)
                union
                (select DISTINCT relation.parent_asset_id from asset_link_relation relation
                LEFT JOIN asset_network_equipment net on net.asset_id=relation.parent_asset_id
                where (select count(id) from asset_link_relation where asset_id=net.asset_id or
                parent_asset_id=net.asset_id and status=1) >= net.port_size
                and relation.status=1 and net.status=1)
                ) as assets
                )
            </trim>
            ORDER BY first_enter_nett desc,
            <if test=" ids != null and ids.length > 0">
                FIELD(`id`,
                <foreach index="index" item="item" collection="ids" separator=",">
                    #{item}
                </foreach>
                ) DESC,
            </if>
            gmt_create desc,
            id desc
        </where>

        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <select id="findUnconnectedCount" resultType="int" parameterType="com.antiy.asset.vo.query.AssetQuery">
        select count(1) count
        from
        (select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.admittance_status,
        a.number,
        a.name,
        a.install_type,
        a.serial,
        c.name as category_model_name,
        a.manufacturer, asset_status,
        a.operation_system,
        a.system_bit,
        a.location,
        a.house_location,
        a.latitude,
        a.longitude,
        a.firmware_version,
        a.uuid,
        a.responsible_user_id,
        a.contact_tel,
        a.email,
        a.asset_source,
        a.importance_degree,
        a.describle,
        a.parent_id,
        a.tags,
        a.first_enter_nett,
        a.service_life,
        a. buy_date,
        a.warranty,
        a.gmt_create,
        a.status,
        case
        when replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',')
        when (select replace(rtrim(replace(concat(inner_ip,',',outer_ip),',',' ')),' ',',') from asset_network_equipment
        where asset_id = a.id and status = 1) is
        not
        null then
        (select replace(rtrim(replace(concat(inner_ip,',',outer_ip),',',' ')),' ',',') from asset_network_equipment
        where asset_id = a.id and status = 1)
        when (select ip from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select ip from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as ip,
        case
        when replace(rtrim(replace(group_concat(b.mac_address),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat(b.mac_address),',',' ')),' ',',')
        when (select mac_address from asset_network_equipment where asset_id = a.id and status = 1) is not null then
        (select mac_address from asset_network_equipment where asset_id = a.id and status = 1)
        when (select mac from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select mac from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as mac
        from
        asset a
        left join asset_network_card b on a.id = b.asset_id and b.status = 1 and a.status=1
        left join asset_category_model c on a.category_model = c.id
        where a.status = 1
        <if test="primaryKey !=null">
            and a.id != #{primaryKey}
        </if>
        group by a.id
        ) asset
        <where>
            <trim prefixOverrides="and">
                <include refid="All_Condition"></include>
                and status=1
                <if test="primaryKey !=null">
                    and asset.id != #{primaryKey}
                </if>
                and id not in (
                select distinct asset_id from
                (
                (select DISTINCT netcard.asset_id from asset_network_card netcard where netcard.status=1
                GROUP BY netcard.asset_id HAVING count(netcard.asset_id) &lt;=
                (select count(id) FROM asset_link_relation where asset_id=netcard.asset_id or
                parent_asset_id=netcard.asset_id and status=1))
                union
                (select DISTINCT relation.asset_id from asset_link_relation relation
                LEFT JOIN asset_network_equipment net on net.asset_id=relation.asset_id
                where (select count(id) from asset_link_relation where asset_id=net.asset_id or
                parent_asset_id=net.asset_id and status=1) >= net.port_size
                and relation.status=1 and net.status=1)
                union
                (select DISTINCT relation.parent_asset_id from asset_link_relation relation
                LEFT JOIN asset_network_equipment net on net.asset_id=relation.parent_asset_id
                where (select count(id) from asset_link_relation where asset_id=net.asset_id or
                parent_asset_id=net.asset_id and status=1) >= net.port_size
                and relation.status=1 and net.status=1)
                ) as assets
                )
            </trim>
        </where>
    </select>

    <select id="queryGroupList" parameterType="com.antiy.asset.vo.query.AssetTopologyQuery"
            resultType="com.antiy.asset.entity.AssetGroup">
        SELECT id,`NAME`
        FROM asset_group
        WHERE id IN (
        SELECT asset_group_id
        FROM asset_group_relation grou
        where exists (
        select * from asset_link_relation relation left join asset on asset.id=relation.asset_id where relation.status=1
        and (relation.asset_id =grou.asset_id or relation.parent_asset_id=grou.asset_id)
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        ) and status=1
        )
        AND status = 1
    </select>
</mapper>