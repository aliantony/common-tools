<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetLinkRelationDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetLinkRelation">
        <id column="id" property="id"/>
        <result column="asset_id" property="assetId"/>
        <result column="asset_ip" property="assetIp"/>
        <result column="asset_port" property="assetPort"/>
        <result column="parent_asset_id" property="parentAssetId"/>
        <result column="parent_asset_ip" property="parentAssetIp"/>
        <result column="parent_asset_port" property="parentAssetPort"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
    </resultMap>
    <resultMap id="assetResultMap" type="com.antiy.asset.entity.Asset">
        <id column="id" property="id"/>
        <result column="asset_group" property="assetGroup"/>
        <result column="number" property="number"/>
        <result column="name" property="name"/>
        <result column="category_model_name" property="categoryModelName"/>
        <result column="serial" property="serial"/>
        <result column="area_id" property="areaId"/>
        <result column="category_model" property="categoryModel"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="asset_status" property="assetStatus"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="responsible_user_id" property="responsibleUserId"/>
        <result column="responsible_user_name" property="responsibleUserName"/>
        <result column="house_location" property="houseLocation"/>
        <result column="firmware_version" property="firmwareVersion"/>
        <result column="software_version" property="softwareVersion"/>
        <result column="uuid" property="uuid"/>
        <result column="contact_tel" property="contactTel"/>
        <result column="first_enter_nett" property="firstEnterNett"/>
        <result column="service_life" property="serviceLife"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
    </resultMap>
    <resultMap id="AssetNodeInfoResultMap" type="com.antiy.asset.vo.response.AssetNodeInfoResponse">
        <id column="id" property="stringId"/>
        <result column="asset_group" property="assetGroup"/>
        <result column="number" property="number"/>
        <result column="name" property="operationSystemName"/>
        <result column="asset_ip" property="ip"/>
        <result column="location" property="location"/>
        <result column="house_location" property="houseLocation"/>
        <result column="contact_tel" property="contactTel"/>
        <result column="install_type" property="installType"/>
    </resultMap>

    <resultMap id="ResultMap" type="com.antiy.asset.entity.Asset">
        <id column="id" property="id"/>
        <result column="asset_group" property="assetGroup"/>
        <result column="number" property="number"/>
        <result column="name" property="name"/>
        <result column="category_model_name" property="categoryModelName"/>
        <result column="ethernet_port" property="ethernetPort"/>
        <result column="serial_port" property="serialPort"/>
        <result column="install_type" property="installType"/>
        <result column="serial" property="serial"/>
        <result column="area_id" property="areaId"/>
        <result column="category_model" property="categoryModel"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="asset_status" property="assetStatus"/>
        <result column="admittance_status" property="admittanceStatus"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="system_bit" property="systemBit"/>
        <result column="responsible_user_id" property="responsibleUserId"/>
        <result column="responsible_user_name" property="responsibleUserName"/>
        <result column="location" property="location"/>
        <result column="latitude" property="latitude"/>
        <result column="longitude" property="longitude"/>
        <result column="house_location" property="houseLocation"/>
        <result column="firmware_version" property="firmwareVersion"/>
        <result column="software_version" property="softwareVersion"/>
        <result column="uuid" property="uuid"/>
        <result column="contact_tel" property="contactTel"/>
        <result column="email" property="email"/>
        <result column="asset_source" property="assetSource"/>
        <result column="importance_degree" property="importanceDegree"/>
        <result column="describle" property="describle"/>
        <result column="parent_id" property="parentId"/>
        <result column="tags" property="tags"/>
        <result column="first_enter_nett" property="firstEnterNett"/>
        <result column="first_discover_time" property="firstDiscoverTime"/>
        <result column="service_life" property="serviceLife"/>
        <result column="buy_date" property="buyDate"/>
        <result column="warranty" property="warranty"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="memo" property="memo"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
        <result column="status" property="status"/>
        <result column="ip" property="ip"/>
        <result column="mac" property="mac"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, asset_id, asset_ip, asset_port, parent_asset_id, parent_asset_ip, parent_asset_port, gmt_create, gmt_modified, memo, create_user, modify_user, status
    </sql>

    <sql id="Table_Name">
        asset_link_relation
    </sql>

    <sql id="IF_Base_Column_List">
        <if test=" assetId != null">
            asset_id,
        </if>
        <if test=" assetIp != null">
            asset_ip,
        </if>
        <if test=" assetPort != null">
            asset_port,
        </if>
        <if test=" parentAssetId != null">
            parent_asset_id,
        </if>
        <if test=" parentAssetIp != null">
            parent_asset_ip,
        </if>
        <if test=" parentAssetPort != null">
            parent_asset_port,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
        <if test=" gmtModified != null">
            gmt_modified,
        </if>
        <if test=" memo != null">
            memo,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" modifyUser != null">
            modify_user,
        </if>
        <if test=" status != null">
            status,
        </if>
        <if test=" partRoomNo != null">
            part_room_no,
        </if>
        <if test=" officeNet != null">
            office_net,
        </if>
        <if test=" officeNetState != null">
            office_net_state,
        </if>
        <if test=" switchState != null">
            switch_state,
        </if>
        <if test=" vlan != null">
            vlan,
        </if>
        <if test=" customField != null">
            custom_field,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" assetId != null">
            #{assetId },
        </if>
        <if test=" assetIp != null">
            #{assetIp },
        </if>
        <if test=" assetPort != null">
            #{assetPort },
        </if>
        <if test=" parentAssetId != null">
            #{parentAssetId },
        </if>
        <if test=" parentAssetIp != null">
            #{parentAssetIp },
        </if>
        <if test=" parentAssetPort != null">
            #{parentAssetPort },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            #{gmtModified },
        </if>
        <if test=" memo != null">
            #{memo },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" modifyUser != null">
            #{modifyUser },
        </if>
        <if test=" status != null">
            #{status },
        </if>
        <if test=" partRoomNo != null">
            #{partRoomNo},
        </if>
        <if test=" officeNet != null">
            #{officeNet},
        </if>
        <if test=" officeNetState != null">
            #{officeNetState},
        </if>
        <if test=" switchState != null">
            #{switchState},
        </if>
        <if test=" vlan != null">
            #{vlan},
        </if>
        <if test=" customField != null">
            #{customField},
        </if>
    </sql>

    <sql id="Set_Column_List">
        <if test=" assetId != null">
            asset_id = #{assetId },
        </if>
        <if test=" assetIp != null">
            asset_ip = #{assetIp },
        </if>
        <if test=" assetPort != null">
            asset_port = #{assetPort },
        </if>
        <if test=" parentAssetId != null">
            parent_asset_id = #{parentAssetId },
        </if>
        <if test=" parentAssetIp != null">
            parent_asset_ip = #{parentAssetIp },
        </if>
        <if test=" parentAssetPort != null">
            parent_asset_port = #{parentAssetPort },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            gmt_modified = #{gmtModified },
        </if>
        <if test=" memo != null">
            memo = #{memo },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" modifyUser != null">
            modify_user = #{modifyUser },
        </if>
        <if test=" status != null">
            status = #{status },
        </if>
    </sql>

    <sql id="Where_Column_List">
        <if test=" assetId != null">
            and asset_id = #{assetId }
        </if>
        <if test=" assetIp != null">
            and asset_ip = #{assetIp }
        </if>
        <if test=" assetPort != null">
            and asset_port = #{assetPort }
        </if>
        <if test=" parentAssetId != null">
            and parent_asset_id = #{parentAssetId }
        </if>
        <if test=" parentAssetIp != null">
            and parent_asset_ip = #{parentAssetIp }
        </if>
        <if test=" parentAssetPort != null">
            and parent_asset_port = #{parentAssetPort }
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            and gmt_modified = #{gmtModified }
        </if>
        <if test=" memo != null">
            and memo = #{memo }
        </if>
        <if test=" createUser != null">
            and create_user = #{createUser }
        </if>
        <if test=" modifyUser != null">
            and modify_user = #{modifyUser }
        </if>
        <if test=" status != null">
            and status = #{status }
        </if>
    </sql>
    <!--资产条件查询-->
    <sql id="Multiple_Query">
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        <if test=" areaIds != null and areaIds.length > 0">
            and area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" ids != null and ids.length > 0">
            and id not in
            <foreach index="index" item="item" collection="ids" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" assetGroup != null">
            and exists (select 1 from asset_group_relation b where asset.id = b.asset_id and b.asset_group_id =
            #{assetGroup} and b.status = 1)
        </if>
        <if test=" multipleQuery != null">
            and (name LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or number LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or serial LIKE binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and ip_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and inner_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            )
        </if>
        <if test=" categoryModels != null and categoryModels.length > 0">
            and category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" categoryModel != null">
            and category_model = #{categoryModel}
        </if>
        <if test=" manufacturer != null">
            and manufacturer like binary CONCAT('%',replace(replace(#{manufacturer},'%','\%'),'_','\_'), '%')
        </if>
        <if test=" operationSystem != null">
            and operation_system = #{operationSystem}
        </if>
        <if test=" timeType != null and timeType == 2  and beginTime != null">
            and first_enter_nett &gt;= #{beginTime }
        </if>
        <if test=" timeType != null and timeType == 2  and endTime != null">
            and first_enter_nett &lt;= #{endTime }
        </if>
        <if test=" timeType != null and timeType == 1  and beginTime != null">
            and gmt_create &gt;= #{beginTime }
        </if>
        <if test=" timeType != null and timeType == 1  and endTime != null">
            and gmt_create &lt;= #{endTime }
        </if>
    </sql>
    <insert id="insert" parameterType="com.antiy.asset.entity.AssetLinkRelation" useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>
    <insert id="insertBatch" parameterType="com.antiy.asset.entity.AssetLinkRelation">
        insert into
        <include refid="Table_Name"></include>
        (
        asset_id,
        asset_ip,
        asset_port,
        parent_asset_id,
        parent_asset_ip,
        parent_asset_port,
        gmt_create,
        memo,
        create_user
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.assetId},
            #{item.assetIp},
            #{item.assetPort},
            #{item.parentAssetId},
            #{item.parentAssetIp},
            #{item.parentAssetPort},
            #{item.gmtCreate},
            #{item.memo},
            #{item.createUser}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.antiy.asset.entity.AssetLinkRelation">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>

    <delete id="deleteById" parameterType="java.lang.String">
        delete from
        <include refid="Table_Name"></include>
        where id = #{id}
    </delete>
    <delete id="deleteByAssetId">
      delete from asset_link_relation where asset_id = #{assetId} or parent_asset_id = #{assetId}
    </delete>

    <select id="getByWhere" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
    </select>

    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
    </select>

    <select id="findQuery" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <!--查询资产列表-->
    <select id="queryAssetList" resultMap="assetResultMap"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select * from (select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.admittance_status,
        a.number,
        a.name,
        a.serial,
        c.name as category_model_name,
        a.manufacturer, asset_status,
        a.operation_system,
        a.uuid,
        a.responsible_user_id,
        a.contact_tel,
        a.email,
        a.asset_source,
        a.gmt_create,
        case
        when replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',')
        when (select inner_ip from asset_network_equipment
        where asset_id = a.id and status = 1) is
        not
        null then
        (select inner_ip from asset_network_equipment
        where asset_id = a.id and status = 1)
        else '' end as ip,
        case
        when replace(rtrim(replace(group_concat( b.mac_address ),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat( b.mac_address ),',',' ')),' ',',')
        when (select mac_address from asset_network_equipment where asset_id = a.id and status = 1) is not null then
        (select mac_address from asset_network_equipment where asset_id = a.id and status = 1)
        else '' end as mac
        from
        asset a
        left join asset_network_card b on a.id = b.asset_id and b.status = 1
        left join asset_category_model c on a.category_model = c.id
        group by a.id
        order by a.gmt_create desc) asset
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <!--查询已与当前资产关联的资产，并且所有端口已经全部绑定的资产id-->
    <select id="queryLinkedAssetById" resultType="java.lang.String">
        select
          asset_id
        from
            asset_network_equipment a
        where
        1 = 1
        and a.port_size = (select count(1) from asset_link_relation b where b.parent_asset_id = a.id and b.asset_id = #{primaryKey})
        and a.status = 1
    </select>
    <!--查询关系表中已存在的资产id-->
    <select id="queryLinkedAssetWithoutId" resultType="java.lang.String">
        select distinct asset_id from asset_link_relation where status = 1
    </select>
    <!--查询资产通联关系-->
    <select id="queryLinekedRelationList" resultType="com.antiy.asset.entity.AssetLinkRelation"
            parameterType="com.antiy.asset.vo.query.AssetLinkRelationQuery">
        SELECT
        a.id,
        a.asset_id as assetId,
        b.category_model as categoryModel,
        d.name as categoryModelName,
        a.asset_ip as assetIp,
        c.category_model as parentCategoryModel,
        e.name as parentCategoryModelName,
        a.asset_port as assetPort,
        a.parent_asset_id as parentAssetId,
        a.parent_asset_ip as parentAssetIp,
        a.parent_asset_port as parentAssetPort
        FROM
        asset_link_relation a
        LEFT JOIN asset b ON a.asset_id = b.id
        LEFT JOIN asset c ON a.parent_asset_id = c.id
        left join asset_category_model d on b.category_model = d.id
        left join asset_category_model e on c.category_model = e.id
        where 1 = 1
        <if test="assetId != null">
            and a.asset_id = #{assetId}
        </if>
        <if test="parentAssetId != null">
            and a.parent_asset_id = #{parentAssetId}
        </if>
        <if test="categoryModel != null">
            and b.category_model = #{categoryModel}
        </if>
        <if test=" multipleQuery != null">
            and (b.name like binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or b.number like binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or a.asset_ip like binary CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            )
        </if>
        <if test=" parentMultipleQuery != null">
            and (c.name like binary CONCAT('%',replace(replace(#{parentMultipleQuery},'%','\%'),'_','\_'),'%')
            or c.number like binary CONCAT('%',replace(replace(#{parentMultipleQuery},'%','\%'),'_','\_'),'%')
            or a.parent_asset_ip like binary CONCAT('%',replace(replace(#{parentMultipleQuery},'%','\%'),'_','\_'),'%')
            )
        </if>
    </select>

    <select id="queryIpAddressByAssetId" resultType="java.lang.String">
        <choose>
            <when test="enable">
                select ip_address from asset_network_card t1 WHERE not exists
                (select 1 from asset_link_relation t2 where (t2.asset_id=#{assetId} and t1.ip_address= t2.asset_ip
                <if test="assetPort!=null and assetPort!=''">
                    and t2.asset_port=#{assetPort}
                </if>
                )
                or (t2.parent_asset_id=#{assetId} and t1.ip_address= t2.parent_asset_ip
                <if test="assetPort!=null and assetPort!=''">
                    and t2.parent_asset_port=#{assetPort}
                </if>
                ) and status='1'
                ) and
                asset_id=#{assetId} and
                status='1'
                union all select inner_ip as ip_address from asset_network_equipment t1 WHERE not exists
                (select 1 from asset_link_relation t2 where (t2.asset_id=#{assetId} and t1.inner_ip= t2.asset_ip
                <if test="assetPort!=null and assetPort!=''">
                    and t2.asset_port=#{assetPort}
                </if>
                )
                or(t2.parent_asset_id=#{assetId} and t1.inner_ip= t2.parent_asset_ip
                <if test="assetPort!=null and assetPort!=''">
                    and t2.parent_asset_port=#{assetPort}
                </if>
                ) and status='1'
                )
                and
                asset_id=#{assetId}
                and
                status='1'
            </when>
            <otherwise>
                select ip_address from asset_network_card WHERE asset_id=#{assetId} and status='1' union all
                select inner_ip as ip_address from asset_network_equipment WHERE asset_id=#{assetId} and status='1'
            </otherwise>
        </choose>
    </select>
    <select id="checkIp" resultType="java.lang.Integer">
        select count(1) from asset_link_relation
        where
        (
        asset_id = #{id}
        and asset_ip = #{ip}
        <if test="port != null">
            and asset_port = #{port}
        </if>
        and status = 1
        )
        or
        (
        parent_asset_id = #{id}
        and parent_asset_ip = #{ip}
        <if test="port != null">
            and parent_asset_port = #{port}
        </if>
        and status = 1
        )
    </select>
    <update id="deleteRelationByAssetId" parameterType="java.util.Map">
        delete from asset_link_relation
        <where>
            <if test="assetIds!= null and assetIds.size() > 0">
                (asset_id, asset_ip) in (
                <foreach item="k" collection="assetIds.keys" separator="," index="index">
                    (${k},#{assetIds[${k}]})
                </foreach>
                )
                or (parent_asset_id, parent_asset_ip) in (
                <foreach item="k" collection="assetIds.keys" separator="," index="index">
                    (${k},#{assetIds[${k}]})
                </foreach>
                )
            </if>
        </where>
    </update>
    <select id="findUsePort" resultType="java.lang.Integer" parameterType="com.antiy.common.base.ObjectQuery">
        SELECT
        asset_port
        FROM
        `asset_link_relation`
        WHERE
        asset_id = #{assetId }
        AND asset_port IS NOT NULL UNION ALL
        SELECT
        parent_asset_port
        FROM
        `asset_link_relation`
        WHERE
        parent_asset_id = #{assetId }
        AND parent_asset_port IS NOT NULL;


    </select>
    <!--资产通联数量查询-->
    <select id="queryAssetLinkedCountList" resultType="com.antiy.asset.entity.AssetLinkedCount"
            parameterType="com.antiy.asset.vo.query.AssetLinkRelationQuery">
        SELECT
        a.id as assetId,
        a.area_id as areaId,
        a.name,
        a.number,
        a.category_model as categoryModel,
        count( b.id ) AS canBind,
        count( b.id ) - count( c.id ) AS noBind,
        a.gmt_create
        FROM
        asset a
        LEFT JOIN asset_ip_relation b ON ( a.id = b.asset_id AND b.STATUS = 1 )
        LEFT JOIN asset_link_relation c ON ( (a.id = c.asset_id AND b.ip = c.asset_ip) or (a.id =
        c.parent_asset_id AND b.ip = c.parent_asset_ip) AND c.STATUS = 1 )
        WHERE
        b.asset_id IS NOT NULL
        and a.status = 1
        <if test="areaIds != null and areaIds.size() > 0">
            and a.area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="categoryModels != null and categoryModels.size() > 0">
            and a.category_model in
            <foreach collection="categoryModels" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="statusList != null and statusList.size() > 0">
            and a.asset_status in
            <foreach collection="statusList" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="assetName != null and assetName != ''">
            and a.name like binary CONCAT('%',replace(replace(#{assetName},'%','\%'),'_','\_'),'%')
        </if>
        <if test="assetNumber != null and assetNumber != ''">
            and a.number like binary CONCAT('%',replace(replace(#{assetNumber},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY a.id
        <choose>
            <when test="sortName != null and sortName != '' and sortOrder != null and sortOrder != ''">
                order by ${sortName} ${sortOrder}, gmt_create desc
            </when>
            <otherwise>
                order by gmt_create desc
            </otherwise>
        </choose>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <!--与当前资产通联的资产列表查询-->
    <select id="queryLinkedAssetListByAssetId" resultType="com.antiy.asset.entity.AssetLinkRelation"
            parameterType="com.antiy.asset.vo.query.AssetLinkRelationQuery">
        SELECT
        alr.id,
        asset.id AS assetId,
        asset.NAME AS assetName,
        asset.category_model AS categoryModel,
        air.ip AS assetIp,
        air.net AS assetPort,
        alr.parent_asset_id AS parentAssetId,
        t.name as parentAssetName,
        t.category_model as parentCategoryModel,
        alr.parent_asset_ip AS parentAssetIp,
        alr.parent_asset_port AS parentAssetPort,
        t.number as parentAssetNumber,
        t.area_id as parentAssetAreaId,
        t.responsible_user_id as parentAssetUserId,
        alr.part_room_no as partRoomNo,
        alr.office_net as officeNet,
        alr.office_net_state as officeNetState,
        alr.switch_state as switchState,
        alr.vlan as vlan,
        alr.custom_field as customField,
        alr.memo as memo
        FROM
        asset asset
        LEFT JOIN asset_ip_relation air ON ( asset.id = air.asset_id AND air.STATUS = 1 )
        LEFT JOIN asset_link_relation alr ON ( air.ip = alr.asset_ip AND asset.id = alr.asset_id AND alr.STATUS = 1)
        left join asset t on alr.parent_asset_id = t.id
        WHERE
        asset.id = #{primaryKey}
        AND NOT EXISTS ( SELECT 1 FROM asset_link_relation d WHERE d.parent_asset_ip = air.ip AND d.parent_asset_id =
        asset.id )
        UNION
        SELECT
        alr.id,
        asset.id AS assetId,
        asset.NAME AS assetName,
        asset.category_model AS categoryModel,
        air.ip AS assetIp,
        air.net AS assetPort,
        alr.asset_id AS parentAssetId,
        t.name as parentAssetName,
        t.category_model as parentCategoryModel,
        alr.asset_ip AS parentAssetIp,
        alr.parent_asset_port AS parentAssetPort,
        t.number as parentAssetNumber,
        t.area_id as parentAssetAreaId,
        t.responsible_user_id as parentAssetUserId,
        alr.part_room_no as partRoomNo,
        alr.office_net as officeNet,
        alr.office_net_state as officeNetState,
        alr.switch_state as switchState,
        alr.vlan as vlan,
        alr.custom_field as customField,
        alr.memo as memo
        FROM
        asset asset
        LEFT JOIN asset_ip_relation air ON asset.id = air.asset_id
        AND air.STATUS = 1
        LEFT JOIN asset_link_relation alr ON (air.ip = alr.parent_asset_ip
        AND asset.id = alr.parent_asset_id
        AND alr.STATUS = 1 )
        left join asset t on alr.asset_id = t.id
        WHERE
        asset.id = #{primaryKey}
        AND NOT EXISTS ( SELECT 1 FROM asset_link_relation d WHERE d.asset_ip = air.ip AND d.asset_id = asset.id )
        ORDER BY assetPort
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <select id="queryPortSize" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select b.port_size from asset a left join asset_network_equipment b on a.id = b.asset_id where a.id = #{id}
    </select>
    <select id="queryAssetLinkedCount" resultType="java.lang.Integer">
        select count(1) count from (SELECT
        a.id as assetId,
        a.area_id as areaId,
        a.name,
        a.number,
        a.category_model,
        count( b.id ) AS canBind,
        count( b.id ) - count( c.id ) AS noBind,
        a.gmt_create
        FROM
        asset a
        LEFT JOIN asset_ip_relation b ON ( a.id = b.asset_id AND b.STATUS = 1 )
        LEFT JOIN asset_link_relation c ON ( (a.id = c.asset_id AND b.ip = c.asset_ip) or (a.id =
        c.parent_asset_id AND b.ip = c.parent_asset_ip) AND c.STATUS = 1 )
        WHERE
        b.asset_id IS NOT NULL
        and a.status = 1
        <if test="areaIds != null and areaIds.size() > 0">
            and a.area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="categoryModel != null">
            and a.category_model= #{categoryModel}
        </if>
        <if test="categoryModels != null and categoryModels.size() > 0">
            and a.category_model in
            <foreach collection="categoryModels" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="statusList != null and statusList.size() > 0">
            and a.asset_status in
            <foreach collection="statusList" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="assetName != null and assetName != ''">
            and a.name like binary CONCAT('%',replace(replace(#{assetName},'%','\%'),'_','\_'),'%')
        </if>
        <if test="assetNumber != null and assetNumber != ''">
            and a.number like binary CONCAT('%',replace(replace(#{assetNumber},'%','\%'),'_','\_'),'%')
        </if>
        GROUP BY a.id) t
    </select>
    <select id="queryLinkedCountAssetByAssetId" resultType="java.lang.Integer"
            parameterType="com.antiy.asset.vo.query.AssetLinkRelationQuery">
        select count(1) from(
          SELECT
            asset.id AS assetId,
            asset.NAME AS assetName,
            asset.category_model AS categoryModel,
            air.ip AS assetIp,
            air.net AS assetPort,
            alr.parent_asset_id AS parentAssetId,
            t.name as parentAssetName,
            t.category_model as parentCategoryModel,
            alr.parent_asset_ip AS parentAssetIp,
            alr.parent_asset_port AS parentAssetPort
            FROM
            asset asset
            LEFT JOIN asset_ip_relation air ON ( asset.id = air.asset_id AND air.STATUS = 1 )
            LEFT JOIN asset_link_relation alr ON ( air.ip = alr.asset_ip AND asset.id = alr.asset_id AND alr.STATUS = 1)
            left join asset t on alr.parent_asset_id = t.id
            WHERE
            asset.id = #{primaryKey}
            AND NOT EXISTS ( SELECT 1 FROM asset_link_relation d WHERE d.parent_asset_ip = air.ip AND d.parent_asset_id = asset.id )
            UNION
            SELECT
            asset.id AS assetId,
            asset.NAME AS assetName,
            asset.category_model AS categoryModel,
            air.ip AS assetIp,
            air.net AS assetPort,
            alr.asset_id AS parentAssetId,
            t.name as parentAssetName,
            t.category_model as parentCategoryModel,
            alr.asset_ip AS parentAssetIp,
            alr.asset_port AS parentAssetPort
            FROM
            asset asset
            LEFT JOIN asset_ip_relation air ON asset.id = air.asset_id
            AND air.STATUS = 1
            LEFT JOIN asset_link_relation alr ON (air.ip = alr.parent_asset_ip
            AND asset.id = alr.parent_asset_id
            AND alr.STATUS = 1 )
            left join asset t on alr.asset_id = t.id
            WHERE
            asset.id = #{primaryKey}
            AND NOT EXISTS ( SELECT 1 FROM asset_link_relation d WHERE d.asset_ip = air.ip AND d.asset_id = asset.id )
        ) t
    </select>

    <select id="queryAssetNodeInfo" parameterType="java.lang.String" resultMap="AssetNodeInfoResultMap">
        select distinct a.id as id, a.number,  bcm.name, a.location,a.location, a.house_location, a.contact_tel, a.install_type, a.asset_group,
           concat(ifnull((select GROUP_CONCAT( ip_address ) from asset_network_card where asset_id = a.id and status = 1),''),' ',
        ifnull(asset_network_equipment.outer_ip,''),' ',ifnull( asset_network_equipment.inner_ip, '' ),' ',
        ifnull(asset_safety_equipment.ip,'') ) AS asset_ip
        from asset a
        left join asset_link_relation alr on a.id = alr.asset_id
        LEFT JOIN asset_safety_equipment asset_safety_equipment ON a.id = asset_safety_equipment.asset_id
        LEFT JOIN asset_network_equipment asset_network_equipment ON a.id = asset_network_equipment.asset_id
        left join baseline_category_model bcm on bcm.id = a.operation_system where a.id = #{assetId}
    </select>

    <select id="queryCategoryModes" resultType="java.lang.String">
        SELECT name as categoryModelName
        FROM
	      asset_category_model
        WHERE
	    name IN ( '计算设备', '网络设备' );
    </select>

    <select id="countAssetTopology" parameterType="com.antiy.asset.vo.query.AssetTopologyQuery"
            resultType="java.lang.Integer">
        SELECT
        COUNT( DISTINCT arl.asset_id )
        FROM
        asset_link_relation arl
        LEFT JOIN asset ON arl.asset_id = asset.id
        WHERE
        asset.asset_status BETWEEN 7 AND 8
        <if test="userAreaIds != null and userAreaIds.size() > 0">
            AND asset.area_id in
            <foreach collection="userAreaIds" separator="," open="(" close=")" item="areaId">
                #{areaId}
            </foreach>
        </if>
        AND arl.status = 1
        AND asset.status = 1
    </select>
    <!--查询可用ip-->
    <select id="queryUseableIp" resultType="com.antiy.asset.vo.response.IpPortResponse">
        SELECT
            t1.ip,
            t1.net
        FROM
            asset_ip_relation t1
        where t1.asset_id = #{assetId}
        and t1.status = 1
        and not exists(select 1 from asset_link_relation t2 where (t1.asset_id = t2.asset_id and t1.ip = t2.asset_ip ) or (t1.asset_id = t2.parent_asset_id and t1.ip = t2.parent_asset_ip) and t2.status =1 )
    </select>
    <select id="pulldownUnconnectedManufacturer" resultType="string"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        SELECT
        lib.supplier
        FROM
        asset a
        LEFT JOIN asset_ip_relation b ON a.id = b.asset_id
        AND b. STATUS = 1
        LEFT JOIN asset_hard_soft_lib lib ON lib.business_id=a.business_id
        LEFT JOIN asset_link_relation d ON (
        (
        a.id = d.asset_id
        AND b.ip = d.asset_ip
        )
        OR (
        a.id = d.parent_asset_id
        AND b.ip = d.parent_asset_ip
        )
        )
        WHERE
        a. STATUS = 1
        and lib.supplier is not null
        <if test="primaryKey !=null">
            and a.id !=#{primaryKey}
        </if>
        GROUP BY
        a.id
        HAVING
        count(b.id) > count(d.id)
    </select>
    <select id="findListUnconnectedAsset" resultMap="ResultMap"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.number,
        a.name,
        a.first_enter_nett,
        group_concat(distinct b.ip) as ips,
        group_concat(distinct c.mac) as macs
        from
        asset a
        LEFT JOIN asset_ip_relation b ON a.id = b.asset_id
        AND b.STATUS = 1
        LEFT JOIN asset_mac_relation c ON a.id = c.asset_id
        AND c.STATUS = 1
        left join asset_link_relation d on ((a.id = d.asset_id and b.ip = d.asset_ip ) or (a.id = d.parent_asset_id and
        b.ip = d.parent_asset_ip))
        where a.status = 1
        <if test="primaryKey !=null">
            and a.id != #{primaryKey}
        </if>
        <if test="areaIds != null and areaIds.length > 0">
            and a.area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="categoryModels != null and categoryModels.length > 0">
            and a.category_model in
            <foreach collection="categoryModels" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and a.asset_status in
            <foreach collection="assetStatusList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test=" multipleQuery != null and multipleQuery != ''">
            and (a.name LIKE binary
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or a.number LIKE binary
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or b.ip like binary
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or c.mac like binary
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            )
        </if>
        <if test=" assetGroup != null and assetGroup != ''">
            and exists (select 1 from asset_group_relation agr where a.id = agr.asset_id and agr.asset_group_id =
            #{assetGroup} and agr.status = 1)
        </if>
        <if test=" beginTime != null">
            and a.first_enter_nett &gt;= #{beginTime }
        </if>
        <if test="endTime != null">
            and a.first_enter_nett &lt;= #{endTime }
        </if>
        group by a.id having count(b.id) > count(d.id)
        ORDER BY first_enter_nett desc,
        <if test=" ids != null and ids.length > 0">
            FIELD(`id`,
            <foreach index="index" item="item" collection="ids" separator=",">
                #{item}
            </foreach>
            ) DESC,
        </if>
        id desc
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>
    <select id="findUnconnectedCount" resultType="int" parameterType="com.antiy.asset.vo.query.AssetQuery">
        select count(1) count
        from
        (
        select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.number,
        a.name,
        group_concat(b.ip) as ips,
        group_concat(c.mac) as macs
        from
        asset a
        LEFT JOIN asset_ip_relation b ON a.id = b.asset_id
        AND b.STATUS = 1
        LEFT JOIN asset_mac_relation c ON a.id = c.asset_id
        AND c.STATUS = 1
        left join asset_link_relation d on ((a.id = d.asset_id and b.ip = d.asset_ip ) or (a.id = d.parent_asset_id and
        b.ip = d.parent_asset_ip))
        where a.status = 1
        <if test="primaryKey !=null">
            and a.id != #{primaryKey}
        </if>
        <if test="areaIds != null and areaIds.length > 0">
            and a.area_id in
            <foreach collection="areaIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="categoryModels != null and categoryModels.length > 0">
            and a.category_model in
            <foreach collection="categoryModels" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and a.asset_status in
            <foreach collection="assetStatusList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test=" multipleQuery != null and multipleQuery != ''">
            and (a.name LIKE binary
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or a.number LIKE binary
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or b.ip like binary
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            or c.mac like binary
            CONCAT('%',replace(replace(replace(#{multipleQuery},'\\','\\\\'),'%','\%'),'_','\_'),'%')
            )
        </if>
        <if test=" assetGroup != null and assetGroup != ''">
            and exists (select 1 from asset_group_relation agr where a.id = agr.asset_id and agr.asset_group_id =
            #{assetGroup} and agr.status = 1)
        </if>
        <if test=" beginTime != null">
            and a.first_enter_nett &gt;= #{beginTime }
        </if>
        <if test="endTime != null">
            and a.first_enter_nett &lt;= #{endTime }
        </if>
        group by a.id having count(b.id) > count(d.id)
        ) t
    </select>

    <select id="queryGroupList" parameterType="com.antiy.asset.vo.query.AssetTopologyQuery"
            resultType="com.antiy.asset.entity.AssetGroup">
        SELECT id,`NAME`
        FROM asset_group
        WHERE id IN (
        SELECT asset_group_id
        FROM asset_group_relation grou
        where exists (
        select * from asset_link_relation left join asset asset1 on asset_id = asset1.id LEFT JOIN asset
        asset2 on parent_asset_id = asset2.id
        where
        asset1.status=1
        and asset2.status=1
        and asset_link_relation.status=1
        <if test="userAreaIds != null and userAreaIds.size() > 0">
            AND asset1.area_id in
            <foreach collection="userAreaIds" separator="," open="(" close=")" item="areaId">
                #{areaId}
            </foreach>
        </if>
        <if test="userAreaIds != null and userAreaIds.size() > 0">
            AND asset2.area_id in
            <foreach collection="userAreaIds" separator="," open="(" close=")" item="areaId">
                #{areaId}
            </foreach>
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset1.asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset2.asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        AND (
        asset1.id = grou.asset_id
        OR asset2.id = grou.asset_id
        )
        ) and status=1
        )
        AND status = 1
    </select>

    <select id="findLinkRelation" resultType="com.antiy.asset.entity.AssetLink">
        select asset_id
        as
        assetId,
        asset1.category_model as categoryModal,parent_asset_id as parentAssetId,asset2.category_model as
        parentCategoryModal from asset_link_relation left join asset asset1 on asset_id = asset1.id LEFT JOIN asset
        asset2 on parent_asset_id = asset2.id
        where
        asset1.status=1
        and asset2.status=1
        and asset_link_relation.status=1
        <if test=" areaIds != null and areaIds.length > 0 ">
            and asset1.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" areaIds != null and areaIds.length > 0 ">
            and asset2.area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset1.asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset2.asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
    </select>

    <delete id="deleteByAssetIdList" parameterType="java.util.List">
        delete from asset_link_relation where asset_id in
        <foreach collection="assetIdList" item="assetId" open="(" close=")" separator=",">
            #{assetId}
        </foreach>
        or parent_asset_id in
        <foreach collection="assetIdList" item="assetId" open="(" close=")" separator=",">
            #{assetId}
        </foreach>
    </delete>
    <!--删除通联关系-->
    <delete id="deleteRelationByIp">
        <choose>
            <!--计算设备-->
            <when test="categoryModel == 1">
                delete
                from
                asset_link_relation
                where
                (
                asset_id = #{assetId}
                <if test="ips != null and ips.size() > 0">
                    and asset_ip in
                    <foreach collection="ips" item="item" open="(" close=")" separator=",">
                        #{item.ip}
                    </foreach>
                </if>
                )
                or
                (
                parent_asset_id = #{assetId}
                <if test="ips != null and ips.size() > 0">
                    and parent_asset_ip in
                    <foreach collection="ips" item="item" open="(" close=")" separator=",">
                        #{item.ip}
                    </foreach>
                </if>
                )
            </when>
            <when test="categoryModel == 2">
                delete
                from
                asset_link_relation
                where
                (
                asset_id = #{assetId}
                <if test="ips != null and ips.size() > 0">
                    and (asset_ip,asset_port) in
                    <foreach collection="ips" item="item" open="(" close=")" separator=",">
                        (#{item.ip},#{item.net})
                    </foreach>
                </if>
                )
                or
                (
                parent_asset_id = #{assetId}
                <if test="ips != null and ips.size() > 0">
                    and (parent_asset_ip,parent_asset_port) in
                    <foreach collection="ips" item="item" open="(" close=")" separator=",">
                        (#{item.ip},#{item.net})
                    </foreach>
                </if>
                )
            </when>
            <otherwise/>
        </choose>
    </delete>

</mapper>