<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetOperationRecordDao">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, target_object_id AS targetObjectId, content, create_user AS createUser, gmt_create AS gmtCreate, target_status AS targetStatus,process_result AS processResult,origin_status, process_result AS processResult
    </sql>
    <sql id="AssetStatusNode">
        id,target_object_id AS assetId,note
    </sql>


    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetOperationRecord">
        <id column="id" property="id"/>
        <result column="target_object_id" property="targetObjectId"/>
        <result column="origin_status" property="originStatus"/>
        <result column="target_status" property="targetStatus"/>
        <result column="content" property="content"/>
        <result column="operate_user_id" property="operateUserId"/>
        <result column="process_result" property="processResult"/>
        <result column="operate_user_name" property="operateUserName"/>
        <result column="note" property="note"/>
        <result column="file_info" property="fileInfo"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="create_user" property="createUser"/>
        <result column="status" property="status"/>
    </resultMap>
    <!-- 通用查询结果列 -->

    <sql id="Table_Name">
        asset_operation_record
    </sql>


    <sql id="IF_Base_Column_List">
        <if test=" targetObjectId != null">
            target_object_id,
        </if>
        <if test=" originStatus != null">
            origin_status,
        </if>
        <if test=" targetStatus != null">
            target_status,
        </if>
        <if test=" needVulScan != null">
            need_vul_scan,
        </if>
        <if test=" content != null">
            content,
        </if>
        <if test=" operateUserId != null">
            operate_user_id,
        </if>
        <if test=" processResult != null">
            process_result,
        </if>
        <if test=" operateUserName != null">
            operate_user_name,
        </if>
        <if test=" note != null">
            note,
        </if>
        <if test=" fileInfo != null">
            file_info,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" status != null">
            status,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" targetObjectId != null">
            #{targetObjectId },
        </if>
        <if test=" originStatus != null">
            #{originStatus },
        </if>
        <if test=" targetStatus != null">
            #{targetStatus },
        </if>
        <if test=" needVulScan != null">
            #{needVulScan },
        </if>
        <if test=" content != null">
            #{content },
        </if>
        <if test=" operateUserId != null">
            #{operateUserId },
        </if>
        <if test=" processResult != null">
            #{processResult },
        </if>
        <if test=" operateUserName != null">
            #{operateUserName },
        </if>
        <if test=" note != null">
            #{note },
        </if>
        <if test=" fileInfo != null">
            #{fileInfo },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" status != null">
            #{status },
        </if>
    </sql>

    <sql id="Set_Column_List">
        <if test=" targetObjectId != null">
            target_object_id = #{targetObjectId },
        </if>
        <if test=" originStatus != null">
            origin_status = #{originStatus },
        </if>
        <if test=" targetStatus != null">
            target_status = #{targetStatus },
        </if>
        <if test=" content != null">
            content = #{content },
        </if>
        <if test=" operateUserId != null">
            operate_user_id = #{operateUserId },
        </if>
        <if test=" processResult != null">
            process_result = #{processResult },
        </if>
        <if test=" operateUserName != null">
            operate_user_name = #{operateUserName },
        </if>
        <if test=" note != null">
            note = #{note },
        </if>
        <if test=" fileInfo != null">
            file_info = #{fileInfo },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" status != null">
            status = #{status },
        </if>
    </sql>

    <sql id="Where_Column_List">
        <if test=" targetObjectId != null">
            and target_object_id = #{targetObjectId }
        </if>
        <if test=" originStatus != null">
            and origin_status = #{originStatus }
        </if>
        <if test=" targetStatus != null">
            and target_status = #{targetStatus }
        </if>
        <if test=" content != null">
            and content = #{content }
        </if>
        <if test=" operateUserId != null">
            and operate_user_id = #{operateUserId }
        </if>
        <if test=" processResult != null">
            and process_result = #{processResult }
        </if>
        <if test=" operateUserName != null">
            and operate_user_name = #{operateUserName }
        </if>
        <if test=" note != null">
            and note = #{note }
        </if>
        <if test=" fileInfo != null">
            and file_info = #{fileInfo }
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" createUser != null">
            and create_user = #{createUser }
        </if>
        <if test=" status != null">
            and status = #{status }
        </if>
    </sql>


    <sql id="IF_Base_Column_List_ForBatch">
            target_object_id,origin_status,target_status,content,operate_user_id,operate_user_name,note,file_info,process_result,gmt_create,create_user,check_user_id,check_user_name,execute_user_id,execute_user_name,task_id
    </sql>




    <sql id="IF_Value_Column_List_ForBatch">
            #{entity.targetObjectId },
            #{entity.originStatus },
            #{entity.targetStatus },
            #{entity.content },
            #{entity.operateUserId },
            #{entity.operateUserName },
            #{entity.note },
            #{entity.fileInfo },
            #{entity.processResult },
            #{entity.gmtCreate },
            #{entity.createUser },
            #{entity.checkUserId},
             #{entity.checkUserName},
              #{entity.executeUserId},
               #{entity.executeUserName},
               #{entity.taskId}
    </sql>


    <insert id="insert" parameterType="com.antiy.asset.entity.AssetOperationRecord" useGeneratedKeys="true"
            keyProperty="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>

    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List_ForBatch"></include>
        </trim>
        values
        <foreach collection="list" item="entity" separator=",">
            (<include refid="IF_Value_Column_List_ForBatch"></include>)
        </foreach>
    </insert>


    <update id="update" parameterType="com.antiy.asset.entity.AssetOperationRecord">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultType="com.antiy.asset.entity.AssetOperationRecord" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"></include>
        where id = #{id}
    </delete>

    <select id="getByWhere" resultType="com.antiy.asset.entity.AssetOperationRecord" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
    </select>


    <select id="getAll" resultType="com.antiy.asset.entity.AssetOperationRecord">
        select *
        from
        <include refid="Table_Name"></include>
    </select>


    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
    </select>

    <select id="findQuery" resultType="com.antiy.asset.entity.AssetOperationRecord"
            parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <!-- 查询资产动态-->
    <select id="queryAssetAllStatusInfo" parameterType="java.lang.String" resultType="com.antiy.asset.entity.AssetStatusDetail">
      select
      <include refid="AssetStatusNode"/> ,origin_status as originStatus,operate_user_id as operateUserId,process_result as processResult,file_info as fileInfo,gmt_create as gmtCreate,operate_user_name as operateUserName,content
      from
      <include refid="Table_Name"/>
      where target_object_id = #{id} order by gmt_create desc
    </select>

    <!-- 查询上一步资产动态 -->
    <select id="queryAssetPreStatusInfo" resultType="com.antiy.asset.entity.AssetStatusDetail">
    select
    a.id,a.target_object_id as assetId,note,a.gmt_create,file_info as fileInfo,a.origin_status as  originStatus
    from
    <include refid="Table_Name"/> a
    inner join
      ( SELECT target_object_id, MAX( gmt_create ) gmt_create
        FROM  <include refid="Table_Name"/>
        GROUP BY target_object_id
        HAVING target_object_id IN 
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
          #{item}
        </foreach>
        ) b
        on  a.target_object_id = b.target_object_id and a.gmt_create = b.gmt_create
    </select>

    <!-- 查询最近的资产检查操作者-->
    <select id="getCreateUserByAssetId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select create_user from
        <include refid="Table_Name"/>
        where target_object_id = #{assetId} and origin_status = 7 order by id desc limit 1
    </select>

    <!-- 是否漏扫 -->
    <select id="getNeedVulScan" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select need_vul_scan from
        <include refid="Table_Name"/>
        where target_object_id = #{assetId} order by id desc limit 1
    </select>
    <select id="queryCheckSchemeByTaskId" resultType="com.antiy.asset.vo.response.AssetOperationRecordResponse">
        SELECT
        aor.id as stringId,
        aor.target_object_id as targetObjectId ,
        aor.file_info as fileInfo,
        aor.content,
        aor.note
        FROM
        asset_operation_record
        where  task_id=#{taskId}
        and status=1
    </select>
    <select id="listByAssetIds" resultMap="BaseResultMap">
        select
        a.target_object_id,a.origin_status
        from
        <include refid="Table_Name"/> a
        inner join
        ( SELECT max(id) id, target_object_id FROM asset_operation_record WHERE target_object_id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY target_object_id
        ) b
        USING(id)
    </select>
    <select id="queryAssetSchemListByAssetIds" resultType="com.antiy.asset.vo.response.AssetResponse">
<!--        SELECT
        aor.id as stringId,
        aor.target_object_id as targetObjectId ,
        aor.file_info as fileInfo,
        aor.content,
        aor.note
        FROM
        ( SELECT target_object_id, max( gmt_create ) AS gmt_create FROM `asset_operation_record`
        where (origin_status=#{orginStatusOne} or origin_status=#{orginStatusTwo}) and target_status=#{targetStatus}
        and status=1
        and
        asset_operation_record.target_object_id in
        <foreach collection="assetIds" open="(" close=")" item="e" separator=",">
            #{e}
        </foreach>
        GROUP BY target_object_id ) AS t_aor
        JOIN asset_operation_record AS aor ON t_aor.target_object_id = aor.target_object_id
        AND t_aor.gmt_create = aor.gmt_create-->

        SELECT
        a.id AS stringId,
        a.`name`,
        a.`number`,
        a.manufacturer,
        a.asset_group AS assetGroup,
        a.importance_degree AS importanceDegree,
        a.category_model AS categoryModel,
        GROUP_CONCAT( DISTINCT air.ip ) AS ips,
        GROUP_CONCAT( DISTINCT amr.mac ) AS macs,
        aor.file_info AS fileInfo,
        aor.content,
        aor.note,
        aor.check_user_id as checkUserId,
        aor.check_user_name as checkUserName,
        aor.execute_user_id as executeUserId,
        aor.execute_user_name as executeUserName
        FROM
        asset AS a
        LEFT JOIN asset_ip_relation AS air ON air.asset_id = a.id
        AND air.STATUS = 1
        LEFT JOIN asset_mac_relation AS amr ON amr.asset_id = a.id
        AND amr.STATUS = 1
        LEFT JOIN asset_business_relation AS abr ON a.id = abr.asset_id
        AND abr.STATUS = 1
        LEFT JOIN (
        SELECT
        target_object_id,
        max( gmt_create ) AS gmt_create
        FROM
        `asset_operation_record`
        WHERE
        (origin_status=#{orginStatusOne} or origin_status=#{orginStatusTwo}) and target_status=#{targetStatus}
        AND STATUS = 1
        <if test="assetIds !=null and assetIds.size()>0">
            and
            asset_operation_record.target_object_id in
            <foreach collection="assetIds" open="(" close=")" item="e" separator=",">
                #{e}
            </foreach>
        </if>
        GROUP BY
        target_object_id
        ) AS t_aor ON a.id = t_aor.target_object_id

        LEFT JOIN asset_operation_record AS aor ON t_aor.target_object_id = aor.target_object_id
        AND t_aor.gmt_create = aor.gmt_create
        WHERE
        a.STATUS = 1
        <if test="assetIds !=null and assetIds.size()>0">
            and a.id  in
            <foreach collection="assetIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        GROUP BY
        a.id,aor.id

    </select>
</mapper>