<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetTopologyDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetTopology">
        <id column="id" property="id"/>
        <result column="topology_type" property="topologyType"/>
        <result column="relation" property="relation"/>
        <result column="create_user" property="createUser"/>
        <result column="gmt_create" property="gmtCreate"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, topology_type AS topologyType, relation, create_user AS createUser, gmt_create AS gmtCreate
    </sql>

    <sql id="Table_Name">
        asset_topology
    </sql>


    <sql id="IF_Base_Column_List">
        <if test=" topologyType != null">
            topology_type,
        </if>
        <if test=" relation != null">
            relation,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" topologyType != null">
            #{topologyType },
        </if>
        <if test=" relation != null">
            #{relation },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
    </sql>

    <sql id="Set_Column_List">
        <if test=" topologyType != null">
            topology_type = #{topologyType },
        </if>
        <if test=" relation != null">
            relation = #{relation },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
    </sql>

    <sql id="Where_Column_List">
        <if test=" topologyType != null">
            and topology_type = #{topologyType }
        </if>
    </sql>

    <!--资产条件查询-->
    <sql id="Multiple_Query">
        <if test=" areaIds != null and areaIds.length >">
            and area_id in
            <foreach index="index" item="item" collection="areaIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test=" assetGroup != null and assetGroup != ''">
            and exists (select 1 from asset_group_relation b where asset.id = b.asset_id and b.asset_group_id =
            #{assetGroup} and b.status = 1)
        </if>
        <if test=" multipleQuery != null">
            and (name LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or number LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or serial LIKE CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%')
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and ip_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and inner_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and outer_ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_safety_equipment b where asset.id = b.asset_id and ip like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_card b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_network_equipment b where asset.id = b.asset_id and mac_address like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            or exists (select 1 from asset_safety_equipment b where asset.id = b.asset_id and mac like
            CONCAT('%',replace(replace(#{multipleQuery},'%','\%'),'_','\_'),'%') and b.status = 1)
            )
        </if>
        <if test="assetStatusList != null and assetStatusList.size() > 0">
            and asset_status in
            <foreach item="assetStatus" collection="assetStatusList" open="(" separator="," close=")">
                #{assetStatus}
            </foreach>
        </if>
        <if test="assetStatus != null">
            and asset_status = #{assetStatus}
        </if>
        <if test=" categoryModels != null and categoryModels.length > 0">
            and category_model in
            <foreach collection="categoryModels" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
        <if test=" categoryModel != null and categoryModel != ''">
            and category_model = #{categoryModel}
        </if>
    </sql>


    <insert id="insert" parameterType="com.antiy.asset.entity.AssetTopology">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>

    <update id="update" parameterType="com.antiy.asset.entity.AssetTopology">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultType="com.antiy.asset.entity.AssetTopology" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where id = #{id}
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from
        <include refid="Table_Name"></include>
        where id = #{id}
    </delete>

    <select id="getByWhere" resultType="com.antiy.asset.entity.AssetTopology" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
    </select>


    <select id="getAll" resultType="com.antiy.asset.entity.AssetTopology">
        select *
        from
        <include refid="Table_Name"></include>
    </select>


    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
    </select>

    <select id="findQuery" resultType="com.antiy.asset.entity.AssetTopology"
            parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <where>
            <trim prefixOverrides="and">
                <include refid="Where_Column_List"></include>
            </trim>
        </where>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <select id="findListAsset" resultMap="BaseResultMap"
            parameterType="com.antiy.asset.vo.query.AssetQuery">
        select * from (select
        a.id,
        a.area_id,
        a.asset_group,
        a.category_model,
        a.number,
        a.name,
        d.name as responsible_user_name,
        c.name as category_model_name,
        a.manufacturer, asset_status,
        a.responsible_user_id,
        a.first_enter_nett,
        (select count(id) from asset_vul_rel vul where vul.asset_id =a.id and vul.status=1 and vul.vul_status=3) as
        vul_count,
        (select count(id) from asset_vul_rel vul where vul.asset_id =a.id and vul.status=1 and vul.vul_status=3) as
        vul_count,
        case
        when replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat(b.ip_address),',',' ')),' ',',')
        when (select replace(rtrim(replace(concat(inner_ip,',',outer_ip),',',' ')),' ',',') from asset_network_equipment
        where asset_id = a.id and status = 1) is
        not
        null then
        (select replace(rtrim(replace(concat(inner_ip,',',outer_ip),',',' ')),' ',',') from asset_network_equipment
        where asset_id = a.id and status = 1)
        when (select ip from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select ip from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as ip,
        case
        when replace(rtrim(replace(group_concat(b.mac_address),',',' ')),' ',',') is not null then
        replace(rtrim(replace(group_concat(b.mac_address),',',' ')),' ',',')
        when (select mac_address from asset_network_equipment where asset_id = a.id and status = 1) is not null then
        (select mac_address from asset_network_equipment where asset_id = a.id and status = 1)
        when (select mac from asset_safety_equipment where asset_id = a.id and status = 1) is not null then
        (select mac from asset_safety_equipment where asset_id = a.id and status = 1)
        else '' end as mac
        from
        asset a
        left join asset_network_card b on a.id = b.asset_id and b.status = 1
        left join asset_category_model c on a.category_model = c.id
        left join asset_user d on a.responsible_user_id = d.id
        left join (
        select
        asset_id,
        count(id) un_install_count,
        any_value ( gmt_create ) AS gmt_create
        from
        asset_patch_rel
        group by
        asset_id
        ) asset_patch_rel_1 on asset_patch_rel_1.asset_id = a.id
        where a.status = 1
        group by a.id
        order by a.gmt_create desc) asset
        <where>
            <trim prefixOverrides="and">
                <include refid="Multiple_Query"></include>
            </trim>
        </where>
        ORDER BY
        <if test=" ids != null and ids.length > 0">
            FIELD(`id`,
            <foreach index="index" item="item" collection="ids" separator=",">
                #{item}
            </foreach>
            ) DESC,
        </if>
        id desc
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>


</mapper>