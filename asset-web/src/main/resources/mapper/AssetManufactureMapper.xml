<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antiy.asset.dao.AssetManufactureDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.antiy.asset.entity.AssetManufacture">
        <id column="id" property="id"/>
        <result column="pid" property="pid"/>
        <result column="asset_id" property="assetId"/>
        <result column="business_id" property="businessId"/>
        <result column="product_name" property="productName"/>
        <result column="name" property="productName"/>
        <result column="number" property="number"/>
        <result column="net_status" property="netStatus"/>
        <result column="version" property="version"/>
        <result column="unique_id" property="uniqueId"/>
        <result column="supplier" property="supplier"/>
        <result column="business_id" property="businessId"/>
        <result column="amount" property="amount"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="create_user" property="createUser"/>
        <result column="modify_user" property="modifyUser"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, pid, product_name, version, unique_id, supplier, business_id, gmt_create, gmt_modified, create_user, modify_user
    </sql>

    <sql id="Table_Name">
        asset_manufacture
    </sql>


    <sql id="IF_Base_Column_List">
        <if test=" pid != null">
            pid,
        </if>
        <if test=" businessId != null">
            business_id,
        </if>
        <if test=" productName != null">
            product_name,
        </if>
        <if test=" version != null">
            version,
        </if>
        <if test=" uniqueId != null">
            unique_id,
        </if>
        <if test=" supplier != null">
            supplier,
        </if>
        <if test=" gmtCreate != null">
            gmt_create,
        </if>
        <if test=" gmtModified != null">
            gmt_modified,
        </if>
        <if test=" createUser != null">
            create_user,
        </if>
        <if test=" modifyUser != null">
            modify_user,
        </if>
    </sql>

    <sql id="IF_Value_Column_List">
        <if test=" pid != null">
            #{pid },
        </if>
        <if test=" businessId != null">
            #{businessId },
        </if>
        <if test=" productName != null">
            #{productName },
        </if>
        <if test=" version != null">
            #{version },
        </if>
        <if test=" uniqueId != null">
            #{uniqueId },
        </if>
        <if test=" supplier != null">
            #{supplier },
        </if>
        <if test=" gmtCreate != null">
            #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            #{gmtModified },
        </if>
        <if test=" createUser != null">
            #{createUser },
        </if>
        <if test=" modifyUser != null">
            #{modifyUser },
        </if>
    </sql>

    <sql id="Set_Column_List">
        <if test=" pid != null">
            pid = #{pid },
        </if>
        <if test=" productName != null">
            #{productName },
        </if>
        <if test=" version != null">
            #{version },
        </if>
        <if test=" uniqueId != null">
            uniqueId = #{uniqueId },
        </if>
        <if test=" supplier != null">
            supplier = #{supplier },
        </if>
        <if test=" businessId != null">
            business_id = #{businessId },
        </if>
        <if test=" gmtCreate != null">
            gmt_create = #{gmtCreate },
        </if>
        <if test=" gmtModified != null">
            gmt_modified = #{gmtModified },
        </if>
        <if test=" createUser != null">
            create_user = #{createUser },
        </if>
        <if test=" modifyUser != null">
            modify_user = #{modifyUser },
        </if>
    </sql>

    <sql id="Where_Column_List">
        <if test=" pid != null">
            pid = #{pid },
        </if>
        <if test=" productName != null">
            product_name = #{productName },
        </if>
        <if test=" version != null">
            version = #{version },
        </if>
        <if test=" uniqueId != null">
            and unique_id = #{uniqueId }
        </if>
        <if test=" supplier != null">
            and supplier = #{supplier }
        </if>
        <if test=" businessId != null">
            and business_id = #{businessId }
        </if>
        <if test=" gmtCreate != null">
            and gmt_create = #{gmtCreate }
        </if>
        <if test=" gmtModified != null">
            and gmt_modified = #{gmtModified }
        </if>
        <if test=" createUser != null">
            and create_user = #{createUser }
        </if>
        <if test=" modifyUser != null">
            and modify_user = #{modifyUser }
        </if>
    </sql>

    <insert id="insert" parameterType="com.antiy.asset.entity.AssetManufacture" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        insert into
        <include refid="Table_Name"></include>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="IF_Base_Column_List"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="IF_Value_Column_List"></include>
        </trim>
    </insert>

    <update id="update" parameterType="com.antiy.asset.entity.AssetManufacture">
        update
        <include refid="Table_Name"></include>
        <trim prefix="SET" suffixOverrides=",">
            <include refid="Set_Column_List"></include>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键查询 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        where unique_id = #{uniqueId}
    </select>

    <delete id="deleteById" parameterType="java.lang.String">
        delete from
        <include refid="Table_Name"></include>
        where unique_id = #{uniqueId}
    </delete>

    <select id="getByWhere" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
    </select>

    <select id="findCount" resultType="int" parameterType="com.antiy.common.base.ObjectQuery">
        select count(1)
        from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
    </select>

    <select id="findQuery" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">
        select * from
        <include refid="Table_Name"></include>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        </trim>
        <if test="pageSize !=-1">
            LIMIT #{pageSize} offset #{pageOffset}
        </if>
    </select>

    <select id="getManufacture" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">
        SELECT
        manu.*,
        asset.id as asset_id,
        asset.net_status,
        asset.`name`,
        asset.number
        FROM
        ( SELECT * FROM
        <include refid="Table_Name"/>
        ) manu
        JOIN asset ON asset.business_id = manu.business_id
    </select>

    <!--<select id="initManufacture" resultMap="BaseResultMap" parameterType="com.antiy.common.base.ObjectQuery">-->
    <!--SELECT-->
    <!--temp2.*,asset.net_status-->
    <!--FROM-->
    <!--(-->
    <!--SELECT-->
    <!--lib.business_id,-->
    <!--lib.version,-->
    <!--lib.product_name-->
    <!--FROM-->
    <!--asset_hard_soft_lib lib-->
    <!--JOIN (-->
    <!--SELECT-->
    <!--min( lib_.business_id ) AS business_id,-->
    <!--lib_.supplier,-->
    <!--count( lib_.supplier )-->
    <!--FROM-->
    <!--asset_hard_soft_lib lib_-->
    <!--GROUP BY-->
    <!--supplier-->
    <!--) temp ON lib.business_id = temp.business_id-->
    <!--) temp2 JOIN asset ON temp2.business_id = asset.business_id-->
    <!--</select>-->
</mapper>