/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 03 08:07:46 GMT 2020
 */

package com.boot.leecode;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Solution_ESTest extends com.boot.leecode.Solution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      boolean boolean0 = Solution.checkPermutation("AZ", "Zx.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Solution.checkPermutation((String) null, "wcpcytuk");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.boot.leecode.Solution", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = Solution.checkPermutation("AZ", "B\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = Solution.checkPermutation("c2+*hd,pC0)WCt", "c2+*hd,pC0)WCt");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boolean boolean0 = Solution.checkPermutation("c2+*hd,pC0)WCt", "G");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[28];
      Solution.main(stringArray0);
      assertEquals(28, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution solution0 = new Solution();
  }
}
